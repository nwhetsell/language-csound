{
  "about": "The contents of this file are derived from the source files of The Canonical Csound Reference Manual <https://github.com/csound/manual>. The Canonical Csound Reference Manual is licensed under the terms of the GNU Free Documentation License, Version 1.2 or any later version published by the Free Software Foundation; with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts. Copyrights of The Canonical Csound Reference Manual are held by the Massachusetts Institute of Technology (1986, 1992), Kevin Conder (2003), and others noted in individual source files. This file is licensed under the terms of the GNU Free Documentation License, Version 1.2 or any later version published by the Free Software Foundation; with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.",
  "completions": [
    {
      "leftLabel": "a",
      "snippet": "ATSadd ${1:ktimepnt}, ${2:kfmod}, ${3:(S|i)atsfile}, ${4:iFunctionTable}, ${5:ipartials/*, ipartialoffset, ipartialincr, igatefn*/}",
      "displayText": "ATSadd ktimepnt, kfmod, (S|i)atsfile, iFunctionTable, ipartials, ipartialoffset, ipartialincr, igatefn",
      "opcode": "ATSadd",
      "description": "uses the data from an ATS analysis file to perform additive synthesis.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ATSadd.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "ATSaddnz ${1:ktimepnt}, ${2:(S|i)atsfile}, ${3:ibands/*, ibandoffset, ibandincr*/}",
      "displayText": "ATSaddnz ktimepnt, (S|i)atsfile, ibands, ibandoffset, ibandincr",
      "opcode": "ATSaddnz",
      "description": "uses the data from an ATS analysis file to perform noise resynthesis.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ATSaddnz.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "ATSbufread ${1:ktimepnt}, ${2:kfmod}, ${3:(S|i)atsfile}, ${4:ipartials/*, ipartialoffset, ipartialincr*/}",
      "displayText": "ATSbufread ktimepnt, kfmod, (S|i)atsfile, ipartials, ipartialoffset, ipartialincr",
      "opcode": "ATSbufread",
      "description": "reads data from and ATS data file and stores it in an internal data table of frequency, amplitude pairs.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ATSbufread.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "ATScross ${1:ktimepnt}, ${2:kfmod}, ${3:(S|i)atsfile}, ${4:iFunctionTable}, ${5:kmylev}, ${6:kbuflev}, ${7:ipartials/*, ipartialoffset, ipartialincr, i, i*/}",
      "displayText": "ATScross ktimepnt, kfmod, (S|i)atsfile, iFunctionTable, kmylev, kbuflev, ipartials, ipartialoffset, ipartialincr, i, i",
      "opcode": "ATScross",
      "description": "perform cross synthesis from ATS analysis files.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ATScross.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "ATSinfo ${1:(S|i)atsfile}, ${2:ilocation}",
      "displayText": "ATSinfo (S|i)atsfile, ilocation",
      "opcode": "ATSinfo",
      "description": "reads data out of the header of an ATS file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ATSinfo.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "ATSinterpread ${1:kFrequency}",
      "displayText": "ATSinterpread kFrequency",
      "opcode": "ATSinterpread",
      "description": "allows a user to determine the frequency envelope of any ATSbufread.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ATSinterpread.html",
      "type": "function"
    },
    {
      "leftLabel": "kk",
      "snippet": "ATSpartialtap ${1:ipartialnum}",
      "displayText": "ATSpartialtap ipartialnum",
      "opcode": "ATSpartialtap",
      "description": "returns a frequency, amplitude pair from an ATSbufread opcode.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ATSpartialtap.html",
      "type": "function"
    },
    {
      "leftLabel": "kk",
      "snippet": "ATSread ${1:ktimepnt}, ${2:(S|i)atsfile}, ${3:ipartial}",
      "displayText": "ATSread ktimepnt, (S|i)atsfile, ipartial",
      "opcode": "ATSread",
      "description": "reads data from an ATS file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ATSread.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "ATSreadnz ${1:ktimepnt}, ${2:(S|i)atsfile}, ${3:iband}",
      "displayText": "ATSreadnz ktimepnt, (S|i)atsfile, iband",
      "opcode": "ATSreadnz",
      "description": "reads data from an ATS file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ATSreadnz.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "ATSsinnoi ${1:ktimepnt}, ${2:ksinlev}, ${3:knzlev}, ${4:kfmod}, ${5:(S|i)atsfile}, ${6:ipartials/*, ipartialoffset, ipartialincr*/}",
      "displayText": "ATSsinnoi ktimepnt, ksinlev, knzlev, kfmod, (S|i)atsfile, ipartials, ipartialoffset, ipartialincr",
      "opcode": "ATSsinnoi",
      "description": "uses the data from an ATS analysis file to perform resynthesis.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ATSsinnoi.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "OSCinit ${1:iport}",
      "displayText": "OSCinit iport",
      "opcode": "OSCinit",
      "description": "Start a listening process for OSC messages to a particular port.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/OSCinit.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "OSCinitM ${1:Sgroup}, ${2:iport}",
      "displayText": "OSCinitM Sgroup, iport",
      "opcode": "OSCinitM",
      "description": "Start a listening process for multicast OSC messages to a particular port.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/OSCinitM.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "OSClisten ${1:ihandle}, ${2:Sdest}, ${3:Stype}",
      "displayText": "OSClisten ihandle, Sdest, Stype",
      "opcode": "OSClisten",
      "description": "Listen for OSC messages to a particular path.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/OSClisten.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "OSClisten ${1:ihandle}, ${2:Sdest}, ${3:Stype}",
      "displayText": "OSClisten ihandle, Sdest, Stype",
      "opcode": "OSClisten",
      "description": "Listen for OSC messages to a particular path.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/OSClisten.html",
      "type": "function"
    },
    {
      "leftLabel": "S[]k",
      "snippet": "OSCraw ${1:iport}",
      "displayText": "OSCraw iport",
      "opcode": "OSCraw",
      "description": "Listen for all OSC messages at a given port.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/OSCraw.html",
      "type": "function"
    },
    {
      "snippet": "OSCsend ${1:kwhen}, ${2:Shost}, ${3:kport}",
      "displayText": "OSCsend kwhen, Shost, kport",
      "opcode": "OSCsend",
      "description": "Sends data to other processes using the OSC protocol",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/OSCsend.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "active ${1:(S|i)nsnum/*, iopt, inorel*/}",
      "displayText": "active (S|i)nsnum, iopt, inorel",
      "opcode": "active",
      "description": "Returns the number of active instances of an instrument.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/active.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "active ${1:(S|k)nsnum/*, iopt, inorel*/}",
      "displayText": "active (S|k)nsnum, iopt, inorel",
      "opcode": "active",
      "description": "Returns the number of active instances of an instrument.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/active.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "adsr ${1:iatt}, ${2:iDecayTime}, ${3:islev}, ${4:irel/*, iDelayTime*/}",
      "displayText": "adsr iatt, iDecayTime, islev, irel, iDelayTime",
      "opcode": "adsr",
      "description": "Calculates the classical ADSR envelope using linear segments.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/adsr.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "adsyn ${1:kamod}, ${2:kfmod}, ${3:ksmod}, ${4:(S|i)filcod/*, i*/}",
      "displayText": "adsyn kamod, kfmod, ksmod, (S|i)filcod, i",
      "opcode": "adsyn",
      "description": "Output is an additive set of individually controlled sinusoids, using an oscillator bank.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/adsyn.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "adsynt ${1:kAmplitude}, ${2:kFrequency}, ${3:iwfn}, ${4:ifreqfn}, ${5:iampfn}, ${6:icnt/*, iInitialPhase*/}",
      "displayText": "adsynt kAmplitude, kFrequency, iwfn, ifreqfn, iampfn, icnt, iInitialPhase",
      "opcode": "adsynt",
      "description": "Performs additive synthesis with an arbitrary number of partials, not necessarily harmonic.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/adsynt.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "adsynt2 ${1:kAmplitude}, ${2:kFrequency}, ${3:iwfn}, ${4:ifreqfn}, ${5:iampfn}, ${6:icnt/*, iInitialPhase*/}",
      "displayText": "adsynt2 kAmplitude, kFrequency, iwfn, ifreqfn, iampfn, icnt, iInitialPhase",
      "opcode": "adsynt2",
      "description": "Performs additive synthesis with an arbitrary number of partials -not necessarily harmonic- with interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/adsynt2.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "aftouch ${1:imin/*, imax*/}",
      "displayText": "aftouch imin, imax",
      "opcode": "aftouch",
      "description": "Get the current after-touch value for this channel.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/aftouch.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "alpass ${1:aSignal}, ${2:(a|k)rvt}, ${3:ilpt/*, iskip, insmps*/}",
      "displayText": "alpass aSignal, (a|k)rvt, ilpt, iskip, insmps",
      "opcode": "alpass",
      "description": "Reverberates an input signal with a flat frequency response.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/alpass.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "ampmidi ${1:iscal/*, iFunctionTable*/}",
      "displayText": "ampmidi iscal, iFunctionTable",
      "opcode": "ampmidi",
      "description": "Get the velocity of the current MIDI event.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ampmidi.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "ampmidid ${1:ivelocity}, ${2:idecibels/*, i*/}",
      "displayText": "ampmidid ivelocity, idecibels, i",
      "opcode": "ampmidid",
      "description": "Musically map MIDI velocity to peak amplitude within a specified dynamic range in decibels.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ampmidid.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "ampmidid ${1:kvelocity}, ${2:idecibels/*, i*/}",
      "displayText": "ampmidid kvelocity, idecibels, i",
      "opcode": "ampmidid",
      "description": "Musically map MIDI velocity to peak amplitude within a specified dynamic range in decibels.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ampmidid.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "areson ${1:aSignal}, ${2:(a|k)cf}, ${3:(a|k)bw/*, iscl, iskip*/}",
      "displayText": "areson aSignal, (a|k)cf, (a|k)bw, iscl, iskip",
      "opcode": "areson",
      "description": "A notch filter whose transfer functions are the complements of the reson opcode.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/areson.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "aresonk ${1:kSignal}, ${2:kcf}, ${3:kbw/*, iscl, iskip*/}",
      "displayText": "aresonk kSignal, kcf, kbw, iscl, iskip",
      "opcode": "aresonk",
      "description": "A notch filter whose transfer functions are the complements of the reson opcode.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/aresonk.html",
      "type": "function"
    },
    {
      "leftLabel": "i[]k[]",
      "snippet": "array ${1:ival1…}",
      "displayText": "array ival1",
      "opcode": "array",
      "description": "Deprecated.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/array.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "atone ${1:aSignal}, ${2:khp/*, iskip*/}",
      "displayText": "atone aSignal, khp, iskip",
      "opcode": "atone",
      "description": "A hi-pass filter whose transfer functions are the complements of the tone opcode.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/atone.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "atonek ${1:kSignal}, ${2:khp/*, iskip*/}",
      "displayText": "atonek kSignal, khp, iskip",
      "opcode": "atonek",
      "description": "A hi-pass filter whose transfer functions are the complements of the tonek opcode.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/atonek.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "atonex ${1:aSignal}, ${2:(a|k)hp/*, inumlayer, iskip*/}",
      "displayText": "atonex aSignal, (a|k)hp, inumlayer, iskip",
      "opcode": "atonex",
      "description": "Emulates a stack of filters using the atone opcode.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/atonex.html",
      "type": "function"
    },
    {
      "leftLabel": "aa",
      "snippet": "babo ${1:aSignal}, ${2:ksrcx}, ${3:ksrcy}, ${4:ksrcz}, ${5:irx}, ${6:iry}, ${7:irz/*, idiff, ifno*/}",
      "displayText": "babo aSignal, ksrcx, ksrcy, ksrcz, irx, iry, irz, idiff, ifno",
      "opcode": "babo",
      "description": "A physical model reverberator.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/babo.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "balance ${1:aSignal}, ${2:acomp/*, ihp, iskip*/}",
      "displayText": "balance aSignal, acomp, ihp, iskip",
      "opcode": "balance",
      "description": "Adjust one audio signal according to the values of another.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/balance.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "bamboo ${1:kAmplitude}, ${2:idettack/*, inum, idamp, imaxshake, iFrequency, ifreq1, ifreq2*/}",
      "displayText": "bamboo kAmplitude, idettack, inum, idamp, imaxshake, iFrequency, ifreq1, ifreq2",
      "opcode": "bamboo",
      "description": "Semi-physical model of a bamboo sound.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/bamboo.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "barmodel ${1:kbcL}, ${2:kbcR}, ${3:iK}, ${4:ib}, ${5:kscan}, ${6:iT30}, ${7:ipos}, ${8:ivel}, ${9:iwid}",
      "displayText": "barmodel kbcL, kbcR, iK, ib, kscan, iT30, ipos, ivel, iwid",
      "opcode": "barmodel",
      "description": "Creates a tone similar to a struck metal bar.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/barmodel.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "bbcutm ${1:asource}, ${2:ibps}, ${3:isubdiv}, ${4:ibarlength}, ${5:iphrasebars}, ${6:inumrepeats/*, istutterspeed, istutterchance, ienvchoice*/}",
      "displayText": "bbcutm asource, ibps, isubdiv, ibarlength, iphrasebars, inumrepeats, istutterspeed, istutterchance, ienvchoice",
      "opcode": "bbcutm",
      "description": "Generates breakbeat-style cut-ups of a mono audio stream.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/bbcutm.html",
      "type": "function"
    },
    {
      "leftLabel": "aa",
      "snippet": "bbcuts ${1:asource1}, ${2:asource2}, ${3:ibps}, ${4:isubdiv}, ${5:ibarlength}, ${6:iphrasebars}, ${7:inumrepeats/*, istutterspeed, istutterchance, ienvchoice*/}",
      "displayText": "bbcuts asource1, asource2, ibps, isubdiv, ibarlength, iphrasebars, inumrepeats, istutterspeed, istutterchance, ienvchoice",
      "opcode": "bbcuts",
      "description": "Generates breakbeat-style cut-ups of a stereo audio stream.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/bbcuts.html",
      "type": "function"
    },
    {
      "leftLabel": "aik",
      "snippet": "betarand ${1:krange}, ${2:kalpha}, ${3:kbeta}",
      "displayText": "betarand krange, kalpha, kbeta",
      "opcode": "betarand",
      "description": "Beta distribution random number generator (positive values only).",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/betarand.html",
      "type": "function"
    },
    {
      "leftLabel": "aik",
      "snippet": "bexprnd ${1:krange}",
      "displayText": "bexprnd krange",
      "opcode": "bexprnd",
      "description": "Exponential distribution random number generator.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/bexprnd.html",
      "type": "function"
    },
    {
      "leftLabel": "a…",
      "snippet": "bformdec ${1:isetup}, ${2:aw}, ${3:ax}, ${4:ay}, ${5:az…}",
      "displayText": "bformdec isetup, aw, ax, ay, az",
      "opcode": "bformdec",
      "description": "Deprecated. Decodes an ambisonic B format signal.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/bformdec.html",
      "type": "function"
    },
    {
      "leftLabel": "a[]",
      "snippet": "bformdec1 ${1:isetup}, ${2:aw}",
      "displayText": "bformdec1 isetup, aw",
      "opcode": "bformdec1",
      "description": "Decodes an ambisonic B format signal",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/bformdec1.html",
      "type": "function"
    },
    {
      "leftLabel": "a…",
      "snippet": "bformdec1 ${1:isetup}, ${2:aw…}",
      "displayText": "bformdec1 isetup, aw",
      "opcode": "bformdec1",
      "description": "Decodes an ambisonic B format signal",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/bformdec1.html",
      "type": "function"
    },
    {
      "leftLabel": "a…",
      "snippet": "bformenc ${1:aSignal}, ${2:kalpha}, ${3:kbeta/*, kord0, kord1, k, k*/}",
      "displayText": "bformenc aSignal, kalpha, kbeta, kord0, kord1, k, k",
      "opcode": "bformenc",
      "description": "Deprecated. Codes a signal into the ambisonic B format.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/bformenc.html",
      "type": "function"
    },
    {
      "leftLabel": "a[]a…",
      "snippet": "bformenc1 ${1:aSignal}, ${2:kalpha}, ${3:kbeta}",
      "displayText": "bformenc1 aSignal, kalpha, kbeta",
      "opcode": "bformenc1",
      "description": "Codes a signal into the ambisonic B format.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/bformenc1.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "binit ${1:fin}, ${2:isize}",
      "displayText": "binit fin, isize",
      "opcode": "binit",
      "description": "PVS tracks to amplitude+frequency conversion.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/binit.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "biquad ${1:aSignal}, ${2:kb0}, ${3:kb1}, ${4:kb2}, ${5:ka0}, ${6:ka1}, ${7:ka2/*, iskip*/}",
      "displayText": "biquad aSignal, kb0, kb1, kb2, ka0, ka1, ka2, iskip",
      "opcode": "biquad",
      "description": "A sweepable general purpose biquadratic digital filter.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/biquad.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "biquada ${1:aSignal}, ${2:ab0}, ${3:ab1}, ${4:ab2}, ${5:aa0}, ${6:aa1}, ${7:aa2/*, iskip*/}",
      "displayText": "biquada aSignal, ab0, ab1, ab2, aa0, aa1, aa2, iskip",
      "opcode": "biquada",
      "description": "A sweepable general purpose biquadratic digital filter with a-rate parameters.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/biquada.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "bpf ${1:kx}, ${2:kx1}, ${3:ky1}, ${4:kx2}, ${5:k..}, ${6:kxn}, ${7:kyn}",
      "displayText": "bpf kx, kx1, ky1, kx2, k.., kxn, kyn",
      "opcode": "bpf",
      "description": "Break point function with linear interpolation",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/bpf.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "bpf ${1:kx}, ${2:kx1}, ${3:ky1}, ${4:kx2}, ${5:k..}, ${6:kxn}, ${7:kyn}, ${8:k}, ${9:k}",
      "displayText": "bpf kx, kx1, ky1, kx2, k.., kxn, kyn, k, k",
      "opcode": "bpf",
      "description": "Break point function with linear interpolation",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/bpf.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "bpf ${1:kx}, ${2:kx1}, ${3:ky1}, ${4:kx2}, ${5:k..}, ${6:kxn}, ${7:kyn}, ${8:k}, ${9:k}, ${10:k}, ${11:k}",
      "displayText": "bpf kx, kx1, ky1, kx2, k.., kxn, kyn, k, k, k, k",
      "opcode": "bpf",
      "description": "Break point function with linear interpolation",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/bpf.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "bqrez ${1:aSignal}, ${2:(a|k)fco}, ${3:(a|k)res/*, imode, iskip*/}",
      "displayText": "bqrez aSignal, (a|k)fco, (a|k)res, imode, iskip",
      "opcode": "bqrez",
      "description": "A second-order multi-mode filter.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/bqrez.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "butbp ${1:aSignal}, ${2:(a|k)Frequency}, ${3:(a|k)band/*, iskip*/}",
      "displayText": "butbp aSignal, (a|k)Frequency, (a|k)band, iskip",
      "opcode": "butbp",
      "description": "Same as the butterbp opcode.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/butbp.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "butbr ${1:aSignal}, ${2:(a|k)Frequency}, ${3:(a|k)band/*, iskip*/}",
      "displayText": "butbr aSignal, (a|k)Frequency, (a|k)band, iskip",
      "opcode": "butbr",
      "description": "Same as the butterbr opcode.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/butbr.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "buthp ${1:aSignal}, ${2:(a|k)Frequency/*, iskip*/}",
      "displayText": "buthp aSignal, (a|k)Frequency, iskip",
      "opcode": "buthp",
      "description": "Same as the butterhp opcode.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/buthp.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "butlp ${1:aSignal}, ${2:(a|k)Frequency/*, iskip*/}",
      "displayText": "butlp aSignal, (a|k)Frequency, iskip",
      "opcode": "butlp",
      "description": "Same as the butterlp opcode.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/butlp.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "butterbp ${1:aSignal}, ${2:(a|k)Frequency}, ${3:(a|k)band/*, iskip*/}",
      "displayText": "butterbp aSignal, (a|k)Frequency, (a|k)band, iskip",
      "opcode": "butterbp",
      "description": "A band-pass Butterworth filter.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/butterbp.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "butterbr ${1:aSignal}, ${2:(a|k)Frequency}, ${3:(a|k)band/*, iskip*/}",
      "displayText": "butterbr aSignal, (a|k)Frequency, (a|k)band, iskip",
      "opcode": "butterbr",
      "description": "A band-reject Butterworth filter.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/butterbr.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "butterhp ${1:aSignal}, ${2:(a|k)Frequency/*, iskip*/}",
      "displayText": "butterhp aSignal, (a|k)Frequency, iskip",
      "opcode": "butterhp",
      "description": "A high-pass Butterworth filter.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/butterhp.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "butterlp ${1:aSignal}, ${2:(a|k)Frequency/*, iskip*/}",
      "displayText": "butterlp aSignal, (a|k)Frequency, iskip",
      "opcode": "butterlp",
      "description": "A low-pass Butterworth filter.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/butterlp.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "button ${1:knum}",
      "displayText": "button knum",
      "opcode": "button",
      "description": "Sense on-screen controls.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/button.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "buzz ${1:(a|k)Amplitude}, ${2:(a|k)Frequency}, ${3:knh}, ${4:iFunctionTable/*, iInitialPhase*/}",
      "displayText": "buzz (a|k)Amplitude, (a|k)Frequency, knh, iFunctionTable, iInitialPhase",
      "opcode": "buzz",
      "description": "Output is a set of harmonically related sine partials.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/buzz.html",
      "type": "function"
    },
    {
      "leftLabel": "i[]",
      "snippet": "c2r ${1:iin}",
      "displayText": "c2r iin",
      "opcode": "c2r",
      "description": "Real to complex format conversion.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/c2r.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "c2r ${1:kin}",
      "displayText": "c2r kin",
      "opcode": "c2r",
      "description": "Real to complex format conversion.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/c2r.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "cabasa ${1:iAmplitude}, ${2:idettack/*, inum, idamp, imaxshake*/}",
      "displayText": "cabasa iAmplitude, idettack, inum, idamp, imaxshake",
      "opcode": "cabasa",
      "description": "Semi-physical model of a cabasa sound.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/cabasa.html",
      "type": "function"
    },
    {
      "leftLabel": "aik",
      "snippet": "cauchy ${1:kalpha}",
      "displayText": "cauchy kalpha",
      "opcode": "cauchy",
      "description": "Cauchy distribution random number generator.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/cauchy.html",
      "type": "function"
    },
    {
      "leftLabel": "aik",
      "snippet": "cauchyi ${1:klambda}, ${2:(a|k)Amplitude}, ${3:(a|k)Frequency}",
      "displayText": "cauchyi klambda, (a|k)Amplitude, (a|k)Frequency",
      "opcode": "cauchyi",
      "description": "Cauchy distribution random number generator with interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/cauchyi.html",
      "type": "function"
    },
    {
      "leftLabel": "i[]",
      "snippet": "cbrt ${1:iarg}",
      "displayText": "cbrt iarg",
      "opcode": "cbrt",
      "description": "Cubic root function.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/cbrt.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "cbrt ${1:karg}",
      "displayText": "cbrt karg",
      "opcode": "cbrt",
      "description": "Cubic root function.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/cbrt.html",
      "type": "function"
    },
    {
      "snippet": "cell ${1:ktrig}, ${2:kreinit}, ${3:ioutFunc}, ${4:initStateFunc}, ${5:iRuleFunc}, ${6:ielements}",
      "displayText": "cell ktrig, kreinit, ioutFunc, initStateFunc, iRuleFunc, ielements",
      "opcode": "cell",
      "description": "Cellular Automaton",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/cell.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "centroid ${1:iSignal}",
      "displayText": "centroid iSignal",
      "opcode": "centroid",
      "description": "Calculate the spectral centroid of a signal.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/centroid.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "centroid ${1:kSignal}",
      "displayText": "centroid kSignal",
      "opcode": "centroid",
      "description": "Calculate the spectral centroid of a signal.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/centroid.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "centroid ${1:aSignal}, ${2:ktrig}, ${3:ifftsize}",
      "displayText": "centroid aSignal, ktrig, ifftsize",
      "opcode": "centroid",
      "description": "Calculate the spectral centroid of a signal.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/centroid.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "ceps ${1:kmags}, ${2:kcoefs}",
      "displayText": "ceps kmags, kcoefs",
      "opcode": "ceps",
      "description": "Calculate the cepstrum of an array input, optionally liftering coefficients.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ceps.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "cepsinv ${1:keps}",
      "displayText": "cepsinv keps",
      "opcode": "cepsinv",
      "description": "Calculate the inverse cepstrum of an array.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/cepsinv.html",
      "type": "function"
    },
    {
      "leftLabel": "ik",
      "snippet": "chanctrl ${1:ichnl}, ${2:ictlno/*, ilow, ihigh*/}",
      "displayText": "chanctrl ichnl, ictlno, ilow, ihigh",
      "opcode": "chanctrl",
      "description": "Get the current value of a MIDI channel controller.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/chanctrl.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "changed ${1:(S|k)var1…}",
      "displayText": "changed (S|k)var1",
      "opcode": "changed",
      "description": "k-rate signal change detector.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/changed.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "chani ${1:kchan}",
      "displayText": "chani kchan",
      "opcode": "chani",
      "description": "Reads data from the software bus",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/chani.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "chano ${1:(a|k)val}, ${2:kchan}",
      "displayText": "chano (a|k)val, kchan",
      "opcode": "chano",
      "description": "Send data to the outwards software bus",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/chano.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "chebyshevpoly ${1:ain}, ${2:k0…}",
      "displayText": "chebyshevpoly ain, k0",
      "opcode": "chebyshevpoly",
      "description": "Efficiently evaluates the sum of Chebyshev polynomials of arbitrary order.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/chebyshevpoly.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "checkbox ${1:knum}",
      "displayText": "checkbox knum",
      "opcode": "checkbox",
      "description": "Sense on-screen controls.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/checkbox.html",
      "type": "function"
    },
    {
      "snippet": "chnclear ${1:Sname}",
      "displayText": "chnclear Sname",
      "opcode": "chnclear",
      "description": "Clears an audio output channel of the named software bus.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/chnclear.html",
      "type": "function"
    },
    {
      "leftLabel": "S",
      "snippet": "chnexport ${1:Sname}, ${2:imode}",
      "displayText": "chnexport Sname, imode",
      "opcode": "chnexport",
      "description": "Export a global variable as a channel of the bus.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/chnexport.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "chnexport ${1:Sname}, ${2:imode}",
      "displayText": "chnexport Sname, imode",
      "opcode": "chnexport",
      "description": "Export a global variable as a channel of the bus.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/chnexport.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "chnexport ${1:Sname}, ${2:imode/*, itype, idflt, imin, imax*/}",
      "displayText": "chnexport Sname, imode, itype, idflt, imin, imax",
      "opcode": "chnexport",
      "description": "Export a global variable as a channel of the bus.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/chnexport.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "chnexport ${1:Sname}, ${2:imode/*, itype, idflt, imin, imax*/}",
      "displayText": "chnexport Sname, imode, itype, idflt, imin, imax",
      "opcode": "chnexport",
      "description": "Export a global variable as a channel of the bus.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/chnexport.html",
      "type": "function"
    },
    {
      "leftLabel": "Saik",
      "snippet": "chnget ${1:Sname}",
      "displayText": "chnget Sname",
      "opcode": "chnget",
      "description": "Reads data from the software bus.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/chnget.html",
      "type": "function"
    },
    {
      "snippet": "chnmix ${1:aval}, ${2:Sname}",
      "displayText": "chnmix aval, Sname",
      "opcode": "chnmix",
      "description": "Writes audio data to the named software bus, mixing to the previous output.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/chnmix.html",
      "type": "function"
    },
    {
      "leftLabel": "iiiiii",
      "snippet": "chnparams ${1:Sname}",
      "displayText": "chnparams Sname",
      "opcode": "chnparams",
      "description": "Query parameters of a channel.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/chnparams.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "chnset ${1:(S|a|i|k)val}, ${2:Sname}",
      "displayText": "chnset (S|a|i|k)val, Sname",
      "opcode": "chnset",
      "description": "Writes data to the named software bus.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/chnset.html",
      "type": "function"
    },
    {
      "leftLabel": "aaa",
      "snippet": "chuap ${1:kL}, ${2:kR0}, ${3:kC1}, ${4:kG}, ${5:kGa}, ${6:kGb}, ${7:kE}, ${8:kC2}, ${9:iI3}, ${10:iV2}, ${11:iV1}, ${12:ktime_step}",
      "displayText": "chuap kL, kR0, kC1, kG, kGa, kGb, kE, kC2, iI3, iV2, iV1, ktime_step",
      "opcode": "chuap",
      "description": "Simulates Chua's oscillator, an LRC oscillator with an active resistor, proved capable of bifurcation and chaotic attractors, with k-rate control of circuit elements.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/chuap.html",
      "type": "function"
    },
    {
      "snippet": "clear ${1:avar1…}",
      "displayText": "clear avar1",
      "opcode": "clear",
      "description": "Zeroes a list of audio signals.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/clear.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "clfilt ${1:aSignal}, ${2:kFrequency}, ${3:itype}, ${4:inpol/*, ikind, ipbr, isba, iskip*/}",
      "displayText": "clfilt aSignal, kFrequency, itype, inpol, ikind, ipbr, isba, iskip",
      "opcode": "clfilt",
      "description": "Implements low-pass and high-pass filters of different styles.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/clfilt.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "clip ${1:aSignal}, ${2:imeth}, ${3:ilimit/*, iarg*/}",
      "displayText": "clip aSignal, imeth, ilimit, iarg",
      "opcode": "clip",
      "description": "Clips a signal to a predefined limit.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/clip.html",
      "type": "function"
    },
    {
      "snippet": "clockoff ${1:inum}",
      "displayText": "clockoff inum",
      "opcode": "clockoff",
      "description": "Stops one of a number of internal clocks.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/clockoff.html",
      "type": "function"
    },
    {
      "snippet": "clockon ${1:inum}",
      "displayText": "clockon inum",
      "opcode": "clockon",
      "description": "Starts one of a number of internal clocks.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/clockon.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "cmp ${1:aL}, ${2:S_operator}, ${3:(a|k)R}",
      "displayText": "cmp aL, S_operator, (a|k)R",
      "opcode": "cmp",
      "description": "Compares two audio signals",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/cmp.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "cmplxprod ${1:kin1}, ${2:kin2}",
      "displayText": "cmplxprod kin1, kin2",
      "opcode": "cmplxprod",
      "description": "Complex product of two arrays.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/cmplxprod.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "comb ${1:aSignal}, ${2:krvt}, ${3:ilpt/*, iskip, insmps*/}",
      "displayText": "comb aSignal, krvt, ilpt, iskip, insmps",
      "opcode": "comb",
      "description": "Reverberates an input signal with a colored frequency response.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/comb.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "combinv ${1:aSignal}, ${2:krvt}, ${3:ilpt/*, iskip, insmps*/}",
      "displayText": "combinv aSignal, krvt, ilpt, iskip, insmps",
      "opcode": "combinv",
      "description": "Reverberates an input signal with a colored frequency response.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/combinv.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "compilecsd ${1:Sfilename}",
      "displayText": "compilecsd Sfilename",
      "opcode": "compilecsd",
      "description": "compiles a new orchestra from an ASCII file",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/compilecsd.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "compileorc ${1:Sfilename}",
      "displayText": "compileorc Sfilename",
      "opcode": "compileorc",
      "description": "compiles a new orchestra from an ASCII file",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/compileorc.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "compilestr ${1:Sorch}",
      "displayText": "compilestr Sorch",
      "opcode": "compilestr",
      "description": "compiles a new orchestra passed in as an ASCII string",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/compilestr.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "compress ${1:aasig}, ${2:acsig}, ${3:kthresh}, ${4:kloknee}, ${5:khiknee}, ${6:kratio}, ${7:katt}, ${8:krel}, ${9:ilook}",
      "displayText": "compress aasig, acsig, kthresh, kloknee, khiknee, kratio, katt, krel, ilook",
      "opcode": "compress",
      "description": "Compress, limit, expand, duck or gate an audio signal.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/compress.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "compress2 ${1:aasig}, ${2:acsig}, ${3:kthresh}, ${4:kloknee}, ${5:khiknee}, ${6:kratio}, ${7:katt}, ${8:krel}, ${9:ilook}",
      "displayText": "compress2 aasig, acsig, kthresh, kloknee, khiknee, kratio, katt, krel, ilook",
      "opcode": "compress2",
      "description": "Compress, limit, expand, duck or gate an audio signal.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/compress2.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "connect ${1:(S|i)source1}, ${2:Soutlet1}, ${3:(S|i)sink1}, ${4:Sinlet1/*, i*/}",
      "displayText": "connect (S|i)source1, Soutlet1, (S|i)sink1, Sinlet1, i",
      "opcode": "connect",
      "description": "Connects a source outlet to a sink inlet.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/connect.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "control ${1:knum}",
      "displayText": "control knum",
      "opcode": "control",
      "description": "Configurable slider controls for realtime user input.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/control.html",
      "type": "function"
    },
    {
      "leftLabel": "a…",
      "snippet": "convle ${1:a}, ${2:(S|i)/*, i*/}",
      "displayText": "convle a, (S|i), i",
      "opcode": "convle",
      "description": "Same as the convolve opcode.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/convle.html",
      "type": "function"
    },
    {
      "leftLabel": "a…",
      "snippet": "convolve ${1:ain}, ${2:(S|i)filcod/*, ichannel*/}",
      "displayText": "convolve ain, (S|i)filcod, ichannel",
      "opcode": "convolve",
      "description": "Convolves a signal and an impulse response.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/convolve.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "copya2ftab ${1:(i|k)ftbl}, ${2:(i|k)ab}",
      "displayText": "copya2ftab (i|k)ftbl, (i|k)ab",
      "opcode": "copya2ftab",
      "description": "Copy data from a vector to an f-table.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/copya2ftab.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "copyf2array ${1:(i|k)ab}, ${2:(i|k)ftbl}",
      "displayText": "copyf2array (i|k)ab, (i|k)ftbl",
      "opcode": "copyf2array",
      "description": "Copy data from an f-table to a vector.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/copyf2array.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "cosseg ${1:ia}, ${2:idur1}, ${3:ib…}",
      "displayText": "cosseg ia, idur1, ib",
      "opcode": "cosseg",
      "description": "Trace a series of line segments between specified points with cosine interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/cosseg.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "cossegb ${1:ia}, ${2:itim1}, ${3:ib…}",
      "displayText": "cossegb ia, itim1, ib",
      "opcode": "cossegb",
      "description": "Trace a series of line segments between specified absolute points with cosine interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/cossegb.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "cossegr ${1:ia}, ${2:idur1}, ${3:ib…}",
      "displayText": "cossegr ia, idur1, ib",
      "opcode": "cossegr",
      "description": "Trace a series of line segments between specified points with cosine interpolation, including a release segment.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/cossegr.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "cps2pch ${1:ipch}, ${2:iequal}",
      "displayText": "cps2pch ipch, iequal",
      "opcode": "cps2pch",
      "description": "Converts a pitch-class value into cycles-per-second (Hz) for equal divisions of the octave.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/cps2pch.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "cpsmidi",
      "displayText": "cpsmidi",
      "opcode": "cpsmidi",
      "description": "Get the note number of the current MIDI event, expressed in cycles-per-second.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/cpsmidi.html",
      "type": "function"
    },
    {
      "leftLabel": "ik",
      "snippet": "cpsmidib ${1:irange}",
      "displayText": "cpsmidib irange",
      "opcode": "cpsmidib",
      "description": "Get the note number of the current MIDI event and modify it by the current pitch-bend value, express it in cycles-per-second.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/cpsmidib.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "cpstmid ${1:iFunctionTable}",
      "displayText": "cpstmid iFunctionTable",
      "opcode": "cpstmid",
      "description": "Get a MIDI note number (allows customized micro-tuning scales).",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/cpstmid.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "cpstun ${1:ktrig}, ${2:kindex}, ${3:kFunctionTable}",
      "displayText": "cpstun ktrig, kindex, kFunctionTable",
      "opcode": "cpstun",
      "description": "Returns micro-tuning values at k-rate.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/cpstun.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "cpstuni ${1:iIndex}, ${2:iFunctionTable}",
      "displayText": "cpstuni iIndex, iFunctionTable",
      "opcode": "cpstuni",
      "description": "Returns micro-tuning values at init-rate.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/cpstuni.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "cpsxpch ${1:ipch}, ${2:iequal}, ${3:irepeat}, ${4:ibase}",
      "displayText": "cpsxpch ipch, iequal, irepeat, ibase",
      "opcode": "cpsxpch",
      "description": "Converts a pitch-class value into cycles-per-second (Hz) for equal divisions of any interval.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/cpsxpch.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "cpuprc ${1:(S|i)nsnum}, ${2:ipercent}",
      "displayText": "cpuprc (S|i)nsnum, ipercent",
      "opcode": "cpuprc",
      "description": "Control allocation of cpu resources on a per-instrument basis, to optimize realtime output.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/cpuprc.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "cross2 ${1:ain1}, ${2:ain2}, ${3:isize}, ${4:ioverlap}, ${5:iwin}, ${6:kbias}",
      "displayText": "cross2 ain1, ain2, isize, ioverlap, iwin, kbias",
      "opcode": "cross2",
      "description": "Cross synthesis using FFT's.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/cross2.html",
      "type": "function"
    },
    {
      "leftLabel": "aa",
      "snippet": "crossfm ${1:(a|k)frq1}, ${2:(a|k)frq2}, ${3:(a|k)ndx1}, ${4:(a|k)ndx2}, ${5:kFrequency}, ${6:ifn1}, ${7:ifn2/*, iphs1, iphs2*/}",
      "displayText": "crossfm (a|k)frq1, (a|k)frq2, (a|k)ndx1, (a|k)ndx2, kFrequency, ifn1, ifn2, iphs1, iphs2",
      "opcode": "crossfm",
      "description": "Two mutually frequency and/or phase modulated oscillators.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/crossfm.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "crunch ${1:iAmplitude}, ${2:idettack/*, inum, idamp, imaxshake*/}",
      "displayText": "crunch iAmplitude, idettack, inum, idamp, imaxshake",
      "opcode": "crunch",
      "description": "Semi-physical model of a crunch sound.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/crunch.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "ctrl14 ${1:ichan}, ${2:ictlno1}, ${3:ictlno2}, ${4:imin}, ${5:imax/*, iFunctionTable*/}",
      "displayText": "ctrl14 ichan, ictlno1, ictlno2, imin, imax, iFunctionTable",
      "opcode": "ctrl14",
      "description": "Allows a floating-point 14-bit MIDI signal scaled with a minimum and a maximum range.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ctrl14.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "ctrl14 ${1:ichan}, ${2:ictlno1}, ${3:ictlno2}, ${4:kmin}, ${5:kmax/*, iFunctionTable*/}",
      "displayText": "ctrl14 ichan, ictlno1, ictlno2, kmin, kmax, iFunctionTable",
      "opcode": "ctrl14",
      "description": "Allows a floating-point 14-bit MIDI signal scaled with a minimum and a maximum range.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ctrl14.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "ctrl21 ${1:ichan}, ${2:ictlno1}, ${3:ictlno2}, ${4:ictlno3}, ${5:imin}, ${6:imax/*, iFunctionTable*/}",
      "displayText": "ctrl21 ichan, ictlno1, ictlno2, ictlno3, imin, imax, iFunctionTable",
      "opcode": "ctrl21",
      "description": "Allows a floating-point 21-bit MIDI signal scaled with a minimum and a maximum range.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ctrl21.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "ctrl21 ${1:ichan}, ${2:ictlno1}, ${3:ictlno2}, ${4:ictlno3}, ${5:kmin}, ${6:kmax/*, iFunctionTable*/}",
      "displayText": "ctrl21 ichan, ictlno1, ictlno2, ictlno3, kmin, kmax, iFunctionTable",
      "opcode": "ctrl21",
      "description": "Allows a floating-point 21-bit MIDI signal scaled with a minimum and a maximum range.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ctrl21.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "ctrl7 ${1:ichan}, ${2:ictlno}, ${3:kmin}, ${4:kmax/*, iFunctionTable, i*/}",
      "displayText": "ctrl7 ichan, ictlno, kmin, kmax, iFunctionTable, i",
      "opcode": "ctrl7",
      "description": "Allows a floating-point 7-bit MIDI signal scaled with a minimum and a maximum range.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ctrl7.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "ctrl7 ${1:ichan}, ${2:ictlno}, ${3:imin}, ${4:imax/*, iFunctionTable*/}",
      "displayText": "ctrl7 ichan, ictlno, imin, imax, iFunctionTable",
      "opcode": "ctrl7",
      "description": "Allows a floating-point 7-bit MIDI signal scaled with a minimum and a maximum range.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ctrl7.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "ctrl7 ${1:ichan}, ${2:ictlno}, ${3:kmin}, ${4:kmax/*, iFunctionTable*/}",
      "displayText": "ctrl7 ichan, ictlno, kmin, kmax, iFunctionTable",
      "opcode": "ctrl7",
      "description": "Allows a floating-point 7-bit MIDI signal scaled with a minimum and a maximum range.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ctrl7.html",
      "type": "function"
    },
    {
      "snippet": "ctrlinit ${1:ichnl}, ${2:ictlno1…}",
      "displayText": "ctrlinit ichnl, ictlno1",
      "opcode": "ctrlinit",
      "description": "Sets the initial values for a set of MIDI controllers.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ctrlinit.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "cuserrnd ${1:kmin}, ${2:kmax}, ${3:ktableNum}",
      "displayText": "cuserrnd kmin, kmax, ktableNum",
      "opcode": "cuserrnd",
      "description": "Continuous USER-defined-distribution RaNDom generator.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/cuserrnd.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "cuserrnd ${1:imin}, ${2:imax}, ${3:itableNum}",
      "displayText": "cuserrnd imin, imax, itableNum",
      "opcode": "cuserrnd",
      "description": "Continuous USER-defined-distribution RaNDom generator.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/cuserrnd.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "cuserrnd ${1:kmin}, ${2:kmax}, ${3:ktableNum}",
      "displayText": "cuserrnd kmin, kmax, ktableNum",
      "opcode": "cuserrnd",
      "description": "Continuous USER-defined-distribution RaNDom generator.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/cuserrnd.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "dam ${1:aSignal}, ${2:kthreshold}, ${3:icomp1}, ${4:icomp2}, ${5:irtime}, ${6:iftime}",
      "displayText": "dam aSignal, kthreshold, icomp1, icomp2, irtime, iftime",
      "opcode": "dam",
      "description": "A dynamic compressor/expander.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/dam.html",
      "type": "function"
    },
    {
      "leftLabel": "ii…kk…",
      "snippet": "date",
      "displayText": "date",
      "opcode": "date",
      "description": "Returns the number seconds since a base date.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/date.html",
      "type": "function"
    },
    {
      "leftLabel": "S",
      "snippet": "dates ${1:itime}",
      "displayText": "dates itime",
      "opcode": "dates",
      "description": "Returns as a string the date and time specified.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/dates.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "dcblock ${1:ain/*, igain*/}",
      "displayText": "dcblock ain, igain",
      "opcode": "dcblock",
      "description": "A DC blocking filter.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/dcblock.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "dcblock2 ${1:ain/*, iorder, iskip*/}",
      "displayText": "dcblock2 ain, iorder, iskip",
      "opcode": "dcblock2",
      "description": "A DC blocking filter.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/dcblock2.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "dconv ${1:aSignal}, ${2:isize}, ${3:iFunctionTable}",
      "displayText": "dconv aSignal, isize, iFunctionTable",
      "opcode": "dconv",
      "description": "A direct convolution opcode.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/dconv.html",
      "type": "function"
    },
    {
      "leftLabel": "i[]",
      "snippet": "dct ${1:iin}",
      "displayText": "dct iin",
      "opcode": "dct",
      "description": "Discrete Cosine Transform of a sample array (type-II DCT)",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/dct.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "dct ${1:kin}",
      "displayText": "dct kin",
      "opcode": "dct",
      "description": "Discrete Cosine Transform of a sample array (type-II DCT)",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/dct.html",
      "type": "function"
    },
    {
      "leftLabel": "i[]",
      "snippet": "dctinv ${1:iin}",
      "displayText": "dctinv iin",
      "opcode": "dctinv",
      "description": "Inverse Discrete Cosine Transform of a sample array (type-III DCT)",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/dctinv.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "dctinv ${1:kin}",
      "displayText": "dctinv kin",
      "opcode": "dctinv",
      "description": "Inverse Discrete Cosine Transform of a sample array (type-III DCT)",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/dctinv.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "delay ${1:aSignal}, ${2:idlt/*, iskip*/}",
      "displayText": "delay aSignal, idlt, iskip",
      "opcode": "delay",
      "description": "Delays an input signal by some time interval.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/delay.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "delay1 ${1:aSignal/*, iskip*/}",
      "displayText": "delay1 aSignal, iskip",
      "opcode": "delay1",
      "description": "Delays an input signal by one sample.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/delay1.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "delayk ${1:kSignal}, ${2:iDelayTime/*, imode*/}",
      "displayText": "delayk kSignal, iDelayTime, imode",
      "opcode": "delayk",
      "description": "Delays an input signal by some time interval.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/delayk.html",
      "type": "function"
    },
    {
      "leftLabel": "a(a|k|i)…",
      "snippet": "delayr ${1:idlt/*, iskip*/}",
      "displayText": "delayr idlt, iskip",
      "opcode": "delayr",
      "description": "Reads from an automatically established digital delay line.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/delayr.html",
      "type": "function"
    },
    {
      "snippet": "delayw ${1:aSignal}",
      "displayText": "delayw aSignal",
      "opcode": "delayw",
      "description": "Writes the audio signal to a digital delay line.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/delayw.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "deltap ${1:kdlt/*, i*/}",
      "displayText": "deltap kdlt, i",
      "opcode": "deltap",
      "description": "Taps a delay line at variable offset times.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/deltap.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "deltap3 ${1:(a|k)dlt/*, i*/}",
      "displayText": "deltap3 (a|k)dlt, i",
      "opcode": "deltap3",
      "description": "Taps a delay line at variable offset times, uses cubic interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/deltap3.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "deltapi ${1:(a|k)dlt/*, i*/}",
      "displayText": "deltapi (a|k)dlt, i",
      "opcode": "deltapi",
      "description": "Taps a delay line at variable offset times, uses interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/deltapi.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "deltapn ${1:(a|k)numsamps/*, i*/}",
      "displayText": "deltapn (a|k)numsamps, i",
      "opcode": "deltapn",
      "description": "Taps a delay line at variable offset times.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/deltapn.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "deltapx ${1:aDelayTime}, ${2:iwsize/*, i*/}",
      "displayText": "deltapx aDelayTime, iwsize, i",
      "opcode": "deltapx",
      "description": "Read from or write to a delay line with interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/deltapx.html",
      "type": "function"
    },
    {
      "snippet": "deltapxw ${1:ain}, ${2:aDelayTime}, ${3:iwsize/*, i*/}",
      "displayText": "deltapxw ain, aDelayTime, iwsize, i",
      "opcode": "deltapxw",
      "description": "Mixes the input signal to a delay line.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/deltapxw.html",
      "type": "function"
    },
    {
      "snippet": "denorm ${1:a1…}",
      "displayText": "denorm a1",
      "opcode": "denorm",
      "description": "Mixes low level noise to a list of a-rate signals",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/denorm.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "diff ${1:(a|k)Signal/*, iskip*/}",
      "displayText": "diff (a|k)Signal, iskip",
      "opcode": "diff",
      "description": "Modify a signal by differentiation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/diff.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "diode_ladder ${1:ain}, ${2:(a|k)cf}, ${3:(a|k)k/*, knlp, ksaturation, istor*/}",
      "displayText": "diode_ladder ain, (a|k)cf, (a|k)k, knlp, ksaturation, istor",
      "opcode": "diode_ladder",
      "description": "Zero-delay feedback implementation of 4 pole diode ladder filter.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/diode_ladder.html",
      "type": "function"
    },
    {
      "leftLabel": "S[]",
      "snippet": "directory ${1:SDirectory}, ${2:(a|i|k|S)Extention…}",
      "displayText": "directory SDirectory, (a|i|k|S)Extention",
      "opcode": "directory",
      "description": "Reads a directory and outputs to a string array a list of file names.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/directory.html",
      "type": "function"
    },
    {
      "leftLabel": "a…",
      "snippet": "diskgrain ${1:Sfname}, ${2:kAmplitude}, ${3:kFrequency}, ${4:kPitch}, ${5:kgrsize}, ${6:kprate}, ${7:ifun}, ${8:iolaps/*, imaxgrsize, ioffset*/}",
      "displayText": "diskgrain Sfname, kAmplitude, kFrequency, kPitch, kgrsize, kprate, ifun, iolaps, imaxgrsize, ioffset",
      "opcode": "diskgrain",
      "description": "Synchronous granular synthesis, using a soundfile as source.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/diskgrain.html",
      "type": "function"
    },
    {
      "leftLabel": "a[]",
      "snippet": "diskin ${1:(S|i)filcod/*, kPitch, iskiptim, iwraparound, iformat, iskipinit, i, i, i*/}",
      "displayText": "diskin (S|i)filcod, kPitch, iskiptim, iwraparound, iformat, iskipinit, i, i, i",
      "opcode": "diskin",
      "description": "Reads audio data from an external device or stream and can alter its pitch.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/diskin.html",
      "type": "function"
    },
    {
      "leftLabel": "a…",
      "snippet": "diskin ${1:(S|i)filcod/*, kPitch, iskiptim, iwraparound, iformat, iskipinit, i, i, i*/}",
      "displayText": "diskin (S|i)filcod, kPitch, iskiptim, iwraparound, iformat, iskipinit, i, i, i",
      "opcode": "diskin",
      "description": "Reads audio data from an external device or stream and can alter its pitch.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/diskin.html",
      "type": "function"
    },
    {
      "leftLabel": "a[]",
      "snippet": "diskin2 ${1:(S|i)filcod/*, kPitch, iskiptim, iwrap, iformat, iwsize, ibufsize, iskipinit, i*/}",
      "displayText": "diskin2 (S|i)filcod, kPitch, iskiptim, iwrap, iformat, iwsize, ibufsize, iskipinit, i",
      "opcode": "diskin2",
      "description": "Reads audio data from a file, and can alter its pitch using one of several available interpolation types, as well as convert the sample rate to match the orchestra sr setting.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/diskin2.html",
      "type": "function"
    },
    {
      "leftLabel": "a…",
      "snippet": "diskin2 ${1:(S|i)filcod/*, kPitch, iskiptim, iwrap, iformat, iwsize, ibufsize, iskipinit, i*/}",
      "displayText": "diskin2 (S|i)filcod, kPitch, iskiptim, iwrap, iformat, iwsize, ibufsize, iskipinit, i",
      "opcode": "diskin2",
      "description": "Reads audio data from a file, and can alter its pitch using one of several available interpolation types, as well as convert the sample rate to match the orchestra sr setting.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/diskin2.html",
      "type": "function"
    },
    {
      "snippet": "dispfft ${1:(a|k)Signal}, ${2:iprd}, ${3:iwsiz/*, iwtyp, idbout, iwtflg, imin, imax*/}",
      "displayText": "dispfft (a|k)Signal, iprd, iwsiz, iwtyp, idbout, iwtflg, imin, imax",
      "opcode": "dispfft",
      "description": "Displays the Fourier Transform of an audio or control signal.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/dispfft.html",
      "type": "function"
    },
    {
      "snippet": "display ${1:(a|k)Signal}, ${2:iprd/*, inprds, iwtflg*/}",
      "displayText": "display (a|k)Signal, iprd, inprds, iwtflg",
      "opcode": "display",
      "description": "Displays the audio or control signals as an amplitude vs. time graph.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/display.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "distort ${1:aSignal}, ${2:kdist}, ${3:iFunctionTable/*, ihp, istor*/}",
      "displayText": "distort aSignal, kdist, iFunctionTable, ihp, istor",
      "opcode": "distort",
      "description": "Distort an audio signal via waveshaping and optional clipping.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/distort.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "distort1 ${1:aSignal}, ${2:kpregain}, ${3:kpostgain}, ${4:kshape1}, ${5:kshape2/*, imode*/}",
      "displayText": "distort1 aSignal, kpregain, kpostgain, kshape1, kshape2, imode",
      "opcode": "distort1",
      "description": "Modified hyperbolic tangent distortion.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/distort1.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "divz ${1:(a|k)a}, ${2:(a|k)b}, ${3:ksubst}",
      "displayText": "divz (a|k)a, (a|k)b, ksubst",
      "opcode": "divz",
      "description": "Safely divides two numbers.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/divz.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "divz ${1:ia}, ${2:ib}, ${3:isubst}",
      "displayText": "divz ia, ib, isubst",
      "opcode": "divz",
      "description": "Safely divides two numbers.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/divz.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "divz ${1:ka}, ${2:kb}, ${3:ksubst}",
      "displayText": "divz ka, kb, ksubst",
      "opcode": "divz",
      "description": "Safely divides two numbers.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/divz.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "doppler ${1:asource}, ${2:ksourceposition}, ${3:kmicposition/*, isoundspeed, ifiltercutoff*/}",
      "displayText": "doppler asource, ksourceposition, kmicposition, isoundspeed, ifiltercutoff",
      "opcode": "doppler",
      "description": "A fast and robust method for approximating sound propagation, achieving convincing Doppler shifts without having to solve equations.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/doppler.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "dot ${1:iarr1/iarr1}, ${2:iarr2/iarr2 (k- or i-arrays )}",
      "displayText": "dot iarr1/iarr1, iarr2/iarr2 (k- or i-arrays )",
      "opcode": "dot",
      "description": "Calculates the dot product of two arrays.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/dot.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "dot ${1:karr1/iarr1}, ${2:karr2/iarr2 (k- or i-arrays )}",
      "displayText": "dot karr1/iarr1, karr2/iarr2 (k- or i-arrays )",
      "opcode": "dot",
      "description": "Calculates the dot product of two arrays.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/dot.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "downsamp ${1:aSignal/*, iwlen*/}",
      "displayText": "downsamp aSignal, iwlen",
      "opcode": "downsamp",
      "description": "Modify a signal by down-sampling.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/downsamp.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "dripwater ${1:kAmplitude}, ${2:idettack/*, inum, idamp, imaxshake, iFrequency, ifreq1, ifreq2*/}",
      "displayText": "dripwater kAmplitude, idettack, inum, idamp, imaxshake, iFrequency, ifreq1, ifreq2",
      "opcode": "dripwater",
      "description": "Semi-physical model of a water drop.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/dripwater.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "dumpk ${1:kSignal}, ${2:(S|i)Filename}, ${3:iformat}, ${4:iprd}",
      "displayText": "dumpk kSignal, (S|i)Filename, iformat, iprd",
      "opcode": "dumpk",
      "description": "Periodically writes an orchestra control-signal value to an external file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/dumpk.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "dumpk2 ${1:ksig1}, ${2:ksig2}, ${3:(S|i)Filename}, ${4:iformat}, ${5:iprd}",
      "displayText": "dumpk2 ksig1, ksig2, (S|i)Filename, iformat, iprd",
      "opcode": "dumpk2",
      "description": "Periodically writes two orchestra control-signal values to an external file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/dumpk2.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "dumpk3 ${1:ksig1}, ${2:ksig2}, ${3:ksig3}, ${4:(S|i)Filename}, ${5:iformat}, ${6:iprd}",
      "displayText": "dumpk3 ksig1, ksig2, ksig3, (S|i)Filename, iformat, iprd",
      "opcode": "dumpk3",
      "description": "Periodically writes three orchestra control-signal values to an external file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/dumpk3.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "dumpk4 ${1:ksig1}, ${2:ksig2}, ${3:ksig3}, ${4:ksig4}, ${5:(S|i)Filename}, ${6:iformat}, ${7:iprd}",
      "displayText": "dumpk4 ksig1, ksig2, ksig3, ksig4, (S|i)Filename, iformat, iprd",
      "opcode": "dumpk4",
      "description": "Periodically writes four orchestra control-signal values to an external file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/dumpk4.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "duserrnd ${1:ktableNum}",
      "displayText": "duserrnd ktableNum",
      "opcode": "duserrnd",
      "description": "Discrete USER-defined-distribution RaNDom generator.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/duserrnd.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "duserrnd ${1:itableNum}",
      "displayText": "duserrnd itableNum",
      "opcode": "duserrnd",
      "description": "Discrete USER-defined-distribution RaNDom generator.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/duserrnd.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "duserrnd ${1:ktableNum}",
      "displayText": "duserrnd ktableNum",
      "opcode": "duserrnd",
      "description": "Discrete USER-defined-distribution RaNDom generator.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/duserrnd.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "dust ${1:kAmplitude}, ${2:kdensity}",
      "displayText": "dust kAmplitude, kdensity",
      "opcode": "dust",
      "description": "Random impulses.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/dust.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "dust2 ${1:kAmplitude}, ${2:kdensity}",
      "displayText": "dust2 kAmplitude, kdensity",
      "opcode": "dust2",
      "description": "Random impulses.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/dust2.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "envlpx ${1:(a|k)Amplitude}, ${2:iRiseTime}, ${3:iDuration}, ${4:iDecayTime}, ${5:iFunctionTable}, ${6:iatss}, ${7:iAttenuationFactor/*, ixmod*/}",
      "displayText": "envlpx (a|k)Amplitude, iRiseTime, iDuration, iDecayTime, iFunctionTable, iatss, iAttenuationFactor, ixmod",
      "opcode": "envlpx",
      "description": "Applies an envelope consisting of 3 segments.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/envlpx.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "envlpx ${1:kAmplitude}, ${2:iRiseTime}, ${3:iDuration}, ${4:iDecayTime}, ${5:iFunctionTable}, ${6:iatss}, ${7:iAttenuationFactor/*, ixmod*/}",
      "displayText": "envlpx kAmplitude, iRiseTime, iDuration, iDecayTime, iFunctionTable, iatss, iAttenuationFactor, ixmod",
      "opcode": "envlpx",
      "description": "Applies an envelope consisting of 3 segments.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/envlpx.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "envlpxr ${1:(a|k)Amplitude}, ${2:iRiseTime}, ${3:iDecayTime}, ${4:iFunctionTable}, ${5:iatss}, ${6:iAttenuationFactor/*, ixmod, irind*/}",
      "displayText": "envlpxr (a|k)Amplitude, iRiseTime, iDecayTime, iFunctionTable, iatss, iAttenuationFactor, ixmod, irind",
      "opcode": "envlpxr",
      "description": "The envlpx opcode with a final release segment.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/envlpxr.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "envlpxr ${1:kAmplitude}, ${2:iRiseTime}, ${3:iDecayTime}, ${4:iFunctionTable}, ${5:iatss}, ${6:iAttenuationFactor/*, ixmod, irind*/}",
      "displayText": "envlpxr kAmplitude, iRiseTime, iDecayTime, iFunctionTable, iatss, iAttenuationFactor, ixmod, irind",
      "opcode": "envlpxr",
      "description": "The envlpx opcode with a final release segment.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/envlpxr.html",
      "type": "function"
    },
    {
      "leftLabel": "aa",
      "snippet": "ephasor ${1:(a|k)Frequency}, ${2:kR/*, i*/}",
      "displayText": "ephasor (a|k)Frequency, kR, i",
      "opcode": "ephasor",
      "description": "produces two outputs: a periodic phase signal and a periodic exponential decaying signal.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ephasor.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "eqfil ${1:ain}, ${2:kcf}, ${3:kbw}, ${4:kgain/*, istor*/}",
      "displayText": "eqfil ain, kcf, kbw, kgain, istor",
      "opcode": "eqfil",
      "description": "Equalizer filter",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/eqfil.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "evalstr ${1:Scode}",
      "displayText": "evalstr Scode",
      "opcode": "evalstr",
      "description": "Evalstrs evaluates a string containing Csound code, returning a value.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/evalstr.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "evalstr ${1:Scode}, ${2:k}",
      "displayText": "evalstr Scode, k",
      "opcode": "evalstr",
      "description": "Evalstrs evaluates a string containing Csound code, returning a value.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/evalstr.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "event ${1:SScorechar}, ${2:(S|k)insnum}, ${3:kdelay…}",
      "displayText": "event SScorechar, (S|k)insnum, kdelay",
      "opcode": "event",
      "description": "Generates a score event from an instrument.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/event.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "event_i ${1:SScorechar}, ${2:(S|i)insnum}, ${3:idelay…}",
      "displayText": "event_i SScorechar, (S|i)insnum, idelay",
      "opcode": "event_i",
      "description": "Generates a score event from an instrument.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/event_i.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "exciter ${1:aSignal}, ${2:kFrequency}, ${3:kceil}, ${4:kharmonics}, ${5:kblend}",
      "displayText": "exciter aSignal, kFrequency, kceil, kharmonics, kblend",
      "opcode": "exciter",
      "description": "A non-linear filter system to excite the signal.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/exciter.html",
      "type": "function"
    },
    {
      "snippet": "exitnow ${1:ivalue}",
      "displayText": "exitnow ivalue",
      "opcode": "exitnow",
      "description": "Exit Csound as fast as possible, with no cleaning up.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/exitnow.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "expcurve ${1:kindex}, ${2:ksteepness}",
      "displayText": "expcurve kindex, ksteepness",
      "opcode": "expcurve",
      "description": "This opcode implements a formula for generating a normalised exponential curve in range 0 - 1. It is based on the Max / MSP work of Eric Singer (c) 1994.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/expcurve.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "expon ${1:ia}, ${2:iDuration}, ${3:ib}",
      "displayText": "expon ia, iDuration, ib",
      "opcode": "expon",
      "description": "Trace an exponential curve between specified points.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/expon.html",
      "type": "function"
    },
    {
      "leftLabel": "aik",
      "snippet": "exprand ${1:klambda}",
      "displayText": "exprand klambda",
      "opcode": "exprand",
      "description": "Exponential distribution random number generator (positive values only).",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/exprand.html",
      "type": "function"
    },
    {
      "leftLabel": "aik",
      "snippet": "exprandi ${1:klambda}, ${2:(a|k)Amplitude}, ${3:(a|k)Frequency}",
      "displayText": "exprandi klambda, (a|k)Amplitude, (a|k)Frequency",
      "opcode": "exprandi",
      "description": "Exponential distribution random number generator with interpolation (positive values only).",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/exprandi.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "expseg ${1:ia}, ${2:idur1}, ${3:ib…}",
      "displayText": "expseg ia, idur1, ib",
      "opcode": "expseg",
      "description": "Trace a series of exponential segments between specified points.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/expseg.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "expsega ${1:ia}, ${2:idur1}, ${3:ib…}",
      "displayText": "expsega ia, idur1, ib",
      "opcode": "expsega",
      "description": "An exponential segment generator operating at a-rate.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/expsega.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "expsegb ${1:ia}, ${2:itim1}, ${3:ib…}",
      "displayText": "expsegb ia, itim1, ib",
      "opcode": "expsegb",
      "description": "Trace a series of exponential segments between specified absolute points.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/expsegb.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "expsegba ${1:ia}, ${2:itim1}, ${3:ib…}",
      "displayText": "expsegba ia, itim1, ib",
      "opcode": "expsegba",
      "description": "An exponential segment generator operating at a-rate with absolute times.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/expsegba.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "expsegr ${1:ia}, ${2:idur1}, ${3:ib…}",
      "displayText": "expsegr ia, idur1, ib",
      "opcode": "expsegr",
      "description": "Trace a series of exponential segments between specified points including a release segment.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/expsegr.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "fareylen ${1:kFunctionTable}",
      "displayText": "fareylen kFunctionTable",
      "opcode": "fareylen",
      "description": "returns the length of a Farey Sequence.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fareylen.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "fareyleni ${1:iFunctionTable}",
      "displayText": "fareyleni iFunctionTable",
      "opcode": "fareyleni",
      "description": "returns the length of a Farey Sequence.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fareyleni.html",
      "type": "function"
    },
    {
      "leftLabel": "ia…",
      "snippet": "faustaudio ${1:ifac}, ${2:(a|i|k)in1…}",
      "displayText": "faustaudio ifac, (a|i|k)in1",
      "opcode": "faustaudio",
      "description": "Instantiates and runs a compiled Faust program.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/faustaudio.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "faustcompile ${1:Scode}, ${2:Sargs/*, i*/}",
      "displayText": "faustcompile Scode, Sargs, i",
      "opcode": "faustcompile",
      "description": "Invokes the just-in-time compiler to produce a instantiable DSP process from a Faust program.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/faustcompile.html",
      "type": "function"
    },
    {
      "snippet": "faustctl ${1:idsp}, ${2:Scontrol}, ${3:kval}",
      "displayText": "faustctl idsp, Scontrol, kval",
      "opcode": "faustctl",
      "description": "Adjusts a given control in a Faust DSP instance.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/faustctl.html",
      "type": "function"
    },
    {
      "leftLabel": "ia…",
      "snippet": "faustgen ${1:SCode}, ${2:(a|i|k)in1…}",
      "displayText": "faustgen SCode, (a|i|k)in1",
      "opcode": "faustgen",
      "description": "Compiles, Instantiates and runs a compiled Faust program.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/faustgen.html",
      "type": "function"
    },
    {
      "leftLabel": "i[]",
      "snippet": "fft ${1:iin}",
      "displayText": "fft iin",
      "opcode": "fft",
      "description": "Complex-to-complex Fast Fourier Transform.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fft.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "fft ${1:kin}",
      "displayText": "fft kin",
      "opcode": "fft",
      "description": "Complex-to-complex Fast Fourier Transform.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fft.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "ficlose ${1:(S|i)handle}",
      "displayText": "ficlose (S|i)handle",
      "opcode": "ficlose",
      "description": "Closes a previously opened file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ficlose.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "filebit ${1:(S|i)filcod/*, iallowraw*/}",
      "displayText": "filebit (S|i)filcod, iallowraw",
      "opcode": "filebit",
      "description": "Returns the number of bits in each sample in a sound file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/filebit.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "filelen ${1:(S|i)filcod/*, iallowraw*/}",
      "displayText": "filelen (S|i)filcod, iallowraw",
      "opcode": "filelen",
      "description": "Returns the length of a sound file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/filelen.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "filenchnls ${1:(S|i)filcod/*, iallowraw*/}",
      "displayText": "filenchnls (S|i)filcod, iallowraw",
      "opcode": "filenchnls",
      "description": "Returns the number of channels in a sound file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/filenchnls.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "filepeak ${1:(S|i)filcod/*, ichnl*/}",
      "displayText": "filepeak (S|i)filcod, ichnl",
      "opcode": "filepeak",
      "description": "Returns the peak absolute value of a sound file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/filepeak.html",
      "type": "function"
    },
    {
      "leftLabel": "a…",
      "snippet": "filescal ${1:ktimescal}, ${2:kAmplitude}, ${3:kPitch}, ${4:Sfile}, ${5:klock/*, ifftsize, idecim, kthresh, k, k*/}",
      "displayText": "filescal ktimescal, kAmplitude, kPitch, Sfile, klock, ifftsize, idecim, kthresh, k, k",
      "opcode": "filescal",
      "description": "Phase-locked vocoder processing with onset detection/processing, 'tempo-scaling'.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/filescal.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "filesr ${1:(S|i)filcod/*, iallowraw*/}",
      "displayText": "filesr (S|i)filcod, iallowraw",
      "opcode": "filesr",
      "description": "Returns the sample rate of a sound file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/filesr.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "filevalid ${1:(S|i)filcod}",
      "displayText": "filevalid (S|i)filcod",
      "opcode": "filevalid",
      "description": "Checks that a file can be used.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/filevalid.html",
      "type": "function"
    },
    {
      "leftLabel": "S[]",
      "snippet": "fillarray ${1:Sval1…}",
      "displayText": "fillarray Sval1",
      "opcode": "fillarray",
      "description": "Generate a vector with initial values.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fillarray.html",
      "type": "function"
    },
    {
      "leftLabel": "i[]",
      "snippet": "fillarray ${1:ival1…}",
      "displayText": "fillarray ival1",
      "opcode": "fillarray",
      "description": "Generate a vector with initial values.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fillarray.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "fillarray ${1:ival1…}",
      "displayText": "fillarray ival1",
      "opcode": "fillarray",
      "description": "Generate a vector with initial values.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fillarray.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "filter2 ${1:aSignal}, ${2:iM}, ${3:iN}, ${4:ib0…}",
      "displayText": "filter2 aSignal, iM, iN, ib0",
      "opcode": "filter2",
      "description": "Performs filtering using a transposed form-II digital filter lattice with no time-varying control.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/filter2.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "filter2 ${1:kSignal}, ${2:iM}, ${3:iN}, ${4:ib0…}",
      "displayText": "filter2 kSignal, iM, iN, ib0",
      "opcode": "filter2",
      "description": "Performs filtering using a transposed form-II digital filter lattice with no time-varying control.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/filter2.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "fin ${1:(S|i)filename}, ${2:iskipframes}, ${3:iformat}, ${4:ain1…}",
      "displayText": "fin (S|i)filename, iskipframes, iformat, ain1",
      "opcode": "fin",
      "description": "Read signals from a file at a-rate.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fin.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "fini ${1:(S|i)filename}, ${2:iskipframes}, ${3:iformat}, ${4:in1…}",
      "displayText": "fini (S|i)filename, iskipframes, iformat, in1",
      "opcode": "fini",
      "description": "Read signals from a file at i-rate.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fini.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "fink ${1:(S|i)filename}, ${2:iskipframes}, ${3:iformat}, ${4:kin1…}",
      "displayText": "fink (S|i)filename, iskipframes, iformat, kin1",
      "opcode": "fink",
      "description": "Read signals from a file at k-rate.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fink.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "fiopen ${1:(S|i)filename}, ${2:imode}",
      "displayText": "fiopen (S|i)filename, imode",
      "opcode": "fiopen",
      "description": "Opens a file in a specific mode.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fiopen.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "flanger ${1:aSignal}, ${2:aDelayTime}, ${3:kfeedback/*, imaxd*/}",
      "displayText": "flanger aSignal, aDelayTime, kfeedback, imaxd",
      "opcode": "flanger",
      "description": "A user controlled flanger.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/flanger.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "flashtxt ${1:iwhich}, ${2:(S|i)tring}",
      "displayText": "flashtxt iwhich, (S|i)tring",
      "opcode": "flashtxt",
      "description": "Allows text to be displayed from instruments like sliders",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/flashtxt.html",
      "type": "function"
    },
    {
      "leftLabel": "a…",
      "snippet": "flooper ${1:kAmplitude}, ${2:kPitch}, ${3:istart}, ${4:iDuration}, ${5:ifad}, ${6:iFunctionTable}",
      "displayText": "flooper kAmplitude, kPitch, istart, iDuration, ifad, iFunctionTable",
      "opcode": "flooper",
      "description": "Function-table-based crossfading looper.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/flooper.html",
      "type": "function"
    },
    {
      "leftLabel": "a…",
      "snippet": "flooper2 ${1:kAmplitude}, ${2:kPitch}, ${3:kloopstart}, ${4:kloopend}, ${5:kcrossfade}, ${6:iFunctionTable/*, istart, imode, ifenv, iskip, k*/}",
      "displayText": "flooper2 kAmplitude, kPitch, kloopstart, kloopend, kcrossfade, iFunctionTable, istart, imode, ifenv, iskip, k",
      "opcode": "flooper2",
      "description": "Function-table-based crossfading looper.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/flooper2.html",
      "type": "function"
    },
    {
      "leftLabel": "aa",
      "snippet": "fluidAllOut",
      "displayText": "fluidAllOut",
      "opcode": "fluidAllOut",
      "description": "Collects all audio from all Fluidsynth engines in a performance",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fluidAllOut.html",
      "type": "function"
    },
    {
      "snippet": "fluidCCi ${1:iEngineNumber}, ${2:iChannelNumber}, ${3:iControllerNumber}, ${4:iValue}",
      "displayText": "fluidCCi iEngineNumber, iChannelNumber, iControllerNumber, iValue",
      "opcode": "fluidCCi",
      "description": "Sends a MIDI controller data message to fluid.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fluidCCi.html",
      "type": "function"
    },
    {
      "snippet": "fluidCCk ${1:iEngineNumber}, ${2:kChannelNumber}, ${3:kControllerNumber}, ${4:kValue}",
      "displayText": "fluidCCk iEngineNumber, kChannelNumber, kControllerNumber, kValue",
      "opcode": "fluidCCk",
      "description": "Sends a MIDI controller data message to fluid.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fluidCCk.html",
      "type": "function"
    },
    {
      "snippet": "fluidControl ${1:ienginenum}, ${2:kstatus}, ${3:kchannel}, ${4:kdata1}, ${5:kdata2}",
      "displayText": "fluidControl ienginenum, kstatus, kchannel, kdata1, kdata2",
      "opcode": "fluidControl",
      "description": "Sends MIDI note on, note off, and other messages to a SoundFont preset.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fluidControl.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "fluidEngine ${1:iReverbEnabled/*, iChorusEnabled, iNumChannels, iPolyphony*/}",
      "displayText": "fluidEngine iReverbEnabled, iChorusEnabled, iNumChannels, iPolyphony",
      "opcode": "fluidEngine",
      "description": "Instantiates a fluidsynth engine.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fluidEngine.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "fluidLoad ${1:(i|S)oundfont}, ${2:ienginenum/*, ilistpresets*/}",
      "displayText": "fluidLoad (i|S)oundfont, ienginenum, ilistpresets",
      "opcode": "fluidLoad",
      "description": "Loads a SoundFont into a fluidEngine, optionally listing SoundFont contents.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fluidLoad.html",
      "type": "function"
    },
    {
      "snippet": "fluidNote ${1:ienginenum}, ${2:ichannelnum}, ${3:imidikey}, ${4:imidivel}",
      "displayText": "fluidNote ienginenum, ichannelnum, imidikey, imidivel",
      "opcode": "fluidNote",
      "description": "Plays a note on a channel in a fluidSynth engine.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fluidNote.html",
      "type": "function"
    },
    {
      "leftLabel": "aa",
      "snippet": "fluidOut ${1:ienginenum}",
      "displayText": "fluidOut ienginenum",
      "opcode": "fluidOut",
      "description": "Outputs sound from a given fluidEngine",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fluidOut.html",
      "type": "function"
    },
    {
      "snippet": "fluidProgramSelect ${1:ienginenum}, ${2:ichannelnum}, ${3:isfnum}, ${4:ibanknum}, ${5:ipresetnum}",
      "displayText": "fluidProgramSelect ienginenum, ichannelnum, isfnum, ibanknum, ipresetnum",
      "opcode": "fluidProgramSelect",
      "description": "Assigns a preset from a SoundFont to a channel on a fluidEngine.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fluidProgramSelect.html",
      "type": "function"
    },
    {
      "snippet": "fluidSetInterpMethod ${1:ienginenum}, ${2:ichannelnum}, ${3:iInterpMethod}",
      "displayText": "fluidSetInterpMethod ienginenum, ichannelnum, iInterpMethod",
      "opcode": "fluidSetInterpMethod",
      "description": "Set interpolation method for channel in Fluid Engine",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fluidSetInterpMethod.html",
      "type": "function"
    },
    {
      "leftLabel": "aa",
      "snippet": "fmanal ${1:are}, ${2:aim}",
      "displayText": "fmanal are, aim",
      "opcode": "fmanal",
      "description": "AM/FM analysis from quadrature signal.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fmanal.html",
      "type": "function"
    },
    {
      "leftLabel": "i[]",
      "snippet": "fmax ${1:iarg1}, ${2:iarg2}",
      "displayText": "fmax iarg1, iarg2",
      "opcode": "fmax",
      "description": "Maximum value function.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fmax.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "fmax ${1:karg1}, ${2:karg2}",
      "displayText": "fmax karg1, karg2",
      "opcode": "fmax",
      "description": "Maximum value function.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fmax.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "fmb3 ${1:kAmplitude}, ${2:kFrequency}, ${3:kc1}, ${4:kc2}, ${5:kvdepth}, ${6:kvrate/*, ifn1, ifn2, ifn3, ifn4, ivfn*/}",
      "displayText": "fmb3 kAmplitude, kFrequency, kc1, kc2, kvdepth, kvrate, ifn1, ifn2, ifn3, ifn4, ivfn",
      "opcode": "fmb3",
      "description": "Uses FM synthesis to create a Hammond B3 organ sound.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fmb3.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "fmbell ${1:kAmplitude}, ${2:kFrequency}, ${3:kc1}, ${4:kc2}, ${5:kvdepth}, ${6:kvrate/*, ifn1, ifn2, ifn3, ifn4, ivfn, isus*/}",
      "displayText": "fmbell kAmplitude, kFrequency, kc1, kc2, kvdepth, kvrate, ifn1, ifn2, ifn3, ifn4, ivfn, isus",
      "opcode": "fmbell",
      "description": "Uses FM synthesis to create a tublar bell sound.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fmbell.html",
      "type": "function"
    },
    {
      "leftLabel": "i[]",
      "snippet": "fmin ${1:iarg1}, ${2:iarg2}",
      "displayText": "fmin iarg1, iarg2",
      "opcode": "fmin",
      "description": "Minimum value function.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fmin.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "fmin ${1:karg1}, ${2:karg2}",
      "displayText": "fmin karg1, karg2",
      "opcode": "fmin",
      "description": "Minimum value function.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fmin.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "fmmetal ${1:kAmplitude}, ${2:kFrequency}, ${3:kc1}, ${4:kc2}, ${5:kvdepth}, ${6:kvrate}, ${7:ifn1}, ${8:ifn2}, ${9:ifn3}, ${10:ifn4}, ${11:ivfn}",
      "displayText": "fmmetal kAmplitude, kFrequency, kc1, kc2, kvdepth, kvrate, ifn1, ifn2, ifn3, ifn4, ivfn",
      "opcode": "fmmetal",
      "description": "Uses FM synthesis to create a Heavy Metal sound.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fmmetal.html",
      "type": "function"
    },
    {
      "leftLabel": "i[]",
      "snippet": "fmod ${1:iarg1}, ${2:iarg2}",
      "displayText": "fmod iarg1, iarg2",
      "opcode": "fmod",
      "description": "Compute the floating point remainder operation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fmod.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "fmod ${1:karg1}, ${2:karg2}",
      "displayText": "fmod karg1, karg2",
      "opcode": "fmod",
      "description": "Compute the floating point remainder operation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fmod.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "fmpercfl ${1:kAmplitude}, ${2:kFrequency}, ${3:kc1}, ${4:kc2}, ${5:kvdepth}, ${6:kvrate/*, ifn1, ifn2, ifn3, ifn4, ivfn*/}",
      "displayText": "fmpercfl kAmplitude, kFrequency, kc1, kc2, kvdepth, kvrate, ifn1, ifn2, ifn3, ifn4, ivfn",
      "opcode": "fmpercfl",
      "description": "Uses FM synthesis to create a percussive flute sound.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fmpercfl.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "fmrhode ${1:kAmplitude}, ${2:kFrequency}, ${3:kc1}, ${4:kc2}, ${5:kvdepth}, ${6:kvrate}, ${7:ifn1}, ${8:ifn2}, ${9:ifn3}, ${10:ifn4}, ${11:ivfn}",
      "displayText": "fmrhode kAmplitude, kFrequency, kc1, kc2, kvdepth, kvrate, ifn1, ifn2, ifn3, ifn4, ivfn",
      "opcode": "fmrhode",
      "description": "Uses FM synthesis to create a Fender Rhodes electric piano sound.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fmrhode.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "fmvoice ${1:kAmplitude}, ${2:kFrequency}, ${3:kvowel}, ${4:ktilt}, ${5:kvibamt}, ${6:kvibrate/*, ifn1, ifn2, ifn3, ifn4, ivibfn*/}",
      "displayText": "fmvoice kAmplitude, kFrequency, kvowel, ktilt, kvibamt, kvibrate, ifn1, ifn2, ifn3, ifn4, ivibfn",
      "opcode": "fmvoice",
      "description": "FM Singing Voice Synthesis",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fmvoice.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "fmwurlie ${1:kAmplitude}, ${2:kFrequency}, ${3:kc1}, ${4:kc2}, ${5:kvdepth}, ${6:kvrate}, ${7:ifn1}, ${8:ifn2}, ${9:ifn3}, ${10:ifn4}, ${11:ivfn}",
      "displayText": "fmwurlie kAmplitude, kFrequency, kc1, kc2, kvdepth, kvrate, ifn1, ifn2, ifn3, ifn4, ivfn",
      "opcode": "fmwurlie",
      "description": "Uses FM synthesis to create a Wurlitzer electric piano sound.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fmwurlie.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "fof ${1:(a|k)Amplitude}, ${2:(a|k)fund}, ${3:(a|k)form}, ${4:koct}, ${5:kband}, ${6:kris}, ${7:kDuration}, ${8:kDecayTime}, ${9:iolaps}, ${10:ifna}, ${11:ifnb}, ${12:itotdur/*, iInitialPhase, ifmode, iskip*/}",
      "displayText": "fof (a|k)Amplitude, (a|k)fund, (a|k)form, koct, kband, kris, kDuration, kDecayTime, iolaps, ifna, ifnb, itotdur, iInitialPhase, ifmode, iskip",
      "opcode": "fof",
      "description": "Produces sinusoid bursts useful for formant and granular synthesis.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fof.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "fof2 ${1:(a|k)Amplitude}, ${2:(a|k)fund}, ${3:(a|k)form}, ${4:koct}, ${5:kband}, ${6:kris}, ${7:kDuration}, ${8:kDecayTime}, ${9:iolaps}, ${10:ifna}, ${11:ifnb}, ${12:itotdur}, ${13:kInitialPhase}, ${14:kgliss/*, iskip*/}",
      "displayText": "fof2 (a|k)Amplitude, (a|k)fund, (a|k)form, koct, kband, kris, kDuration, kDecayTime, iolaps, ifna, ifnb, itotdur, kInitialPhase, kgliss, iskip",
      "opcode": "fof2",
      "description": "Produces sinusoid bursts including k-rate incremental indexing with each successive burst.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fof2.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "fofilter ${1:ain}, ${2:(a|k)cf}, ${3:(a|k)ris}, ${4:(a|k)DecayTime/*, istor*/}",
      "displayText": "fofilter ain, (a|k)cf, (a|k)ris, (a|k)DecayTime, istor",
      "opcode": "fofilter",
      "description": "Formant filter.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fofilter.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "fog ${1:(a|k)Amplitude}, ${2:(a|k)dens}, ${3:(a|k)trans}, ${4:aspd}, ${5:koct}, ${6:kband}, ${7:kris}, ${8:kDuration}, ${9:kDecayTime}, ${10:iolaps}, ${11:ifna}, ${12:ifnb}, ${13:itotdur/*, iInitialPhase, itmode, iskip*/}",
      "displayText": "fog (a|k)Amplitude, (a|k)dens, (a|k)trans, aspd, koct, kband, kris, kDuration, kDecayTime, iolaps, ifna, ifnb, itotdur, iInitialPhase, itmode, iskip",
      "opcode": "fog",
      "description": "Audio output is a succession of grains derived from data in a stored function table",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fog.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "fold ${1:aSignal}, ${2:kincr}",
      "displayText": "fold aSignal, kincr",
      "opcode": "fold",
      "description": "Adds artificial foldover to an audio signal.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fold.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "follow ${1:aSignal}, ${2:idt}",
      "displayText": "follow aSignal, idt",
      "opcode": "follow",
      "description": "Envelope follower unit generator.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/follow.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "follow2 ${1:aSignal}, ${2:katt}, ${3:krel}",
      "displayText": "follow2 aSignal, katt, krel",
      "opcode": "follow2",
      "description": "Another controllable envelope extractor.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/follow2.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "foscil ${1:(a|k)Amplitude}, ${2:kFrequency}, ${3:(a|k)car}, ${4:(a|k)mod}, ${5:kndx/*, iFunctionTable, iInitialPhase*/}",
      "displayText": "foscil (a|k)Amplitude, kFrequency, (a|k)car, (a|k)mod, kndx, iFunctionTable, iInitialPhase",
      "opcode": "foscil",
      "description": "A basic frequency modulated oscillator.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/foscil.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "foscili ${1:(a|k)Amplitude}, ${2:kFrequency}, ${3:(a|k)car}, ${4:(a|k)mod}, ${5:kndx/*, iFunctionTable, iInitialPhase*/}",
      "displayText": "foscili (a|k)Amplitude, kFrequency, (a|k)car, (a|k)mod, kndx, iFunctionTable, iInitialPhase",
      "opcode": "foscili",
      "description": "Basic frequency modulated oscillator with linear interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/foscili.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "fout ${1:Sfilename}, ${2:iformat}, ${3:aout1…}",
      "displayText": "fout Sfilename, iformat, aout1",
      "opcode": "fout",
      "description": "Outputs a-rate signals to an arbitrary number of channels.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fout.html",
      "type": "function"
    },
    {
      "snippet": "fouti ${1:ihandle}, ${2:iformat}, ${3:iflag}, ${4:iout1…}",
      "displayText": "fouti ihandle, iformat, iflag, iout1",
      "opcode": "fouti",
      "description": "Outputs i-rate signals of an arbitrary number of channels to a specified file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fouti.html",
      "type": "function"
    },
    {
      "snippet": "foutir ${1:ihandle}, ${2:iformat}, ${3:iflag}, ${4:iout1…}",
      "displayText": "foutir ihandle, iformat, iflag, iout1",
      "opcode": "foutir",
      "description": "Outputs i-rate signals from an arbitrary number of channels to a specified file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/foutir.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "foutk ${1:(S|i)filename}, ${2:iformat}, ${3:kout1…}",
      "displayText": "foutk (S|i)filename, iformat, kout1",
      "opcode": "foutk",
      "description": "Outputs k-rate signals of an arbitrary number of channels to a specified file, in raw (headerless) format.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/foutk.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "fprintks ${1:(S|i)Filename}, ${2:SString}, ${3:(a|i|k)…}",
      "displayText": "fprintks (S|i)Filename, SString, (a|i|k)",
      "opcode": "fprintks",
      "description": "Similar to printks but prints to a file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fprintks.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "fprints ${1:(S|i)Filename}, ${2:SString}, ${3:(a|i|k)val1…}",
      "displayText": "fprints (S|i)Filename, SString, (a|i|k)val1",
      "opcode": "fprints",
      "description": "Similar to prints but prints to a file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fprints.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "fractalnoise ${1:kAmplitude}, ${2:kbeta}",
      "displayText": "fractalnoise kAmplitude, kbeta",
      "opcode": "fractalnoise",
      "description": "A fractal noise generator.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/fractalnoise.html",
      "type": "function"
    },
    {
      "leftLabel": "aa",
      "snippet": "freeverb ${1:ainL}, ${2:ainR}, ${3:kRoomSize}, ${4:kHFDamp/*, iSRate, iSkip*/}",
      "displayText": "freeverb ainL, ainR, kRoomSize, kHFDamp, iSRate, iSkip",
      "opcode": "freeverb",
      "description": "Opcode version of Jezar's Freeverb",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/freeverb.html",
      "type": "function"
    },
    {
      "leftLabel": "a…",
      "snippet": "ftconv ${1:ain}, ${2:ift}, ${3:iplen/*, iskipsamples, iirlen, iskipinit*/}",
      "displayText": "ftconv ain, ift, iplen, iskipsamples, iirlen, iskipinit",
      "opcode": "ftconv",
      "description": "Low latency multichannel convolution, using a function table as impulse response source.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ftconv.html",
      "type": "function"
    },
    {
      "snippet": "ftfree ${1:ifno}, ${2:iwhen}",
      "displayText": "ftfree ifno, iwhen",
      "opcode": "ftfree",
      "description": "Deletes function table.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ftfree.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "ftgen ${1:iFunctionTable}, ${2:itime}, ${3:isize}, ${4:(S|i)gen}, ${5:iarga}",
      "displayText": "ftgen iFunctionTable, itime, isize, (S|i)gen, iarga",
      "opcode": "ftgen",
      "description": "Generate a score function table from within the orchestra.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ftgen.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "ftgen ${1:iFunctionTable}, ${2:itime}, ${3:isize}, ${4:(S|i)gen}, ${5:(S|i)arga}, ${6:iargb ...…}",
      "displayText": "ftgen iFunctionTable, itime, isize, (S|i)gen, (S|i)arga, iargb ...",
      "opcode": "ftgen",
      "description": "Generate a score function table from within the orchestra.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ftgen.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "ftgenonce ${1:ip1}, ${2:ip2dummy}, ${3:isize}, ${4:(S|i)gen}, ${5:(S|i)arga}, ${6:iargb…}",
      "displayText": "ftgenonce ip1, ip2dummy, isize, (S|i)gen, (S|i)arga, iargb",
      "opcode": "ftgenonce",
      "description": "Generate a function table from within an instrument definition, without duplication of data.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ftgenonce.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "ftgentmp ${1:ip1}, ${2:ip2dummy}, ${3:isize}, ${4:(S|i)gen}, ${5:(S|i)arga}, ${6:iargb…}",
      "displayText": "ftgentmp ip1, ip2dummy, isize, (S|i)gen, (S|i)arga, iargb",
      "opcode": "ftgentmp",
      "description": "Generate a score function table from within the orchestra, which is deleted at the end of the note.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ftgentmp.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "ftload ${1:(S|i)Filename}, ${2:iflag}, ${3:ifn1…}",
      "displayText": "ftload (S|i)Filename, iflag, ifn1",
      "opcode": "ftload",
      "description": "Load a set of previously-allocated tables from a file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ftload.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "ftloadk ${1:(S|i)Filename}, ${2:ktrig}, ${3:iflag}, ${4:ifn1…}",
      "displayText": "ftloadk (S|i)Filename, ktrig, iflag, ifn1",
      "opcode": "ftloadk",
      "description": "Load a set of previously-allocated tables from a file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ftloadk.html",
      "type": "function"
    },
    {
      "snippet": "ftmorf ${1:kftndx}, ${2:iftfn}, ${3:iresfn}",
      "displayText": "ftmorf kftndx, iftfn, iresfn",
      "opcode": "ftmorf",
      "description": "Morphs between multiple ftables as specified in a list.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ftmorf.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "ftom ${1:iFrequency}",
      "displayText": "ftom iFrequency",
      "opcode": "ftom",
      "description": "Convert frequency to midi",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ftom.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "ftom ${1:kFrequency}",
      "displayText": "ftom kFrequency",
      "opcode": "ftom",
      "description": "Convert frequency to midi",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ftom.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "ftsamplebank ${1:SDirectory}, ${2:iFirstTableNumber}, ${3:iSkipTime}, ${4:iFormat}, ${5:iChannel}",
      "displayText": "ftsamplebank SDirectory, iFirstTableNumber, iSkipTime, iFormat, iChannel",
      "opcode": "ftsamplebank",
      "description": "Reads a directory for sound files.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ftsamplebank.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "ftsamplebank ${1:SDirectory}, ${2:kFirstTableNumber}, ${3:kSkipTime}, ${4:kFormat}, ${5:kChannel}, ${6:k}",
      "displayText": "ftsamplebank SDirectory, kFirstTableNumber, kSkipTime, kFormat, kChannel, k",
      "opcode": "ftsamplebank",
      "description": "Reads a directory for sound files.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ftsamplebank.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "ftsave ${1:(S|i)Filename}, ${2:iflag}, ${3:ifn1…}",
      "displayText": "ftsave (S|i)Filename, iflag, ifn1",
      "opcode": "ftsave",
      "description": "Save a set of previously-allocated tables to a file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ftsave.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "ftsavek ${1:(S|i)Filename}, ${2:ktrig}, ${3:iflag}, ${4:ifn1…}",
      "displayText": "ftsavek (S|i)Filename, ktrig, iflag, ifn1",
      "opcode": "ftsavek",
      "description": "Save a set of previously-allocated tables to a file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ftsavek.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "gain ${1:aSignal}, ${2:krms/*, ihp, iskip*/}",
      "displayText": "gain aSignal, krms, ihp, iskip",
      "opcode": "gain",
      "description": "Adjusts the amplitude audio signal according to a root-mean-square value.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/gain.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "gainslider ${1:kindex}",
      "displayText": "gainslider kindex",
      "opcode": "gainslider",
      "description": "An implementation of a logarithmic gain curve which is similar to the gainslider~ object from Cycling 74 Max / MSP.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/gainslider.html",
      "type": "function"
    },
    {
      "leftLabel": "aik",
      "snippet": "gauss ${1:krange}",
      "displayText": "gauss krange",
      "opcode": "gauss",
      "description": "Gaussian distribution random number generator.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/gauss.html",
      "type": "function"
    },
    {
      "leftLabel": "aik",
      "snippet": "gaussi ${1:krange}, ${2:(a|k)Amplitude}, ${3:(a|k)Frequency}",
      "displayText": "gaussi krange, (a|k)Amplitude, (a|k)Frequency",
      "opcode": "gaussi",
      "description": "Gaussian distribution random number generator with interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/gaussi.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "gausstrig ${1:kAmplitude}, ${2:kFrequency}, ${3:kdev/*, imode, ifrst1*/}",
      "displayText": "gausstrig kAmplitude, kFrequency, kdev, imode, ifrst1",
      "opcode": "gausstrig",
      "description": "Random impulses around a certain frequency.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/gausstrig.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "gbuzz ${1:(a|k)Amplitude}, ${2:(a|k)Frequency}, ${3:knh}, ${4:klh}, ${5:kmul}, ${6:iFunctionTable/*, iInitialPhase*/}",
      "displayText": "gbuzz (a|k)Amplitude, (a|k)Frequency, knh, klh, kmul, iFunctionTable, iInitialPhase",
      "opcode": "gbuzz",
      "description": "Output is a set of harmonically related cosine partials.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/gbuzz.html",
      "type": "function"
    },
    {
      "leftLabel": "i[]",
      "snippet": "genarray ${1:istart}, ${2:iens/*, inc*/}",
      "displayText": "genarray istart, iens, inc",
      "opcode": "genarray",
      "description": "Generate a vector with an arithmetic sequence.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/genarray.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "genarray ${1:kstart}, ${2:kens/*, inc*/}",
      "displayText": "genarray kstart, kens, inc",
      "opcode": "genarray",
      "description": "Generate a vector with an arithmetic sequence.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/genarray.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "genarray_i ${1:istart}, ${2:iend/*, inc*/}",
      "displayText": "genarray_i istart, iend, inc",
      "opcode": "genarray_i",
      "description": "Generate a vector with an arithmetic sequence.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/genarray_i.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "gendy ${1:kAmplitude}, ${2:kampdist}, ${3:kdurdist}, ${4:kadpar}, ${5:kddpar}, ${6:kminfreq}, ${7:kmaxfreq}, ${8:kampscl}, ${9:kdurscl/*, initcps, knum*/}",
      "displayText": "gendy kAmplitude, kampdist, kdurdist, kadpar, kddpar, kminfreq, kmaxfreq, kampscl, kdurscl, initcps, knum",
      "opcode": "gendy",
      "description": "Dynamic stochastic approach to waveform synthesis conceived by Iannis Xenakis.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/gendy.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "gendyc ${1:kAmplitude}, ${2:kampdist}, ${3:kdurdist}, ${4:kadpar}, ${5:kddpar}, ${6:kminfreq}, ${7:kmaxfreq}, ${8:kampscl}, ${9:kdurscl/*, initcps, knum*/}",
      "displayText": "gendyc kAmplitude, kampdist, kdurdist, kadpar, kddpar, kminfreq, kmaxfreq, kampscl, kdurscl, initcps, knum",
      "opcode": "gendyc",
      "description": "Dynamic stochastic approach to waveform synthesis using cubic interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/gendyc.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "gendyx ${1:kAmplitude}, ${2:kampdist}, ${3:kdurdist}, ${4:kadpar}, ${5:kddpar}, ${6:kminfreq}, ${7:kmaxfreq}, ${8:kampscl}, ${9:kdurscl}, ${10:kcurveup}, ${11:kcurvedown/*, initcps, knum*/}",
      "displayText": "gendyx kAmplitude, kampdist, kdurdist, kadpar, kddpar, kminfreq, kmaxfreq, kampscl, kdurscl, kcurveup, kcurvedown, initcps, knum",
      "opcode": "gendyx",
      "description": "Variation of the dynamic stochastic approach to waveform synthesis conceived by Iannis Xenakis.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/gendyx.html",
      "type": "function"
    },
    {
      "leftLabel": "S",
      "snippet": "getcfg ${1:iopt}",
      "displayText": "getcfg iopt",
      "opcode": "getcfg",
      "description": "Return Csound settings.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/getcfg.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "getcol ${1:kin}, ${2:kcol}",
      "displayText": "getcol kin, kcol",
      "opcode": "getcol",
      "description": "Gets a given column from a 2-dimensional array as a vector.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/getcol.html",
      "type": "function"
    },
    {
      "leftLabel": "S",
      "snippet": "getftargs ${1:iftno}, ${2:ktrig}",
      "displayText": "getftargs iftno, ktrig",
      "opcode": "getftargs",
      "description": "Fill a string variable with the arguments used to create a function table at k-rate.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/getftargs.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "getrow ${1:kin}, ${2:krow}",
      "displayText": "getrow kin, krow",
      "opcode": "getrow",
      "description": "Gets a given row from a 2-dimensional array as a vector.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/getrow.html",
      "type": "function"
    },
    {
      "leftLabel": "ik",
      "snippet": "getseed",
      "displayText": "getseed",
      "opcode": "getseed",
      "description": "Reads the global seed value.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/getseed.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "gogobel ${1:kAmplitude}, ${2:kFrequency}, ${3:ihrd}, ${4:ipos}, ${5:imp}, ${6:kvibf}, ${7:kvamp}, ${8:ivfn}",
      "displayText": "gogobel kAmplitude, kFrequency, ihrd, ipos, imp, kvibf, kvamp, ivfn",
      "opcode": "gogobel",
      "description": "Audio output is a tone related to the striking of a cow bell or similar.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/gogobel.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "grain ${1:(a|k)Amplitude}, ${2:(a|k)Pitch}, ${3:(a|k)dens}, ${4:kampoff}, ${5:kpitchoff}, ${6:kgdur}, ${7:igfn}, ${8:iwfn}, ${9:imgdur/*, igrnd*/}",
      "displayText": "grain (a|k)Amplitude, (a|k)Pitch, (a|k)dens, kampoff, kpitchoff, kgdur, igfn, iwfn, imgdur, igrnd",
      "opcode": "grain",
      "description": "Generates granular synthesis textures.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/grain.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "grain2 ${1:kFrequency}, ${2:kfmd}, ${3:kgdur}, ${4:iovrlp}, ${5:kFunctionTable}, ${6:iwfn/*, irpow, iseed, imode*/}",
      "displayText": "grain2 kFrequency, kfmd, kgdur, iovrlp, kFunctionTable, iwfn, irpow, iseed, imode",
      "opcode": "grain2",
      "description": "Easy-to-use granular synthesis texture generator.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/grain2.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "grain3 ${1:kFrequency}, ${2:kInitialPhase}, ${3:kfmd}, ${4:kpmd}, ${5:kgdur}, ${6:kdens}, ${7:imaxovr}, ${8:kFunctionTable}, ${9:iwfn}, ${10:kfrpow}, ${11:kprpow/*, iseed, imode*/}",
      "displayText": "grain3 kFrequency, kInitialPhase, kfmd, kpmd, kgdur, kdens, imaxovr, kFunctionTable, iwfn, kfrpow, kprpow, iseed, imode",
      "opcode": "grain3",
      "description": "Generate granular synthesis textures with more user control.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/grain3.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "granule ${1:(a|k)Amplitude}, ${2:ivoice}, ${3:iratio}, ${4:imode}, ${5:ithd}, ${6:iFunctionTable}, ${7:ipshift}, ${8:igskip}, ${9:igskip_os}, ${10:ilength}, ${11:kgap}, ${12:igap_os}, ${13:kgsize}, ${14:igsize_os}, ${15:iatt}, ${16:iDecayTime/*, iseed, ipitch1, ipitch2, ipitch3, ipitch4, ifnenv*/}",
      "displayText": "granule (a|k)Amplitude, ivoice, iratio, imode, ithd, iFunctionTable, ipshift, igskip, igskip_os, ilength, kgap, igap_os, kgsize, igsize_os, iatt, iDecayTime, iseed, ipitch1, ipitch2, ipitch3, ipitch4, ifnenv",
      "opcode": "granule",
      "description": "A more complex granular synthesis texture generator.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/granule.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "guiro ${1:kAmplitude}, ${2:idettack/*, inum, idamp, imaxshake, iFrequency, ifreq1*/}",
      "displayText": "guiro kAmplitude, idettack, inum, idamp, imaxshake, iFrequency, ifreq1",
      "opcode": "guiro",
      "description": "Semi-physical model of a guiro sound.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/guiro.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "harmon ${1:aSignal}, ${2:kestfrq}, ${3:kmaxvar}, ${4:kgenfreq1}, ${5:kgenfreq2}, ${6:imode}, ${7:iminfrq}, ${8:iprd}",
      "displayText": "harmon aSignal, kestfrq, kmaxvar, kgenfreq1, kgenfreq2, imode, iminfrq, iprd",
      "opcode": "harmon",
      "description": "Analyze an audio input and generate harmonizing voices in synchrony.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/harmon.html",
      "type": "function"
    },
    {
      "leftLabel": "aa",
      "snippet": "hilbert ${1:aSignal}",
      "displayText": "hilbert aSignal",
      "opcode": "hilbert",
      "description": "A Hilbert transformer.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/hilbert.html",
      "type": "function"
    },
    {
      "leftLabel": "aa",
      "snippet": "hilbert2 ${1:aSignal}, ${2:ifftsize}, ${3:ihopsize}",
      "displayText": "hilbert2 aSignal, ifftsize, ihopsize",
      "opcode": "hilbert2",
      "description": "A Hilbert rransformer.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/hilbert2.html",
      "type": "function"
    },
    {
      "leftLabel": "aaiii",
      "snippet": "hrtfearly ${1:asrc}, ${2:(a|k)srcx}, ${3:(a|k)srcy}, ${4:(a|k)srcz}, ${5:(a|k)lstnrx}, ${6:(a|k)lstnry}, ${7:(a|k)lstnrz}, ${8:Sfilel}, ${9:Sfiler}, ${10:idefroom/*, ifade, isr, iorder, ithreed, kheadrot, iroomx, iroomy, iroomz, iwallhigh, iwalllow, iwallgain1, iwallgain2, iwallgain3, ifloorhigh, ifloorlow, ifloorgain1, ifloorgain2, ifloorgain3, iceilinghigh, iceilinglow, iceilinggain1, iceilinggain2, iceilinggain3*/}",
      "displayText": "hrtfearly asrc, (a|k)srcx, (a|k)srcy, (a|k)srcz, (a|k)lstnrx, (a|k)lstnry, (a|k)lstnrz, Sfilel, Sfiler, idefroom, ifade, isr, iorder, ithreed, kheadrot, iroomx, iroomy, iroomz, iwallhigh, iwalllow, iwallgain1, iwallgain2, iwallgain3, ifloorhigh, ifloorlow, ifloorgain1, ifloorgain2, ifloorgain3, iceilinghigh, iceilinglow, iceilinggain1, iceilinggain2, iceilinggain3",
      "opcode": "hrtfearly",
      "description": "Generates 3D binaural audio with high-fidelity early reflections in a parametric room using a Phase Truncation algorithm.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/hrtfearly.html",
      "type": "function"
    },
    {
      "leftLabel": "aa",
      "snippet": "hrtfer ${1:aSignal}, ${2:kaz}, ${3:kelev}, ${4:S}",
      "displayText": "hrtfer aSignal, kaz, kelev, S",
      "opcode": "hrtfer",
      "description": "Creates 3D audio for two speakers.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/hrtfer.html",
      "type": "function"
    },
    {
      "leftLabel": "aa",
      "snippet": "hrtfmove ${1:asrc}, ${2:kAz}, ${3:kElev}, ${4:Sfilel}, ${5:Sfiler/*, imode, ifade, isr*/}",
      "displayText": "hrtfmove asrc, kAz, kElev, Sfilel, Sfiler, imode, ifade, isr",
      "opcode": "hrtfmove",
      "description": "Generates dynamic 3d binaural audio for headphones using magnitude interpolation and phase truncation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/hrtfmove.html",
      "type": "function"
    },
    {
      "leftLabel": "aa",
      "snippet": "hrtfmove2 ${1:asrc}, ${2:kAz}, ${3:kElev}, ${4:Sfilel}, ${5:Sfiler/*, ioverlap, iradius, isr*/}",
      "displayText": "hrtfmove2 asrc, kAz, kElev, Sfilel, Sfiler, ioverlap, iradius, isr",
      "opcode": "hrtfmove2",
      "description": "Generates dynamic 3d binaural audio for headphones using a Woodworth based spherical head model with improved low frequency phase accuracy.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/hrtfmove2.html",
      "type": "function"
    },
    {
      "leftLabel": "aai",
      "snippet": "hrtfreverb ${1:asrc}, ${2:ilowrt60}, ${3:ihighrt60}, ${4:Sfilel}, ${5:Sfiler/*, isr, imfp, iorder*/}",
      "displayText": "hrtfreverb asrc, ilowrt60, ihighrt60, Sfilel, Sfiler, isr, imfp, iorder",
      "opcode": "hrtfreverb",
      "description": "A binaural, dynamic FDN based diffuse-field reverberator. The opcode works independently as an efficient, flexible reverberator.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/hrtfreverb.html",
      "type": "function"
    },
    {
      "leftLabel": "aa",
      "snippet": "hrtfstat ${1:asrc}, ${2:iAz}, ${3:iElev}, ${4:Sfilel}, ${5:Sfiler/*, iradius, isr*/}",
      "displayText": "hrtfstat asrc, iAz, iElev, Sfilel, Sfiler, iradius, isr",
      "opcode": "hrtfstat",
      "description": "Generates static 3d binaural audio for headphones using a Woodworth based spherical head model with improved low frequency phase accuracy.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/hrtfstat.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "hsboscil ${1:kAmplitude}, ${2:ktone}, ${3:kbrite}, ${4:ibasfreq}, ${5:iwfn}, ${6:ioctfn/*, ioctcnt, iInitialPhase*/}",
      "displayText": "hsboscil kAmplitude, ktone, kbrite, ibasfreq, iwfn, ioctfn, ioctcnt, iInitialPhase",
      "opcode": "hsboscil",
      "description": "An oscillator which takes tonality and brightness as arguments.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/hsboscil.html",
      "type": "function"
    },
    {
      "snippet": "hvs1 ${1:kx}, ${2:inumParms}, ${3:inumPointsX}, ${4:iOutTab}, ${5:iPositionsTab}, ${6:iSnapTab/*, iConfigTab*/}",
      "displayText": "hvs1 kx, inumParms, inumPointsX, iOutTab, iPositionsTab, iSnapTab, iConfigTab",
      "opcode": "hvs1",
      "description": "Allows one-dimensional Hyper Vectorial Synthesis (HVS) controlled by externally-updated k-variables.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/hvs1.html",
      "type": "function"
    },
    {
      "snippet": "hvs2 ${1:kx}, ${2:ky}, ${3:inumParms}, ${4:inumPointsX}, ${5:inumPointsY}, ${6:iOutTab}, ${7:iPositionsTab}, ${8:iSnapTab/*, iConfigTab*/}",
      "displayText": "hvs2 kx, ky, inumParms, inumPointsX, inumPointsY, iOutTab, iPositionsTab, iSnapTab, iConfigTab",
      "opcode": "hvs2",
      "description": "Allows two-dimensional Hyper Vectorial Synthesis (HVS) controlled by externally-updated k-variables.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/hvs2.html",
      "type": "function"
    },
    {
      "snippet": "hvs3 ${1:kx}, ${2:ky}, ${3:kz}, ${4:inumParms}, ${5:inumPointsX}, ${6:inumPointsY}, ${7:inumPointsZ}, ${8:iOutTab}, ${9:iPositionsTab}, ${10:iSnapTab/*, iConfigTab*/}",
      "displayText": "hvs3 kx, ky, kz, inumParms, inumPointsX, inumPointsY, inumPointsZ, iOutTab, iPositionsTab, iSnapTab, iConfigTab",
      "opcode": "hvs3",
      "description": "Allows three-dimensional Hyper Vectorial Synthesis (HVS) controlled by externally-updated k-variables.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/hvs3.html",
      "type": "function"
    },
    {
      "leftLabel": "i[]",
      "snippet": "hypot ${1:iarg1}, ${2:iarg2}",
      "displayText": "hypot iarg1, iarg2",
      "opcode": "hypot",
      "description": "Euclidean distance function.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/hypot.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "hypot ${1:karg1}, ${2:karg2}",
      "displayText": "hypot karg1, karg2",
      "opcode": "hypot",
      "description": "Euclidean distance function.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/hypot.html",
      "type": "function"
    },
    {
      "snippet": "ihold",
      "displayText": "ihold",
      "opcode": "ihold",
      "description": "Creates a held note.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ihold.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "imagecreate ${1:iwidth}, ${2:iheight}",
      "displayText": "imagecreate iwidth, iheight",
      "opcode": "imagecreate",
      "description": "Create an empty image of a given size.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/imagecreate.html",
      "type": "function"
    },
    {
      "snippet": "imagefree ${1:iimagenum}",
      "displayText": "imagefree iimagenum",
      "opcode": "imagefree",
      "description": "Frees memory allocated for a previously loaded or created image.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/imagefree.html",
      "type": "function"
    },
    {
      "leftLabel": "sss",
      "snippet": "imagegetpixel ${1:iimagenum}, ${2:(a|k)x}, ${3:(a|k)y}",
      "displayText": "imagegetpixel iimagenum, (a|k)x, (a|k)y",
      "opcode": "imagegetpixel",
      "description": "Return the RGB pixel values of a previously opened or created image.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/imagegetpixel.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "imageload ${1:Silename}",
      "displayText": "imageload Silename",
      "opcode": "imageload",
      "description": "Load an image.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/imageload.html",
      "type": "function"
    },
    {
      "snippet": "imagesave ${1:iimagenum}, ${2:Silename}",
      "displayText": "imagesave iimagenum, Silename",
      "opcode": "imagesave",
      "description": "Save a previously created image.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/imagesave.html",
      "type": "function"
    },
    {
      "snippet": "imagesetpixel ${1:iimagenum}, ${2:(a|k)x}, ${3:(a|k)y}, ${4:(a|k)red}, ${5:(a|k)green}, ${6:(a|k)blue}",
      "displayText": "imagesetpixel iimagenum, (a|k)x, (a|k)y, (a|k)red, (a|k)green, (a|k)blue",
      "opcode": "imagesetpixel",
      "description": "Set the RGB value of a pixel inside a previously opened or created image.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/imagesetpixel.html",
      "type": "function"
    },
    {
      "leftLabel": "ii",
      "snippet": "imagesize ${1:iimagenum}",
      "displayText": "imagesize iimagenum",
      "opcode": "imagesize",
      "description": "Return the width and height of a previously opened or created image.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/imagesize.html",
      "type": "function"
    },
    {
      "leftLabel": "aa[]aa",
      "snippet": "in",
      "displayText": "in",
      "opcode": "in",
      "description": "Reads mono audio data from an external device or stream.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/in.html",
      "type": "function"
    },
    {
      "leftLabel": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
      "snippet": "in32",
      "displayText": "in32",
      "opcode": "in32",
      "description": "Reads a 32-channel audio signal from an external device or stream.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/in32.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "inch ${1:kchan1}",
      "displayText": "inch kchan1",
      "opcode": "inch",
      "description": "Reads from numbered channels in an external audio signal or stream.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/inch.html",
      "type": "function"
    },
    {
      "leftLabel": "a…",
      "snippet": "inch ${1:kchan1…}",
      "displayText": "inch kchan1",
      "opcode": "inch",
      "description": "Reads from numbered channels in an external audio signal or stream.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/inch.html",
      "type": "function"
    },
    {
      "leftLabel": "aaaaaa",
      "snippet": "inh",
      "displayText": "inh",
      "opcode": "inh",
      "description": "Reads six-channel audio data from an external device or stream.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/inh.html",
      "type": "function"
    },
    {
      "leftLabel": ".[]",
      "snippet": "init ${1:iarg…}",
      "displayText": "init iarg",
      "opcode": "init",
      "description": "Puts the value of the i-time expression into a k-, a-rate or t- variable.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/init.html",
      "type": "function"
    },
    {
      "leftLabel": "i…",
      "snippet": "init ${1:iarg…}",
      "displayText": "init iarg",
      "opcode": "init",
      "description": "Puts the value of the i-time expression into a k-, a-rate or t- variable.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/init.html",
      "type": "function"
    },
    {
      "leftLabel": "S",
      "snippet": "init ${1:(S|i)arg}",
      "displayText": "init (S|i)arg",
      "opcode": "init",
      "description": "Puts the value of the i-time expression into a k-, a-rate or t- variable.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/init.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "init ${1:farg}",
      "displayText": "init farg",
      "opcode": "init",
      "description": "Puts the value of the i-time expression into a k-, a-rate or t- variable.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/init.html",
      "type": "function"
    },
    {
      "leftLabel": "a…",
      "snippet": "init ${1:iarg…}",
      "displayText": "init iarg",
      "opcode": "init",
      "description": "Puts the value of the i-time expression into a k-, a-rate or t- variable.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/init.html",
      "type": "function"
    },
    {
      "leftLabel": "k…",
      "snippet": "init ${1:iarg…}",
      "displayText": "init iarg",
      "opcode": "init",
      "description": "Puts the value of the i-time expression into a k-, a-rate or t- variable.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/init.html",
      "type": "function"
    },
    {
      "snippet": "initc14 ${1:ichan}, ${2:ictlno1}, ${3:ictlno2}, ${4:ivalue}",
      "displayText": "initc14 ichan, ictlno1, ictlno2, ivalue",
      "opcode": "initc14",
      "description": "Initializes the controllers used to create a 14-bit MIDI value.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/initc14.html",
      "type": "function"
    },
    {
      "snippet": "initc21 ${1:ichan}, ${2:ictlno1}, ${3:ictlno2}, ${4:ictlno3}, ${5:ivalue}",
      "displayText": "initc21 ichan, ictlno1, ictlno2, ictlno3, ivalue",
      "opcode": "initc21",
      "description": "Initializes the controllers used to create a 21-bit MIDI value.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/initc21.html",
      "type": "function"
    },
    {
      "snippet": "initc7 ${1:ichan}, ${2:ictlno}, ${3:ivalue}",
      "displayText": "initc7 ichan, ictlno, ivalue",
      "opcode": "initc7",
      "description": "Initializes the controller used to create a 7-bit MIDI value.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/initc7.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "inleta ${1:Sname}",
      "displayText": "inleta Sname",
      "opcode": "inleta",
      "description": "Receives an arate signal into an instrument through a named port.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/inleta.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "inletf ${1:Sname}",
      "displayText": "inletf Sname",
      "opcode": "inletf",
      "description": "Receives an frate signal (fsig) into an instrument from a named port.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/inletf.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "inletk ${1:Sname}",
      "displayText": "inletk Sname",
      "opcode": "inletk",
      "description": "Receives a krate signal into an instrument from a named port.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/inletk.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "inletkid ${1:Sname}, ${2:SinstanceID}",
      "displayText": "inletkid Sname, SinstanceID",
      "opcode": "inletkid",
      "description": "Receives a krate signal into an instrument from a named port.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/inletkid.html",
      "type": "function"
    },
    {
      "leftLabel": "a[]",
      "snippet": "inletv ${1:Sname}",
      "displayText": "inletv Sname",
      "opcode": "inletv",
      "description": "Receives an arate array signal into an instrument through a named port.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/inletv.html",
      "type": "function"
    },
    {
      "leftLabel": "aaaaaaaa",
      "snippet": "ino",
      "displayText": "ino",
      "opcode": "ino",
      "description": "Reads eight-channel audio data from an external device or stream.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ino.html",
      "type": "function"
    },
    {
      "leftLabel": "aaaa",
      "snippet": "inq",
      "displayText": "inq",
      "opcode": "inq",
      "description": "Reads quad audio data from an external device or stream.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/inq.html",
      "type": "function"
    },
    {
      "snippet": "inrg ${1:kstart}, ${2:ain1…}",
      "displayText": "inrg kstart, ain1",
      "opcode": "inrg",
      "description": "Allow input from a range of adjacent audio channels from the audio input device",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/inrg.html",
      "type": "function"
    },
    {
      "leftLabel": "aa",
      "snippet": "ins",
      "displayText": "ins",
      "opcode": "ins",
      "description": "Reads stereo audio data from an external device or stream.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ins.html",
      "type": "function"
    },
    {
      "snippet": "insglobal ${1:Ssource}, ${2:instrnum…}",
      "displayText": "insglobal Ssource, instrnum",
      "opcode": "insglobal",
      "description": "An opcode which can be used to implement a remote orchestra. This opcode will send note events from a source machine to many destinations.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/insglobal.html",
      "type": "function"
    },
    {
      "snippet": "insremot ${1:Sdestination}, ${2:Ssource}, ${3:instrnum…}",
      "displayText": "insremot Sdestination, Ssource, instrnum",
      "opcode": "insremot",
      "description": "An opcode which can be used to implement a remote orchestra. This opcode will send note events from a source machine to one destination.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/insremot.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "integ ${1:(a|k)Signal/*, iskip*/}",
      "displayText": "integ (a|k)Signal, iskip",
      "opcode": "integ",
      "description": "Modify a signal by integration.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/integ.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "interp ${1:kSignal/*, iskip, imode, ivalue*/}",
      "displayText": "interp kSignal, iskip, imode, ivalue",
      "opcode": "interp",
      "description": "Converts a control signal to an audio signal using linear interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/interp.html",
      "type": "function"
    },
    {
      "leftLabel": "S",
      "snippet": "invalue ${1:(S|i)ChannelName}",
      "displayText": "invalue (S|i)ChannelName",
      "opcode": "invalue",
      "description": "Reads a k-rate signal from a user-defined channel.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/invalue.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "invalue ${1:(S|i)ChannelName}",
      "displayText": "invalue (S|i)ChannelName",
      "opcode": "invalue",
      "description": "Reads a k-rate signal from a user-defined channel.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/invalue.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "invalue ${1:(S|i)ChannelName}",
      "displayText": "invalue (S|i)ChannelName",
      "opcode": "invalue",
      "description": "Reads a k-rate signal from a user-defined channel.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/invalue.html",
      "type": "function"
    },
    {
      "leftLabel": "aaaaaaaaaaaaaaaa",
      "snippet": "inx",
      "displayText": "inx",
      "opcode": "inx",
      "description": "Reads a 16-channel audio signal from an external device or stream.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/inx.html",
      "type": "function"
    },
    {
      "snippet": "inz ${1:ksig1}",
      "displayText": "inz ksig1",
      "opcode": "inz",
      "description": "Reads multi-channel audio samples into a ZAK array from an external device or stream.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/inz.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "jitter ${1:kAmplitude}, ${2:kcpsMin}, ${3:kcpsMax}",
      "displayText": "jitter kAmplitude, kcpsMin, kcpsMax",
      "opcode": "jitter",
      "description": "Generates a segmented line whose segments are randomly generated.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/jitter.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "jitter2 ${1:ktotamp}, ${2:kamp1}, ${3:kcps1}, ${4:kamp2}, ${5:kcps2}, ${6:kamp3}, ${7:kcps3/*, iopt*/}",
      "displayText": "jitter2 ktotamp, kamp1, kcps1, kamp2, kcps2, kamp3, kcps3, iopt",
      "opcode": "jitter2",
      "description": "Generates a segmented line with user-controllable random segments.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/jitter2.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "jspline ${1:(a|k)Amplitude}, ${2:kcpsMin}, ${3:kcpsMax}",
      "displayText": "jspline (a|k)Amplitude, kcpsMin, kcpsMax",
      "opcode": "jspline",
      "description": "A jitter-spline generator.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/jspline.html",
      "type": "function"
    },
    {
      "snippet": "ktableseg ${1:ifn1}, ${2:idur1}, ${3:ifn2…}",
      "displayText": "ktableseg ifn1, idur1, ifn2",
      "opcode": "ktableseg",
      "description": "Deprecated.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ktableseg.html",
      "type": "function"
    },
    {
      "leftLabel": "ik",
      "snippet": "lenarray ${1:(a|i|k|S)array/*, iwhich*/}",
      "displayText": "lenarray (a|i|k|S)array, iwhich",
      "opcode": "lenarray",
      "description": "Evaluates the size or shape length of an array.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/lenarray.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "lfo ${1:kAmplitude}, ${2:kFrequency/*, itype*/}",
      "displayText": "lfo kAmplitude, kFrequency, itype",
      "opcode": "lfo",
      "description": "A low frequency oscillator of various shapes.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/lfo.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "limit ${1:aSignal}, ${2:klow}, ${3:khigh}",
      "displayText": "limit aSignal, klow, khigh",
      "opcode": "limit",
      "description": "Sets the lower and upper limits of the value it processes.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/limit.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "limit ${1:iSignal}, ${2:ilow}, ${3:ihigh}",
      "displayText": "limit iSignal, ilow, ihigh",
      "opcode": "limit",
      "description": "Sets the lower and upper limits of the value it processes.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/limit.html",
      "type": "function"
    },
    {
      "leftLabel": "i[]",
      "snippet": "limit ${1:iSignal}, ${2:ilow}, ${3:ihigh}",
      "displayText": "limit iSignal, ilow, ihigh",
      "opcode": "limit",
      "description": "Sets the lower and upper limits of the value it processes.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/limit.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "limit ${1:kSignal}, ${2:klow}, ${3:khigh}",
      "displayText": "limit kSignal, klow, khigh",
      "opcode": "limit",
      "description": "Sets the lower and upper limits of the value it processes.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/limit.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "limit ${1:kSignal}, ${2:klow}, ${3:khigh}",
      "displayText": "limit kSignal, klow, khigh",
      "opcode": "limit",
      "description": "Sets the lower and upper limits of the value it processes.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/limit.html",
      "type": "function"
    },
    {
      "leftLabel": "i[]",
      "snippet": "limit1 ${1:iarg}",
      "displayText": "limit1 iarg",
      "opcode": "limit1",
      "description": "Limiting function",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/limit1.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "limit1 ${1:karg}",
      "displayText": "limit1 karg",
      "opcode": "limit1",
      "description": "Limiting function",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/limit1.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "line ${1:ia}, ${2:iDuration}, ${3:ib}",
      "displayText": "line ia, iDuration, ib",
      "opcode": "line",
      "description": "Trace a straight line between specified points.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/line.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "linen ${1:(a|k)Amplitude}, ${2:iRiseTime}, ${3:iDuration}, ${4:iDecayTime}",
      "displayText": "linen (a|k)Amplitude, iRiseTime, iDuration, iDecayTime",
      "opcode": "linen",
      "description": "Applies a straight line rise and decay pattern to an input amp signal.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/linen.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "linen ${1:kAmplitude}, ${2:iRiseTime}, ${3:iDuration}, ${4:iDecayTime}",
      "displayText": "linen kAmplitude, iRiseTime, iDuration, iDecayTime",
      "opcode": "linen",
      "description": "Applies a straight line rise and decay pattern to an input amp signal.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/linen.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "linenr ${1:(a|k)Amplitude}, ${2:iRiseTime}, ${3:iDecayTime}, ${4:iAttenuationFactor}",
      "displayText": "linenr (a|k)Amplitude, iRiseTime, iDecayTime, iAttenuationFactor",
      "opcode": "linenr",
      "description": "The linen opcode extended with a final release segment.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/linenr.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "linenr ${1:kAmplitude}, ${2:iRiseTime}, ${3:iDecayTime}, ${4:iAttenuationFactor}",
      "displayText": "linenr kAmplitude, iRiseTime, iDecayTime, iAttenuationFactor",
      "opcode": "linenr",
      "description": "The linen opcode extended with a final release segment.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/linenr.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "lineto ${1:kSignal}, ${2:ktime}",
      "displayText": "lineto kSignal, ktime",
      "opcode": "lineto",
      "description": "Generate glissandos starting from a control signal.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/lineto.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "linlin ${1:kin}, ${2:ksrclo}, ${3:ksrchi}, ${4:kdstlo}, ${5:kdsthi}",
      "displayText": "linlin kin, ksrclo, ksrchi, kdstlo, kdsthi",
      "opcode": "linlin",
      "description": "Linear to linear interpolation",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/linlin.html",
      "type": "function"
    },
    {
      "leftLabel": "aik",
      "snippet": "linrand ${1:krange}",
      "displayText": "linrand krange",
      "opcode": "linrand",
      "description": "Linear distribution random number generator (positive values only).",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/linrand.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "linseg ${1:ia}, ${2:idur1}, ${3:ib…}",
      "displayText": "linseg ia, idur1, ib",
      "opcode": "linseg",
      "description": "Trace a series of line segments between specified points.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/linseg.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "linsegb ${1:ia}, ${2:itim1}, ${3:ib…}",
      "displayText": "linsegb ia, itim1, ib",
      "opcode": "linsegb",
      "description": "Trace a series of line segments between specified absolute points.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/linsegb.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "linsegr ${1:ia}, ${2:idur1}, ${3:ib…}",
      "displayText": "linsegr ia, idur1, ib",
      "opcode": "linsegr",
      "description": "Trace a series of line segments between specified points including a release segment.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/linsegr.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "liveconv ${1:ain}, ${2:ift}, ${3:iplen}, ${4:kupdate}, ${5:kclear}",
      "displayText": "liveconv ain, ift, iplen, kupdate, kclear",
      "opcode": "liveconv",
      "description": "Partitioned convolution with dynamically reloadable impulse response",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/liveconv.html",
      "type": "function"
    },
    {
      "leftLabel": "a…",
      "snippet": "locsend",
      "displayText": "locsend",
      "opcode": "locsend",
      "description": "Distributes the audio signals of a previous locsig opcode.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/locsend.html",
      "type": "function"
    },
    {
      "leftLabel": "a…",
      "snippet": "locsig ${1:aSignal}, ${2:kdegree}, ${3:kdistance}, ${4:kreverbsend}",
      "displayText": "locsig aSignal, kdegree, kdistance, kreverbsend",
      "opcode": "locsig",
      "description": "Takes an input signal and distributes between 2 or 4 channels.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/locsig.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "logcurve ${1:kindex}, ${2:ksteepness}",
      "displayText": "logcurve kindex, ksteepness",
      "opcode": "logcurve",
      "description": "This opcode implements a formula for generating a normalised logarithmic curve in range 0 - 1. It is based on the Max / MSP work of Eric Singer (c) 1994.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/logcurve.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "loop_ge ${1:(i|k)ndx}, ${2:(i|k)decr}, ${3:(i|k)min}, ${4:label}",
      "displayText": "loop_ge (i|k)ndx, (i|k)decr, (i|k)min, label",
      "opcode": "loop_ge",
      "description": "Looping constructions.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/loop_ge.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "loop_gt ${1:(i|k)ndx}, ${2:(i|k)decr}, ${3:(i|k)min}, ${4:label}",
      "displayText": "loop_gt (i|k)ndx, (i|k)decr, (i|k)min, label",
      "opcode": "loop_gt",
      "description": "Looping constructions.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/loop_gt.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "loop_le ${1:(i|k)ndx}, ${2:(i|k)ncr}, ${3:(i|k)max}, ${4:label}",
      "displayText": "loop_le (i|k)ndx, (i|k)ncr, (i|k)max, label",
      "opcode": "loop_le",
      "description": "Looping constructions.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/loop_le.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "loop_lt ${1:(i|k)ndx}, ${2:(i|k)ncr}, ${3:(i|k)max}, ${4:label}",
      "displayText": "loop_lt (i|k)ndx, (i|k)ncr, (i|k)max, label",
      "opcode": "loop_lt",
      "description": "Looping constructions.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/loop_lt.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "loopseg ${1:kFrequency}, ${2:ktrig}, ${3:iphase}, ${4:kvalue0…}",
      "displayText": "loopseg kFrequency, ktrig, iphase, kvalue0",
      "opcode": "loopseg",
      "description": "Generate control signal consisting of linear segments delimited by two or more specified points.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/loopseg.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "loopsegp ${1:kphase}, ${2:kvalue0…}",
      "displayText": "loopsegp kphase, kvalue0",
      "opcode": "loopsegp",
      "description": "Control signals based on linear segments.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/loopsegp.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "looptseg ${1:kFrequency}, ${2:ktrig}, ${3:iphase}, ${4:kvalue0…}",
      "displayText": "looptseg kFrequency, ktrig, iphase, kvalue0",
      "opcode": "looptseg",
      "description": "Generate control signal consisting of exponential or linear segments delimited by two or more specified points.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/looptseg.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "loopxseg ${1:kFrequency}, ${2:ktrig}, ${3:iphase}, ${4:ktime0…}",
      "displayText": "loopxseg kFrequency, ktrig, iphase, ktime0",
      "opcode": "loopxseg",
      "description": "Generate control signal consisting of exponential segments delimited by two or more specified points.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/loopxseg.html",
      "type": "function"
    },
    {
      "leftLabel": "aaa",
      "snippet": "lorenz ${1:ksv}, ${2:krv}, ${3:kbv}, ${4:kh}, ${5:ix}, ${6:iy}, ${7:iz}, ${8:iskip/*, iskipinit*/}",
      "displayText": "lorenz ksv, krv, kbv, kh, ix, iy, iz, iskip, iskipinit",
      "opcode": "lorenz",
      "description": "Implements the Lorenz system of equations.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/lorenz.html",
      "type": "function"
    },
    {
      "leftLabel": "a…",
      "snippet": "loscil ${1:(a|k)Amplitude}, ${2:kFrequency/*, iFunctionTable, ibas, imod1, ibeg1, iend1, imod2, ibeg2, iend2*/}",
      "displayText": "loscil (a|k)Amplitude, kFrequency, iFunctionTable, ibas, imod1, ibeg1, iend1, imod2, ibeg2, iend2",
      "opcode": "loscil",
      "description": "Read sampled sound from a table.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/loscil.html",
      "type": "function"
    },
    {
      "leftLabel": "a…",
      "snippet": "loscil3 ${1:(a|k)Amplitude}, ${2:kFrequency/*, iFunctionTable, ibas, imod1, ibeg1, iend1, imod2, ibeg2, iend2*/}",
      "displayText": "loscil3 (a|k)Amplitude, kFrequency, iFunctionTable, ibas, imod1, ibeg1, iend1, imod2, ibeg2, iend2",
      "opcode": "loscil3",
      "description": "Read sampled sound from a table using cubic interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/loscil3.html",
      "type": "function"
    },
    {
      "leftLabel": "a…",
      "snippet": "loscilx ${1:(a|k)Amplitude}, ${2:kFrequency}, ${3:iFunctionTable/*, iwsize, ibas, istrt, imod, ibeg, iend*/}",
      "displayText": "loscilx (a|k)Amplitude, kFrequency, iFunctionTable, iwsize, ibas, istrt, imod, ibeg, iend",
      "opcode": "loscilx",
      "description": "Read multi-channel sampled sound from a table.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/loscilx.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "lowpass2 ${1:aSignal}, ${2:(a|k)cf}, ${3:(a|k)q/*, iskip*/}",
      "displayText": "lowpass2 aSignal, (a|k)cf, (a|k)q, iskip",
      "opcode": "lowpass2",
      "description": "A resonant lowpass filter.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/lowpass2.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "lowpass2 ${1:aSignal}, ${2:acf}, ${3:kq}, ${4:askip/*, i*/}",
      "displayText": "lowpass2 aSignal, acf, kq, askip, i",
      "opcode": "lowpass2",
      "description": "A resonant lowpass filter.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/lowpass2.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "lowres ${1:aSignal}, ${2:(a|k)cutoff}, ${3:(a|k)resonance/*, iskip*/}",
      "displayText": "lowres aSignal, (a|k)cutoff, (a|k)resonance, iskip",
      "opcode": "lowres",
      "description": "Another resonant lowpass filter.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/lowres.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "lowresx ${1:aSignal}, ${2:(a|k)cutoff}, ${3:(a|k)resonance/*, inumlayer, iskip*/}",
      "displayText": "lowresx aSignal, (a|k)cutoff, (a|k)resonance, inumlayer, iskip",
      "opcode": "lowresx",
      "description": "Simulates layers of serially connected resonant lowpass filters.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/lowresx.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "lpf18 ${1:aSignal}, ${2:(a|k)fco}, ${3:(a|k)res}, ${4:(a|k)dist/*, iskip*/}",
      "displayText": "lpf18 aSignal, (a|k)fco, (a|k)res, (a|k)dist, iskip",
      "opcode": "lpf18",
      "description": "A 3-pole sweepable resonant lowpass filter.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/lpf18.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "lpfreson ${1:aSignal}, ${2:kfrqratio}",
      "displayText": "lpfreson aSignal, kfrqratio",
      "opcode": "lpfreson",
      "description": "Resynthesises a signal from the data passed internally by a previous lpread, applying formant shifting.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/lpfreson.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "lphasor ${1:(a|k)trns/*, ilps, ilpe, imode, istrt, istor, i, i*/}",
      "displayText": "lphasor (a|k)trns, ilps, ilpe, imode, istrt, istor, i, i",
      "opcode": "lphasor",
      "description": "Generates a table index for sample playback",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/lphasor.html",
      "type": "function"
    },
    {
      "snippet": "lpinterp ${1:islot1}, ${2:islot2}, ${3:kmix}",
      "displayText": "lpinterp islot1, islot2, kmix",
      "opcode": "lpinterp",
      "description": "Computes a new set of poles from the interpolation between two analysis.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/lpinterp.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "lposcil ${1:kAmplitude}, ${2:kfreqratio}, ${3:kloop}, ${4:kend/*, iFunctionTable, iInitialPhase*/}",
      "displayText": "lposcil kAmplitude, kfreqratio, kloop, kend, iFunctionTable, iInitialPhase",
      "opcode": "lposcil",
      "description": "Read sampled sound from a table with looping and high precision.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/lposcil.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "lposcil3 ${1:kAmplitude}, ${2:kfreqratio}, ${3:kloop}, ${4:kend/*, iFunctionTable, iInitialPhase*/}",
      "displayText": "lposcil3 kAmplitude, kfreqratio, kloop, kend, iFunctionTable, iInitialPhase",
      "opcode": "lposcil3",
      "description": "Read sampled sound from a table with high precision and cubic interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/lposcil3.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "lposcila ${1:aAmplitude}, ${2:kfreqratio}, ${3:kloop}, ${4:kend}, ${5:ift/*, iInitialPhase*/}",
      "displayText": "lposcila aAmplitude, kfreqratio, kloop, kend, ift, iInitialPhase",
      "opcode": "lposcila",
      "description": "Read sampled sound from a table with looping and high precision.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/lposcila.html",
      "type": "function"
    },
    {
      "leftLabel": "aa",
      "snippet": "lposcilsa ${1:aAmplitude}, ${2:kfreqratio}, ${3:kloop}, ${4:kend}, ${5:ift/*, iInitialPhase*/}",
      "displayText": "lposcilsa aAmplitude, kfreqratio, kloop, kend, ift, iInitialPhase",
      "opcode": "lposcilsa",
      "description": "Read stereo sampled sound from a table with looping and high precision.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/lposcilsa.html",
      "type": "function"
    },
    {
      "leftLabel": "aa",
      "snippet": "lposcilsa2 ${1:aAmplitude}, ${2:kfreqratio}, ${3:kloop}, ${4:kend}, ${5:ift/*, iInitialPhase*/}",
      "displayText": "lposcilsa2 aAmplitude, kfreqratio, kloop, kend, ift, iInitialPhase",
      "opcode": "lposcilsa2",
      "description": "Read stereo sampled sound from a table with looping and high precision.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/lposcilsa2.html",
      "type": "function"
    },
    {
      "leftLabel": "kkkk",
      "snippet": "lpread ${1:ktimpnt}, ${2:(S|i)filcod/*, inpoles, ifrmrate*/}",
      "displayText": "lpread ktimpnt, (S|i)filcod, inpoles, ifrmrate",
      "opcode": "lpread",
      "description": "Reads a control file of time-ordered information frames.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/lpread.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "lpreson ${1:aSignal}",
      "displayText": "lpreson aSignal",
      "opcode": "lpreson",
      "description": "Resynthesises a signal from the data passed internally by a previous lpread.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/lpreson.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "lpshold ${1:kFrequency}, ${2:ktrig}, ${3:iphase}, ${4:ktime0…}",
      "displayText": "lpshold kFrequency, ktrig, iphase, ktime0",
      "opcode": "lpshold",
      "description": "Generate control signal consisting of held segments.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/lpshold.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "lpsholdp ${1:kphase}, ${2:kvalue0…}",
      "displayText": "lpsholdp kphase, kvalue0",
      "opcode": "lpsholdp",
      "description": "Control signals based on held segments.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/lpsholdp.html",
      "type": "function"
    },
    {
      "snippet": "lpslot ${1:islot}",
      "displayText": "lpslot islot",
      "opcode": "lpslot",
      "description": "Selects the slot to be use by further lp opcodes.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/lpslot.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "mac ${1:(a|k)sig1…}",
      "displayText": "mac (a|k)sig1",
      "opcode": "mac",
      "description": "Multiplies and accumulates a- and k-rate signals.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/mac.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "maca ${1:asig1…}",
      "displayText": "maca asig1",
      "opcode": "maca",
      "description": "Multiply and accumulate a-rate signals only.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/maca.html",
      "type": "function"
    },
    {
      "leftLabel": "ka",
      "snippet": "madsr ${1:iatt}, ${2:iDecayTime}, ${3:islev}, ${4:irel/*, iDelayTime, ireltim*/}",
      "displayText": "madsr iatt, iDecayTime, islev, irel, iDelayTime, ireltim",
      "opcode": "madsr",
      "description": "Calculates the classical ADSR envelope using the linsegr mechanism.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/madsr.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "mags ${1:kin}",
      "displayText": "mags kin",
      "opcode": "mags",
      "description": "Obtains the magnitudes of a complex-number array",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/mags.html",
      "type": "function"
    },
    {
      "leftLabel": "kk",
      "snippet": "mandel ${1:ktrig}, ${2:kx}, ${3:ky}, ${4:kmaxIter}",
      "displayText": "mandel ktrig, kx, ky, kmaxIter",
      "opcode": "mandel",
      "description": "Mandelbrot set",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/mandel.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "mandol ${1:kAmplitude}, ${2:kFrequency}, ${3:kpluck}, ${4:kdetune}, ${5:kgain}, ${6:ksize}, ${7:iFunctionTable/*, iminfreq*/}",
      "displayText": "mandol kAmplitude, kFrequency, kpluck, kdetune, kgain, ksize, iFunctionTable, iminfreq",
      "opcode": "mandol",
      "description": "An emulation of a mandolin.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/mandol.html",
      "type": "function"
    },
    {
      "leftLabel": "i[]",
      "snippet": "maparray ${1:iinarray}, ${2:String}",
      "displayText": "maparray iinarray, String",
      "opcode": "maparray",
      "description": "Apply a function to every element of a vector.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/maparray.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "maparray ${1:kinarray}, ${2:String}",
      "displayText": "maparray kinarray, String",
      "opcode": "maparray",
      "description": "Apply a function to every element of a vector.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/maparray.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "marimba ${1:kAmplitude}, ${2:kFrequency}, ${3:ihrd}, ${4:ipos}, ${5:imp}, ${6:kvibf}, ${7:kvamp}, ${8:ivibfn}, ${9:iDecayTime/*, idoubles, itriples*/}",
      "displayText": "marimba kAmplitude, kFrequency, ihrd, ipos, imp, kvibf, kvamp, ivibfn, iDecayTime, idoubles, itriples",
      "opcode": "marimba",
      "description": "Physical model related to the striking of a wooden block.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/marimba.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "massign ${1:ichnl}, ${2:(S|i)nsnum/*, ireset*/}",
      "displayText": "massign ichnl, (S|i)nsnum, ireset",
      "opcode": "massign",
      "description": "Assigns a MIDI channel number to a Csound instrument.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/massign.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "max ${1:ain1}, ${2:ain2…}",
      "displayText": "max ain1, ain2",
      "opcode": "max",
      "description": "Produces a signal that is the maximum of any number of input signals.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/max.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "max ${1:iin1}, ${2:iin2…}",
      "displayText": "max iin1, iin2",
      "opcode": "max",
      "description": "Produces a signal that is the maximum of any number of input signals.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/max.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "max ${1:kin1}, ${2:kin2…}",
      "displayText": "max kin1, kin2",
      "opcode": "max",
      "description": "Produces a signal that is the maximum of any number of input signals.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/max.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "max_k ${1:aSignal}, ${2:ktrig}, ${3:itype}",
      "displayText": "max_k aSignal, ktrig, itype",
      "opcode": "max_k",
      "description": "Local maximum (or minimum) value of an incoming asig signal",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/max_k.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "maxabs ${1:ain1}, ${2:ain2…}",
      "displayText": "maxabs ain1, ain2",
      "opcode": "maxabs",
      "description": "Produces a signal that is the maximum of the absolute values of any number of input signals.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/maxabs.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "maxabs ${1:kin1}, ${2:kin2…}",
      "displayText": "maxabs kin1, kin2",
      "opcode": "maxabs",
      "description": "Produces a signal that is the maximum of the absolute values of any number of input signals.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/maxabs.html",
      "type": "function"
    },
    {
      "snippet": "maxabsaccum ${1:aAccumulator}, ${2:aInput}",
      "displayText": "maxabsaccum aAccumulator, aInput",
      "opcode": "maxabsaccum",
      "description": "Accumulates the maximum of the absolute values of audio signals.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/maxabsaccum.html",
      "type": "function"
    },
    {
      "snippet": "maxaccum ${1:aAccumulator}, ${2:aInput}",
      "displayText": "maxaccum aAccumulator, aInput",
      "opcode": "maxaccum",
      "description": "Accumulates the maximum value of audio signals.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/maxaccum.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "maxalloc ${1:(S|i)nsnum}, ${2:icount}",
      "displayText": "maxalloc (S|i)nsnum, icount",
      "opcode": "maxalloc",
      "description": "Limits the number of allocations of an instrument.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/maxalloc.html",
      "type": "function"
    },
    {
      "leftLabel": "ii…",
      "snippet": "maxarray ${1:iarray}",
      "displayText": "maxarray iarray",
      "opcode": "maxarray",
      "description": "returns the maximum value in an array.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/maxarray.html",
      "type": "function"
    },
    {
      "leftLabel": "kk…",
      "snippet": "maxarray ${1:karray}",
      "displayText": "maxarray karray",
      "opcode": "maxarray",
      "description": "returns the maximum value in an array.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/maxarray.html",
      "type": "function"
    },
    {
      "snippet": "mclock ${1:iFrequency}",
      "displayText": "mclock iFrequency",
      "opcode": "mclock",
      "description": "Sends a MIDI CLOCK message.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/mclock.html",
      "type": "function"
    },
    {
      "snippet": "mdelay ${1:kstatus}, ${2:kchan}, ${3:kd1}, ${4:kd2}, ${5:kdelay}",
      "displayText": "mdelay kstatus, kchan, kd1, kd2, kdelay",
      "opcode": "mdelay",
      "description": "A MIDI delay opcode.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/mdelay.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "median ${1:aSignal}, ${2:ksize}, ${3:imaxsize/*, iskip*/}",
      "displayText": "median aSignal, ksize, imaxsize, iskip",
      "opcode": "median",
      "description": "A median filter, a variant FIR lowpass filter.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/median.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "mediank ${1:kin}, ${2:ksize}, ${3:imaxsize/*, iskip*/}",
      "displayText": "mediank kin, ksize, imaxsize, iskip",
      "opcode": "mediank",
      "description": "A median filter, a variant FIR lowpass filter.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/mediank.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "metro ${1:kFrequency/*, initphase*/}",
      "displayText": "metro kFrequency, initphase",
      "opcode": "metro",
      "description": "Trigger Metronome",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/metro.html",
      "type": "function"
    },
    {
      "leftLabel": "i[]",
      "snippet": "mfb ${1:iin}, ${2:ilow}, ${3:ihigh}, ${4:ibands}",
      "displayText": "mfb iin, ilow, ihigh, ibands",
      "opcode": "mfb",
      "description": "Mel scale filterbank for spectral magnitudes.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/mfb.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "mfb ${1:kin}, ${2:klow}, ${3:khigh}, ${4:ibands}",
      "displayText": "mfb kin, klow, khigh, ibands",
      "opcode": "mfb",
      "description": "Mel scale filterbank for spectral magnitudes.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/mfb.html",
      "type": "function"
    },
    {
      "snippet": "midglobal ${1:Ssource}, ${2:instrnum…}",
      "displayText": "midglobal Ssource, instrnum",
      "opcode": "midglobal",
      "description": "An opcode which can be used to implement a remote midi orchestra. This opcode will broadcast the midi events to all the machines involved in the remote concert.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/midglobal.html",
      "type": "function"
    },
    {
      "leftLabel": "kk",
      "snippet": "midiarp ${1:kRate/*, kMode*/}",
      "displayText": "midiarp kRate, kMode",
      "opcode": "midiarp",
      "description": "Generates arpeggios based on currently held MIDI notes.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/midiarp.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "midic14 ${1:ictlno1}, ${2:ictlno2}, ${3:imin}, ${4:imax/*, iFunctionTable*/}",
      "displayText": "midic14 ictlno1, ictlno2, imin, imax, iFunctionTable",
      "opcode": "midic14",
      "description": "Allows a floating-point 14-bit MIDI signal scaled with a minimum and a maximum range.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/midic14.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "midic14 ${1:ictlno1}, ${2:ictlno2}, ${3:kmin}, ${4:kmax/*, iFunctionTable*/}",
      "displayText": "midic14 ictlno1, ictlno2, kmin, kmax, iFunctionTable",
      "opcode": "midic14",
      "description": "Allows a floating-point 14-bit MIDI signal scaled with a minimum and a maximum range.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/midic14.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "midic21 ${1:ictlno1}, ${2:ictlno2}, ${3:ictlno3}, ${4:imin}, ${5:imax/*, iFunctionTable*/}",
      "displayText": "midic21 ictlno1, ictlno2, ictlno3, imin, imax, iFunctionTable",
      "opcode": "midic21",
      "description": "Allows a floating-point 21-bit MIDI signal scaled with a minimum and a maximum range.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/midic21.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "midic21 ${1:ictlno1}, ${2:ictlno2}, ${3:ictlno3}, ${4:kmin}, ${5:kmax/*, iFunctionTable*/}",
      "displayText": "midic21 ictlno1, ictlno2, ictlno3, kmin, kmax, iFunctionTable",
      "opcode": "midic21",
      "description": "Allows a floating-point 21-bit MIDI signal scaled with a minimum and a maximum range.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/midic21.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "midic7 ${1:ictlno}, ${2:imin}, ${3:imax/*, iFunctionTable*/}",
      "displayText": "midic7 ictlno, imin, imax, iFunctionTable",
      "opcode": "midic7",
      "description": "Allows a floating-point 7-bit MIDI signal scaled with a minimum and a maximum range.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/midic7.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "midic7 ${1:ictlno}, ${2:kmin}, ${3:kmax/*, iFunctionTable*/}",
      "displayText": "midic7 ictlno, kmin, kmax, iFunctionTable",
      "opcode": "midic7",
      "description": "Allows a floating-point 7-bit MIDI signal scaled with a minimum and a maximum range.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/midic7.html",
      "type": "function"
    },
    {
      "snippet": "midichannelaftertouch ${1:(a|k)channelaftertouch/*, ilow, ihigh*/}",
      "displayText": "midichannelaftertouch (a|k)channelaftertouch, ilow, ihigh",
      "opcode": "midichannelaftertouch",
      "description": "Gets a MIDI channel's aftertouch value.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/midichannelaftertouch.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "midichn",
      "displayText": "midichn",
      "opcode": "midichn",
      "description": "Returns the MIDI channel number from which the note was activated.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/midichn.html",
      "type": "function"
    },
    {
      "snippet": "midicontrolchange ${1:(a|k)controller}, ${2:(a|k)controllervalue/*, ilow, ihigh*/}",
      "displayText": "midicontrolchange (a|k)controller, (a|k)controllervalue, ilow, ihigh",
      "opcode": "midicontrolchange",
      "description": "Gets a MIDI control change value.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/midicontrolchange.html",
      "type": "function"
    },
    {
      "leftLabel": "ik",
      "snippet": "midictrl ${1:inum/*, imin, imax*/}",
      "displayText": "midictrl inum, imin, imax",
      "opcode": "midictrl",
      "description": "Get the current value (0-127) of a specified MIDI controller.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/midictrl.html",
      "type": "function"
    },
    {
      "snippet": "mididefault ${1:(a|k)default}, ${2:(a|k)value}",
      "displayText": "mididefault (a|k)default, (a|k)value",
      "opcode": "mididefault",
      "description": "Changes values, depending on MIDI activation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/mididefault.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "midifilestatus",
      "displayText": "midifilestatus",
      "opcode": "midifilestatus",
      "description": "Returns the playback status of MIDI file input.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/midifilestatus.html",
      "type": "function"
    },
    {
      "leftLabel": "kkkk",
      "snippet": "midiin",
      "displayText": "midiin",
      "opcode": "midiin",
      "description": "Returns a generic MIDI message received by the MIDI IN port.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/midiin.html",
      "type": "function"
    },
    {
      "snippet": "midinoteoff ${1:(a|k)key}, ${2:(a|k)velocity}",
      "displayText": "midinoteoff (a|k)key, (a|k)velocity",
      "opcode": "midinoteoff",
      "description": "Gets a MIDI noteoff value.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/midinoteoff.html",
      "type": "function"
    },
    {
      "snippet": "midinoteoncps ${1:(a|k)Frequency}, ${2:(a|k)velocity}",
      "displayText": "midinoteoncps (a|k)Frequency, (a|k)velocity",
      "opcode": "midinoteoncps",
      "description": "Gets a MIDI note number as a cycles-per-second frequency.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/midinoteoncps.html",
      "type": "function"
    },
    {
      "snippet": "midinoteonkey ${1:(a|k)key}, ${2:(a|k)velocity}",
      "displayText": "midinoteonkey (a|k)key, (a|k)velocity",
      "opcode": "midinoteonkey",
      "description": "Gets a MIDI note number value.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/midinoteonkey.html",
      "type": "function"
    },
    {
      "snippet": "midinoteonoct ${1:(a|k)oct}, ${2:(a|k)velocity}",
      "displayText": "midinoteonoct (a|k)oct, (a|k)velocity",
      "opcode": "midinoteonoct",
      "description": "Gets a MIDI note number value as octave-point-decimal value.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/midinoteonoct.html",
      "type": "function"
    },
    {
      "snippet": "midinoteonpch ${1:(a|k)pch}, ${2:(a|k)velocity}",
      "displayText": "midinoteonpch (a|k)pch, (a|k)velocity",
      "opcode": "midinoteonpch",
      "description": "Gets a MIDI note number as a pitch-class value.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/midinoteonpch.html",
      "type": "function"
    },
    {
      "snippet": "midion ${1:kchn}, ${2:knum}, ${3:kvel}",
      "displayText": "midion kchn, knum, kvel",
      "opcode": "midion",
      "description": "Generates MIDI note messages at k-rate.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/midion.html",
      "type": "function"
    },
    {
      "snippet": "midion2 ${1:kchn}, ${2:knum}, ${3:kvel}, ${4:ktrig}",
      "displayText": "midion2 kchn, knum, kvel, ktrig",
      "opcode": "midion2",
      "description": "Sends noteon and noteoff messages to the MIDI OUT port.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/midion2.html",
      "type": "function"
    },
    {
      "snippet": "midiout ${1:kstatus}, ${2:kchan}, ${3:kdata1}, ${4:kdata2}",
      "displayText": "midiout kstatus, kchan, kdata1, kdata2",
      "opcode": "midiout",
      "description": "Sends a generic MIDI message to the MIDI OUT port.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/midiout.html",
      "type": "function"
    },
    {
      "snippet": "midiout_i ${1:istatus}, ${2:ichan}, ${3:idata1}, ${4:idata2}",
      "displayText": "midiout_i istatus, ichan, idata1, idata2",
      "opcode": "midiout_i",
      "description": "Sends a generic MIDI message to the MIDI OUT port.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/midiout_i.html",
      "type": "function"
    },
    {
      "snippet": "midipitchbend ${1:(a|k)pitchbend/*, ilow, ihigh*/}",
      "displayText": "midipitchbend (a|k)pitchbend, ilow, ihigh",
      "opcode": "midipitchbend",
      "description": "Gets a MIDI pitchbend value.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/midipitchbend.html",
      "type": "function"
    },
    {
      "snippet": "midipolyaftertouch ${1:(a|k)polyaftertouch}, ${2:(a|k)controllervalue/*, ilow, ihigh*/}",
      "displayText": "midipolyaftertouch (a|k)polyaftertouch, (a|k)controllervalue, ilow, ihigh",
      "opcode": "midipolyaftertouch",
      "description": "Gets a MIDI polyphonic aftertouch value.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/midipolyaftertouch.html",
      "type": "function"
    },
    {
      "snippet": "midiprogramchange ${1:(a|k)program}",
      "displayText": "midiprogramchange (a|k)program",
      "opcode": "midiprogramchange",
      "description": "Gets a MIDI program change value.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/midiprogramchange.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "miditempo",
      "displayText": "miditempo",
      "opcode": "miditempo",
      "description": "Returns the current tempo at k-rate, of either the MIDI file (if available) or the score",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/miditempo.html",
      "type": "function"
    },
    {
      "snippet": "midremot ${1:Sdestination}, ${2:Ssource}, ${3:instrnum…}",
      "displayText": "midremot Sdestination, Ssource, instrnum",
      "opcode": "midremot",
      "description": "An opcode which can be used to implement a remote midi orchestra. This opcode will send midi events from a source machine to one destination.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/midremot.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "min ${1:ain1}, ${2:ain2…}",
      "displayText": "min ain1, ain2",
      "opcode": "min",
      "description": "Produces a signal that is the minimum of any number of input signals.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/min.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "min ${1:iin1}, ${2:iin2…}",
      "displayText": "min iin1, iin2",
      "opcode": "min",
      "description": "Produces a signal that is the minimum of any number of input signals.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/min.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "min ${1:kin1}, ${2:kin2…}",
      "displayText": "min kin1, kin2",
      "opcode": "min",
      "description": "Produces a signal that is the minimum of any number of input signals.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/min.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "minabs ${1:ain1}, ${2:ain2…}",
      "displayText": "minabs ain1, ain2",
      "opcode": "minabs",
      "description": "Produces a signal that is the minimum of the absolute values of any number of input signals.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/minabs.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "minabs ${1:kin1}, ${2:kin2…}",
      "displayText": "minabs kin1, kin2",
      "opcode": "minabs",
      "description": "Produces a signal that is the minimum of the absolute values of any number of input signals.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/minabs.html",
      "type": "function"
    },
    {
      "snippet": "minabsaccum ${1:aAccumulator}, ${2:aInput}",
      "displayText": "minabsaccum aAccumulator, aInput",
      "opcode": "minabsaccum",
      "description": "Accumulates the minimum of the absolute values of audio signals.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/minabsaccum.html",
      "type": "function"
    },
    {
      "snippet": "minaccum ${1:aAccumulator}, ${2:aInput}",
      "displayText": "minaccum aAccumulator, aInput",
      "opcode": "minaccum",
      "description": "Accumulates the minimum value of audio signals.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/minaccum.html",
      "type": "function"
    },
    {
      "leftLabel": "ii…",
      "snippet": "minarray ${1:iarray}",
      "displayText": "minarray iarray",
      "opcode": "minarray",
      "description": "returns the minimum value in an array.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/minarray.html",
      "type": "function"
    },
    {
      "leftLabel": "kk…",
      "snippet": "minarray ${1:karray}",
      "displayText": "minarray karray",
      "opcode": "minarray",
      "description": "returns the minimum value in an array.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/minarray.html",
      "type": "function"
    },
    {
      "leftLabel": "a…",
      "snippet": "mincer ${1:atimpt}, ${2:kAmplitude}, ${3:kPitch}, ${4:ktab}, ${5:klock/*, ifftsize, idecim*/}",
      "displayText": "mincer atimpt, kAmplitude, kPitch, ktab, klock, ifftsize, idecim",
      "opcode": "mincer",
      "description": "Phase-locked vocoder processing.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/mincer.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "mirror ${1:aSignal}, ${2:klow}, ${3:khigh}",
      "displayText": "mirror aSignal, klow, khigh",
      "opcode": "mirror",
      "description": "Reflects the signal that exceeds the low and high thresholds.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/mirror.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "mirror ${1:iSignal}, ${2:ilow}, ${3:ihigh}",
      "displayText": "mirror iSignal, ilow, ihigh",
      "opcode": "mirror",
      "description": "Reflects the signal that exceeds the low and high thresholds.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/mirror.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "mirror ${1:kSignal}, ${2:klow}, ${3:khigh}",
      "displayText": "mirror kSignal, klow, khigh",
      "opcode": "mirror",
      "description": "Reflects the signal that exceeds the low and high thresholds.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/mirror.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "mode ${1:ain}, ${2:(a|k)Frequency}, ${3:(a|k)Q/*, iskip*/}",
      "displayText": "mode ain, (a|k)Frequency, (a|k)Q, iskip",
      "opcode": "mode",
      "description": "A filter that simulates a mass-spring-damper system",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/mode.html",
      "type": "function"
    },
    {
      "snippet": "modmatrix ${1:iresfn}, ${2:isrcmodfn}, ${3:isrcparmfn}, ${4:imodscale}, ${5:inum_mod}, ${6:inum_parm}, ${7:kupdate}",
      "displayText": "modmatrix iresfn, isrcmodfn, isrcparmfn, imodscale, inum_mod, inum_parm, kupdate",
      "opcode": "modmatrix",
      "description": "Modulation matrix opcode with optimizations for sparse matrices.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/modmatrix.html",
      "type": "function"
    },
    {
      "leftLabel": "a[]a…",
      "snippet": "monitor",
      "displayText": "monitor",
      "opcode": "monitor",
      "description": "Returns the audio spout frame.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/monitor.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "moog ${1:kAmplitude}, ${2:kFrequency}, ${3:kfiltq}, ${4:kfiltrate}, ${5:kvibf}, ${6:kvamp}, ${7:iafn}, ${8:iwfn}, ${9:ivfn}",
      "displayText": "moog kAmplitude, kFrequency, kfiltq, kfiltrate, kvibf, kvamp, iafn, iwfn, ivfn",
      "opcode": "moog",
      "description": "An emulation of a mini-Moog synthesizer.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/moog.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "moogladder ${1:ain}, ${2:(a|k)cf}, ${3:(a|k)res/*, istor*/}",
      "displayText": "moogladder ain, (a|k)cf, (a|k)res, istor",
      "opcode": "moogladder",
      "description": "Moog ladder lowpass filter.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/moogladder.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "moogladder2 ${1:ain}, ${2:(a|k)cf}, ${3:(a|k)res/*, istor*/}",
      "displayText": "moogladder2 ain, (a|k)cf, (a|k)res, istor",
      "opcode": "moogladder2",
      "description": "Moog ladder lowpass filter.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/moogladder2.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "moogvcf ${1:aSignal}, ${2:(a|k)fco}, ${3:(a|k)res/*, iscale, iskip*/}",
      "displayText": "moogvcf aSignal, (a|k)fco, (a|k)res, iscale, iskip",
      "opcode": "moogvcf",
      "description": "A digital emulation of the Moog diode ladder filter configuration.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/moogvcf.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "moogvcf2 ${1:aSignal}, ${2:(a|k)fco}, ${3:(a|k)res/*, iscale, iskip*/}",
      "displayText": "moogvcf2 aSignal, (a|k)fco, (a|k)res, iscale, iskip",
      "opcode": "moogvcf2",
      "description": "A digital emulation of the Moog diode ladder filter configuration.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/moogvcf2.html",
      "type": "function"
    },
    {
      "snippet": "moscil ${1:kchn}, ${2:knum}, ${3:kvel}, ${4:kDuration}, ${5:kpause}",
      "displayText": "moscil kchn, knum, kvel, kDuration, kpause",
      "opcode": "moscil",
      "description": "Sends a stream of the MIDI notes.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/moscil.html",
      "type": "function"
    },
    {
      "leftLabel": "a…",
      "snippet": "mp3in ${1:(S|i)filcod/*, iskptim, iformat, iskipinit, ibufsize*/}",
      "displayText": "mp3in (S|i)filcod, iskptim, iformat, iskipinit, ibufsize",
      "opcode": "mp3in",
      "description": "Reads mono or stereo audio data from an external MP3 file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/mp3in.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "mp3len ${1:(S|i)filcod}",
      "displayText": "mp3len (S|i)filcod",
      "opcode": "mp3len",
      "description": "Returns the length of an MP3 sound file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/mp3len.html",
      "type": "function"
    },
    {
      "leftLabel": "aak",
      "snippet": "mp3scal ${1:Sfile}, ${2:ktimescal}, ${3:kPitch}, ${4:kAmplitude/*, iskip, ifftsize, idecim, klock, k*/}",
      "displayText": "mp3scal Sfile, ktimescal, kPitch, kAmplitude, iskip, ifftsize, idecim, klock, k",
      "opcode": "mp3scal",
      "description": "Phase-locked vocoder processing with onset detection/processing, 'tempo-scaling'.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/mp3scal.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "mpulse ${1:kAmplitude}, ${2:kintvl/*, ioffset*/}",
      "displayText": "mpulse kAmplitude, kintvl, ioffset",
      "opcode": "mpulse",
      "description": "Generates a set of impulses.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/mpulse.html",
      "type": "function"
    },
    {
      "snippet": "mrtmsg ${1:imsgtype}",
      "displayText": "mrtmsg imsgtype",
      "opcode": "mrtmsg",
      "description": "Send system real-time messages to the MIDI OUT port.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/mrtmsg.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "mtof ${1:imidi}",
      "displayText": "mtof imidi",
      "opcode": "mtof",
      "description": "Convert a midi to frequency",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/mtof.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "mtof ${1:kmidi}",
      "displayText": "mtof kmidi",
      "opcode": "mtof",
      "description": "Convert a midi to frequency",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/mtof.html",
      "type": "function"
    },
    {
      "leftLabel": "S",
      "snippet": "mton ${1:(i|k)midi}",
      "displayText": "mton (i|k)midi",
      "opcode": "mton",
      "description": "Convert midi note number to string note name",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/mton.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "multitap ${1:aSignal}, ${2:itime1…}",
      "displayText": "multitap aSignal, itime1",
      "opcode": "multitap",
      "description": "Multitap delay line implementation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/multitap.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "mute ${1:(S|i)nsnum/*, iswitch*/}",
      "displayText": "mute (S|i)nsnum, iswitch",
      "opcode": "mute",
      "description": "Mutes/unmutes new instances of a given instrument.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/mute.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "mvchpf ${1:ain}, ${2:(a|k)cf/*, istor*/}",
      "displayText": "mvchpf ain, (a|k)cf, istor",
      "opcode": "mvchpf",
      "description": "Moog voltage-controlled highpass filter emulation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/mvchpf.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "mvclpf1 ${1:ain}, ${2:(a|k)cf}, ${3:(a|k)res/*, istor*/}",
      "displayText": "mvclpf1 ain, (a|k)cf, (a|k)res, istor",
      "opcode": "mvclpf1",
      "description": "Moog voltage-controlled lowpass filter emulation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/mvclpf1.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "mvclpf2 ${1:ain}, ${2:(a|k)cf}, ${3:(a|k)res/*, istor*/}",
      "displayText": "mvclpf2 ain, (a|k)cf, (a|k)res, istor",
      "opcode": "mvclpf2",
      "description": "Moog voltage-controlled lowpass filter emulation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/mvclpf2.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "mvclpf3 ${1:ain}, ${2:(a|k)cf}, ${3:(a|k)res/*, istor*/}",
      "displayText": "mvclpf3 ain, (a|k)cf, (a|k)res, istor",
      "opcode": "mvclpf3",
      "description": "Moog voltage-controlled lowpass filter emulation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/mvclpf3.html",
      "type": "function"
    },
    {
      "leftLabel": "aaaa",
      "snippet": "mvclpf4 ${1:ain}, ${2:(a|k)cf}, ${3:(a|k)res/*, istor*/}",
      "displayText": "mvclpf4 ain, (a|k)cf, (a|k)res, istor",
      "opcode": "mvclpf4",
      "description": "Moog voltage-controlled lowpass filter emulation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/mvclpf4.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "mxadsr ${1:iatt}, ${2:iDecayTime}, ${3:islev}, ${4:irel/*, iDelayTime, ireltim*/}",
      "displayText": "mxadsr iatt, iDecayTime, islev, irel, iDelayTime, ireltim",
      "opcode": "mxadsr",
      "description": "Calculates the classical ADSR envelope using the expsegr mechanism.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/mxadsr.html",
      "type": "function"
    },
    {
      "leftLabel": "ii",
      "snippet": "nchnls_hw",
      "displayText": "nchnls_hw",
      "opcode": "nchnls_hw",
      "description": "Returns the number of audio channels in the underlying hardware.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/nchnls_hw.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "nestedap ${1:aSignal}, ${2:imode}, ${3:imaxdel}, ${4:idel1}, ${5:igain1/*, idel2, igain2, idel3, igain3, istor*/}",
      "displayText": "nestedap aSignal, imode, imaxdel, idel1, igain1, idel2, igain2, idel3, igain3, istor",
      "opcode": "nestedap",
      "description": "Three different nested all-pass filters.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/nestedap.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "nlfilt ${1:ain}, ${2:ka}, ${3:kb}, ${4:kd}, ${5:kC}, ${6:kL}",
      "displayText": "nlfilt ain, ka, kb, kd, kC, kL",
      "opcode": "nlfilt",
      "description": "A filter with a non-linear effect.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/nlfilt.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "nlfilt2 ${1:ain}, ${2:ka}, ${3:kb}, ${4:kd}, ${5:kC}, ${6:kL}",
      "displayText": "nlfilt2 ain, ka, kb, kd, kC, kL",
      "opcode": "nlfilt2",
      "description": "A filter with a non-linear effect and blowup protection.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/nlfilt2.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "noise ${1:(a|k)Amplitude}, ${2:kbeta}",
      "displayText": "noise (a|k)Amplitude, kbeta",
      "opcode": "noise",
      "description": "A white noise generator with an IIR lowpass filter.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/noise.html",
      "type": "function"
    },
    {
      "snippet": "noteoff ${1:ichn}, ${2:inum}, ${3:ivel}",
      "displayText": "noteoff ichn, inum, ivel",
      "opcode": "noteoff",
      "description": "Send a noteoff message to the MIDI OUT port.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/noteoff.html",
      "type": "function"
    },
    {
      "snippet": "noteon ${1:ichn}, ${2:inum}, ${3:ivel}",
      "displayText": "noteon ichn, inum, ivel",
      "opcode": "noteon",
      "description": "Send a noteon message to the MIDI OUT port.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/noteon.html",
      "type": "function"
    },
    {
      "snippet": "noteondur ${1:ichn}, ${2:inum}, ${3:ivel}, ${4:iDuration}",
      "displayText": "noteondur ichn, inum, ivel, iDuration",
      "opcode": "noteondur",
      "description": "Sends a noteon and a noteoff MIDI message both with the same channel, number and velocity.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/noteondur.html",
      "type": "function"
    },
    {
      "snippet": "noteondur2 ${1:ichn}, ${2:inum}, ${3:ivel}, ${4:iDuration}",
      "displayText": "noteondur2 ichn, inum, ivel, iDuration",
      "opcode": "noteondur2",
      "description": "Sends a noteon and a noteoff MIDI message both with the same channel, number and velocity.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/noteondur2.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "notnum",
      "displayText": "notnum",
      "opcode": "notnum",
      "description": "Get a note number from a MIDI event.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/notnum.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "nreverb ${1:aSignal}, ${2:ktime}, ${3:khdif/*, iskip, inumCombs, ifnCombs, inumAlpas, ifnAlpas*/}",
      "displayText": "nreverb aSignal, ktime, khdif, iskip, inumCombs, ifnCombs, inumAlpas, ifnAlpas",
      "opcode": "nreverb",
      "description": "A reverberator consisting of 6 parallel comb-lowpass filters.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/nreverb.html",
      "type": "function"
    },
    {
      "snippet": "nrpn ${1:kchan}, ${2:kparmnum}, ${3:kparmvalue}",
      "displayText": "nrpn kchan, kparmnum, kparmvalue",
      "opcode": "nrpn",
      "description": "Sends a Non-Registered Parameter Number to the MIDI OUT port.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/nrpn.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "nstance ${1:(S|i)nsnum}, ${2:iwhen}, ${3:iDuration}, ${4:ip4…}",
      "displayText": "nstance (S|i)nsnum, iwhen, iDuration, ip4",
      "opcode": "nstance",
      "description": "Schedules a new instrument instance, storing the instance handle in a variable.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/nstance.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "nstance ${1:(S|k)nsnum}, ${2:(S|k)when}, ${3:kDuration…}",
      "displayText": "nstance (S|k)nsnum, (S|k)when, kDuration",
      "opcode": "nstance",
      "description": "Schedules a new instrument instance, storing the instance handle in a variable.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/nstance.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "nstrnum ${1:(S|i)Name}",
      "displayText": "nstrnum (S|i)Name",
      "opcode": "nstrnum",
      "description": "Returns the number of a named instrument.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/nstrnum.html",
      "type": "function"
    },
    {
      "leftLabel": "ik",
      "snippet": "ntom ${1:Snote}",
      "displayText": "ntom Snote",
      "opcode": "ntom",
      "description": "Convert note name to midi note number",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ntom.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "ntrpol ${1:asig1}, ${2:asig2}, ${3:kpoint/*, imin, imax*/}",
      "displayText": "ntrpol asig1, asig2, kpoint, imin, imax",
      "opcode": "ntrpol",
      "description": "Calculates the weighted mean value of two input signals.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ntrpol.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "ntrpol ${1:isig1}, ${2:isig2}, ${3:ipoint/*, imin, imax*/}",
      "displayText": "ntrpol isig1, isig2, ipoint, imin, imax",
      "opcode": "ntrpol",
      "description": "Calculates the weighted mean value of two input signals.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ntrpol.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "ntrpol ${1:ksig1}, ${2:ksig2}, ${3:kpoint/*, imin, imax*/}",
      "displayText": "ntrpol ksig1, ksig2, kpoint, imin, imax",
      "opcode": "ntrpol",
      "description": "Calculates the weighted mean value of two input signals.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ntrpol.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "octmidi",
      "displayText": "octmidi",
      "opcode": "octmidi",
      "description": "Get the note number, in octave-point-decimal units, of the current MIDI event.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/octmidi.html",
      "type": "function"
    },
    {
      "leftLabel": "ik",
      "snippet": "octmidib ${1:irange}",
      "displayText": "octmidib irange",
      "opcode": "octmidib",
      "description": "Get the note number of the current MIDI event and modify it by the current pitch-bend value, express it in octave-point-decimal.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/octmidib.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "olabuffer ${1:kin}, ${2:ioverlap}",
      "displayText": "olabuffer kin, ioverlap",
      "opcode": "olabuffer",
      "description": "Sum overlapping frames of audio as k-rate arrays and read as an audio signal",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/olabuffer.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "oscbnk ${1:kFrequency}, ${2:kamd}, ${3:kfmd}, ${4:kpmd}, ${5:iovrlap}, ${6:iseed}, ${7:kl1minf}, ${8:kl1maxf}, ${9:kl2minf}, ${10:kl2maxf}, ${11:ilfomode}, ${12:keqminf}, ${13:keqmaxf}, ${14:keqminl}, ${15:keqmaxl}, ${16:keqminq}, ${17:keqmaxq}, ${18:ieqmode}, ${19:kFunctionTable/*, il1fn, il2fn, ieqffn, ieqlfn, ieqqfn, itabl, ioutfn*/}",
      "displayText": "oscbnk kFrequency, kamd, kfmd, kpmd, iovrlap, iseed, kl1minf, kl1maxf, kl2minf, kl2maxf, ilfomode, keqminf, keqmaxf, keqminl, keqmaxl, keqminq, keqmaxq, ieqmode, kFunctionTable, il1fn, il2fn, ieqffn, ieqlfn, ieqqfn, itabl, ioutfn",
      "opcode": "oscbnk",
      "description": "Mixes the output of any number of oscillators.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/oscbnk.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "oscil ${1:(a|k)Amplitude}, ${2:(a|k)Frequency/*, iFunctionTable, iInitialPhase*/}",
      "displayText": "oscil (a|k)Amplitude, (a|k)Frequency, iFunctionTable, iInitialPhase",
      "opcode": "oscil",
      "description": "A simple oscillator.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/oscil.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "oscil ${1:kAmplitude}, ${2:kFrequency/*, iFunctionTable, iInitialPhase*/}",
      "displayText": "oscil kAmplitude, kFrequency, iFunctionTable, iInitialPhase",
      "opcode": "oscil",
      "description": "A simple oscillator.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/oscil.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "oscil1 ${1:iDelayTime}, ${2:kAmplitude}, ${3:iDuration/*, iFunctionTable*/}",
      "displayText": "oscil1 iDelayTime, kAmplitude, iDuration, iFunctionTable",
      "opcode": "oscil1",
      "description": "Accesses table values by incremental sampling.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/oscil1.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "oscil1i ${1:iDelayTime}, ${2:kAmplitude}, ${3:iDuration/*, iFunctionTable*/}",
      "displayText": "oscil1i iDelayTime, kAmplitude, iDuration, iFunctionTable",
      "opcode": "oscil1i",
      "description": "Accesses table values by incremental sampling with linear interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/oscil1i.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "oscil3 ${1:(a|k)Amplitude}, ${2:(a|k)Frequency/*, iFunctionTable, iInitialPhase*/}",
      "displayText": "oscil3 (a|k)Amplitude, (a|k)Frequency, iFunctionTable, iInitialPhase",
      "opcode": "oscil3",
      "description": "A simple oscillator with cubic interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/oscil3.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "oscil3 ${1:kAmplitude}, ${2:kFrequency/*, iFunctionTable, iInitialPhase*/}",
      "displayText": "oscil3 kAmplitude, kFrequency, iFunctionTable, iInitialPhase",
      "opcode": "oscil3",
      "description": "A simple oscillator with cubic interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/oscil3.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "oscili ${1:(a|k)Amplitude}, ${2:(a|k)Frequency/*, iFunctionTable, iInitialPhase*/}",
      "displayText": "oscili (a|k)Amplitude, (a|k)Frequency, iFunctionTable, iInitialPhase",
      "opcode": "oscili",
      "description": "A simple oscillator with linear interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/oscili.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "oscili ${1:kAmplitude}, ${2:kFrequency/*, iFunctionTable, iInitialPhase*/}",
      "displayText": "oscili kAmplitude, kFrequency, iFunctionTable, iInitialPhase",
      "opcode": "oscili",
      "description": "A simple oscillator with linear interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/oscili.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "oscilikt ${1:(a|k)Amplitude}, ${2:(a|k)Frequency}, ${3:kFunctionTable/*, iInitialPhase, istor*/}",
      "displayText": "oscilikt (a|k)Amplitude, (a|k)Frequency, kFunctionTable, iInitialPhase, istor",
      "opcode": "oscilikt",
      "description": "A linearly interpolated oscillator that allows changing the table number at k-rate.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/oscilikt.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "oscilikt ${1:kAmplitude}, ${2:kFrequency}, ${3:kFunctionTable/*, iInitialPhase, istor*/}",
      "displayText": "oscilikt kAmplitude, kFrequency, kFunctionTable, iInitialPhase, istor",
      "opcode": "oscilikt",
      "description": "A linearly interpolated oscillator that allows changing the table number at k-rate.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/oscilikt.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "osciliktp ${1:kFrequency}, ${2:kFunctionTable}, ${3:kInitialPhase/*, istor*/}",
      "displayText": "osciliktp kFrequency, kFunctionTable, kInitialPhase, istor",
      "opcode": "osciliktp",
      "description": "A linearly interpolated oscillator that allows allows phase modulation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/osciliktp.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "oscilikts ${1:(a|k)Amplitude}, ${2:(a|k)Frequency}, ${3:kFunctionTable}, ${4:async}, ${5:kInitialPhase/*, istor*/}",
      "displayText": "oscilikts (a|k)Amplitude, (a|k)Frequency, kFunctionTable, async, kInitialPhase, istor",
      "opcode": "oscilikts",
      "description": "A linearly interpolated oscillator with sync status that allows changing the table number at k-rate.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/oscilikts.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "osciln ${1:kAmplitude}, ${2:iFrequency}, ${3:iFunctionTable}, ${4:itimes}",
      "displayText": "osciln kAmplitude, iFrequency, iFunctionTable, itimes",
      "opcode": "osciln",
      "description": "Accesses table values at a user-defined frequency.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/osciln.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "oscils ${1:iAmplitude}, ${2:iFrequency}, ${3:iInitialPhase/*, iflg*/}",
      "displayText": "oscils iAmplitude, iFrequency, iInitialPhase, iflg",
      "opcode": "oscils",
      "description": "A simple, fast sine oscillator",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/oscils.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "oscilx ${1:k}, ${2:i}, ${3:i}, ${4:i}",
      "displayText": "oscilx k, i, i, i",
      "opcode": "oscilx",
      "description": "Same as the osciln opcode.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/oscilx.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "out ${1:asig1…}",
      "displayText": "out asig1",
      "opcode": "out",
      "description": "Writes audio data to an external device or stream.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/out.html",
      "type": "function"
    },
    {
      "snippet": "out32 ${1:asig1…}",
      "displayText": "out32 asig1",
      "opcode": "out32",
      "description": "Writes 32-channel audio data to an external device or stream.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/out32.html",
      "type": "function"
    },
    {
      "snippet": "outc ${1:asig1…}",
      "displayText": "outc asig1",
      "opcode": "outc",
      "description": "Writes audio data with an arbitrary number of channels to an external device or stream.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outc.html",
      "type": "function"
    },
    {
      "snippet": "outch ${1:(a|k)chan1…}",
      "displayText": "outch (a|k)chan1",
      "opcode": "outch",
      "description": "Writes multi-channel audio data, with user-controllable channels, to an external device or stream.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outch.html",
      "type": "function"
    },
    {
      "snippet": "outh ${1:asig1…}",
      "displayText": "outh asig1",
      "opcode": "outh",
      "description": "Writes 6-channel audio data to an external device or stream.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outh.html",
      "type": "function"
    },
    {
      "snippet": "outiat ${1:ichn}, ${2:ivalue}, ${3:imin}, ${4:imax}",
      "displayText": "outiat ichn, ivalue, imin, imax",
      "opcode": "outiat",
      "description": "Sends MIDI aftertouch messages at i-rate.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outiat.html",
      "type": "function"
    },
    {
      "snippet": "outic ${1:ichn}, ${2:inum}, ${3:ivalue}, ${4:imin}, ${5:imax}",
      "displayText": "outic ichn, inum, ivalue, imin, imax",
      "opcode": "outic",
      "description": "Sends MIDI controller output at i-rate.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outic.html",
      "type": "function"
    },
    {
      "snippet": "outic14 ${1:ichn}, ${2:imsb}, ${3:ilsb}, ${4:ivalue}, ${5:imin}, ${6:imax}",
      "displayText": "outic14 ichn, imsb, ilsb, ivalue, imin, imax",
      "opcode": "outic14",
      "description": "Sends 14-bit MIDI controller output at i-rate.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outic14.html",
      "type": "function"
    },
    {
      "snippet": "outipat ${1:ichn}, ${2:inotenum}, ${3:ivalue}, ${4:imin}, ${5:imax}",
      "displayText": "outipat ichn, inotenum, ivalue, imin, imax",
      "opcode": "outipat",
      "description": "Sends polyphonic MIDI aftertouch messages at i-rate.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outipat.html",
      "type": "function"
    },
    {
      "snippet": "outipb ${1:ichn}, ${2:ivalue}, ${3:imin}, ${4:imax}",
      "displayText": "outipb ichn, ivalue, imin, imax",
      "opcode": "outipb",
      "description": "Sends MIDI pitch-bend messages at i-rate.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outipb.html",
      "type": "function"
    },
    {
      "snippet": "outipc ${1:ichn}, ${2:iprog}, ${3:imin}, ${4:imax}",
      "displayText": "outipc ichn, iprog, imin, imax",
      "opcode": "outipc",
      "description": "Sends MIDI program change messages at i-rate",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outipc.html",
      "type": "function"
    },
    {
      "snippet": "outkat ${1:kchn}, ${2:kvalue}, ${3:kmin}, ${4:kmax}",
      "displayText": "outkat kchn, kvalue, kmin, kmax",
      "opcode": "outkat",
      "description": "Sends MIDI aftertouch messages at k-rate.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outkat.html",
      "type": "function"
    },
    {
      "snippet": "outkc ${1:kchn}, ${2:knum}, ${3:kvalue}, ${4:kmin}, ${5:kmax}",
      "displayText": "outkc kchn, knum, kvalue, kmin, kmax",
      "opcode": "outkc",
      "description": "Sends MIDI controller messages at k-rate.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outkc.html",
      "type": "function"
    },
    {
      "snippet": "outkc14 ${1:kchn}, ${2:kmsb}, ${3:klsb}, ${4:kvalue}, ${5:kmin}, ${6:kmax}",
      "displayText": "outkc14 kchn, kmsb, klsb, kvalue, kmin, kmax",
      "opcode": "outkc14",
      "description": "Sends 14-bit MIDI controller output at k-rate.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outkc14.html",
      "type": "function"
    },
    {
      "snippet": "outkpat ${1:kchn}, ${2:knotenum}, ${3:kvalue}, ${4:kmin}, ${5:kmax}",
      "displayText": "outkpat kchn, knotenum, kvalue, kmin, kmax",
      "opcode": "outkpat",
      "description": "Sends polyphonic MIDI aftertouch messages at k-rate.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outkpat.html",
      "type": "function"
    },
    {
      "snippet": "outkpb ${1:kchn}, ${2:kvalue}, ${3:kmin}, ${4:kmax}",
      "displayText": "outkpb kchn, kvalue, kmin, kmax",
      "opcode": "outkpb",
      "description": "Sends MIDI pitch-bend messages at k-rate.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outkpb.html",
      "type": "function"
    },
    {
      "snippet": "outkpc ${1:kchn}, ${2:kprog}, ${3:kmin}, ${4:kmax}",
      "displayText": "outkpc kchn, kprog, kmin, kmax",
      "opcode": "outkpc",
      "description": "Sends MIDI program change messages at k-rate.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outkpc.html",
      "type": "function"
    },
    {
      "snippet": "outleta ${1:Sname}, ${2:asignal}",
      "displayText": "outleta Sname, asignal",
      "opcode": "outleta",
      "description": "Sends an arate signal out from an instrument to a named port.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outleta.html",
      "type": "function"
    },
    {
      "snippet": "outletf ${1:Sname}, ${2:fsignal}",
      "displayText": "outletf Sname, fsignal",
      "opcode": "outletf",
      "description": "Sends a frate signal (fsig) out from an instrument to a named port.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outletf.html",
      "type": "function"
    },
    {
      "snippet": "outletk ${1:Sname}, ${2:ksignal}",
      "displayText": "outletk Sname, ksignal",
      "opcode": "outletk",
      "description": "Sends a krate signal out from an instrument to a named port.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outletk.html",
      "type": "function"
    },
    {
      "snippet": "outletkid ${1:Sname}, ${2:SinstanceID}, ${3:ksignal}",
      "displayText": "outletkid Sname, SinstanceID, ksignal",
      "opcode": "outletkid",
      "description": "Sends a krate signal out from an instrument to a named port.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outletkid.html",
      "type": "function"
    },
    {
      "snippet": "outletv ${1:Sname}, ${2:array}",
      "displayText": "outletv Sname, array",
      "opcode": "outletv",
      "description": "Sends an arate array signal out from an instrument to a named port.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outletv.html",
      "type": "function"
    },
    {
      "snippet": "outo ${1:asig1…}",
      "displayText": "outo asig1",
      "opcode": "outo",
      "description": "Writes 8-channel audio data to an external device or stream.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outo.html",
      "type": "function"
    },
    {
      "snippet": "outq ${1:asig1…}",
      "displayText": "outq asig1",
      "opcode": "outq",
      "description": "Writes 4-channel audio data to an external device or stream.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outq.html",
      "type": "function"
    },
    {
      "snippet": "outq1 ${1:aSignal}",
      "displayText": "outq1 aSignal",
      "opcode": "outq1",
      "description": "Writes samples to quad channel 1 of an external device or stream.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outq1.html",
      "type": "function"
    },
    {
      "snippet": "outq2 ${1:aSignal}",
      "displayText": "outq2 aSignal",
      "opcode": "outq2",
      "description": "Writes samples to quad channel 2 of an external device or stream.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outq2.html",
      "type": "function"
    },
    {
      "snippet": "outq3 ${1:aSignal}",
      "displayText": "outq3 aSignal",
      "opcode": "outq3",
      "description": "Writes samples to quad channel 3 of an external device or stream.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outq3.html",
      "type": "function"
    },
    {
      "snippet": "outq4 ${1:aSignal}",
      "displayText": "outq4 aSignal",
      "opcode": "outq4",
      "description": "Writes samples to quad channel 4 of an external device or stream.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outq4.html",
      "type": "function"
    },
    {
      "snippet": "outrg ${1:kstart}, ${2:aout1…}",
      "displayText": "outrg kstart, aout1",
      "opcode": "outrg",
      "description": "Allow output to a range of adjacent audio channels on the audio output device",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outrg.html",
      "type": "function"
    },
    {
      "snippet": "outs ${1:asig1…}",
      "displayText": "outs asig1",
      "opcode": "outs",
      "description": "Writes stereo audio data to an external device or stream.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outs.html",
      "type": "function"
    },
    {
      "snippet": "outs1 ${1:aSignal}",
      "displayText": "outs1 aSignal",
      "opcode": "outs1",
      "description": "Writes samples to stereo channel 1 of an external device or stream.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outs1.html",
      "type": "function"
    },
    {
      "snippet": "outs2 ${1:aSignal}",
      "displayText": "outs2 aSignal",
      "opcode": "outs2",
      "description": "Writes samples to stereo channel 2 of an external device or stream.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outs2.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "outvalue ${1:(S|i)ChannelName}, ${2:(S|i|k)value}",
      "displayText": "outvalue (S|i)ChannelName, (S|i|k)value",
      "opcode": "outvalue",
      "description": "Sends an i-rate or k-rate signal or string to a user-defined channel.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outvalue.html",
      "type": "function"
    },
    {
      "snippet": "outx ${1:asig1…}",
      "displayText": "outx asig1",
      "opcode": "outx",
      "description": "Writes 16-channel audio data to an external device or stream.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outx.html",
      "type": "function"
    },
    {
      "snippet": "outz ${1:ksig1}",
      "displayText": "outz ksig1",
      "opcode": "outz",
      "description": "Writes multi-channel audio data from a ZAK array to an external device or stream.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/outz.html",
      "type": "function"
    },
    {
      "leftLabel": "aaaa",
      "snippet": "pan ${1:aSignal}, ${2:kx}, ${3:ky}, ${4:iFunctionTable/*, imode, ioffset*/}",
      "displayText": "pan aSignal, kx, ky, iFunctionTable, imode, ioffset",
      "opcode": "pan",
      "description": "Distribute an audio signal amongst four channels.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pan.html",
      "type": "function"
    },
    {
      "leftLabel": "aa",
      "snippet": "pan2 ${1:aSignal}, ${2:(a|k)p/*, imode*/}",
      "displayText": "pan2 aSignal, (a|k)p, imode",
      "opcode": "pan2",
      "description": "Distribute an audio signal across two channels.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pan2.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "pareq ${1:aSignal}, ${2:kc}, ${3:kv}, ${4:kq/*, imode, iskip*/}",
      "displayText": "pareq aSignal, kc, kv, kq, imode, iskip",
      "opcode": "pareq",
      "description": "Implementation of Zoelzer's parametric equalizer filters.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pareq.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "partials ${1:ffr}, ${2:fInitialPhase}, ${3:kthresh}, ${4:kminpts}, ${5:kmaxgap}, ${6:imaxtracks}",
      "displayText": "partials ffr, fInitialPhase, kthresh, kminpts, kmaxgap, imaxtracks",
      "opcode": "partials",
      "description": "Partial track spectral analysis.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/partials.html",
      "type": "function"
    },
    {
      "leftLabel": "aa…",
      "snippet": "partikkel ${1:(a|k)grainfreq}, ${2:kdistribution}, ${3:idisttab}, ${4:async}, ${5:kenv2amt}, ${6:ienv2tab}, ${7:ienv_attack}, ${8:ienv_decay}, ${9:ksustain_amount}, ${10:ka_d_ratio}, ${11:kduration}, ${12:kAmplitude}, ${13:igainmasks}, ${14:kwavfreq}, ${15:ksweepshape}, ${16:iwavfreqstarttab}, ${17:iwavfreqendtab}, ${18:awavfm}, ${19:ifmamptab}, ${20:kfmenv}, ${21:icosine}, ${22:ktraincps}, ${23:knumpartials}, ${24:kchroma}, ${25:ichannelmasks}, ${26:krandommask}, ${27:kwaveform1}, ${28:kwaveform2}, ${29:kwaveform3}, ${30:kwaveform4}, ${31:iwaveamptab}, ${32:asamplepos1}, ${33:asamplepos2}, ${34:asamplepos3}, ${35:asamplepos4}, ${36:kwavekey1}, ${37:kwavekey2}, ${38:kwavekey3}, ${39:kwavekey4}, ${40:imax_grains/*, iopcode_id, ipanlaws*/}",
      "displayText": "partikkel (a|k)grainfreq, kdistribution, idisttab, async, kenv2amt, ienv2tab, ienv_attack, ienv_decay, ksustain_amount, ka_d_ratio, kduration, kAmplitude, igainmasks, kwavfreq, ksweepshape, iwavfreqstarttab, iwavfreqendtab, awavfm, ifmamptab, kfmenv, icosine, ktraincps, knumpartials, kchroma, ichannelmasks, krandommask, kwaveform1, kwaveform2, kwaveform3, kwaveform4, iwaveamptab, asamplepos1, asamplepos2, asamplepos3, asamplepos4, kwavekey1, kwavekey2, kwavekey3, kwavekey4, imax_grains, iopcode_id, ipanlaws",
      "opcode": "partikkel",
      "description": "Granular synthesizer with \"per grain\" control over many of its parameters. Has a sync input to sychronize its internal grain scheduler clock to an external clock source.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/partikkel.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "partikkelget ${1:kparameterindex}, ${2:iopcode_id}",
      "displayText": "partikkelget kparameterindex, iopcode_id",
      "opcode": "partikkelget",
      "description": "Get mask index for a specific mask parameter of a running partikkel instance.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/partikkelget.html",
      "type": "function"
    },
    {
      "snippet": "partikkelset ${1:kparameterindex}, ${2:kmaskindex}, ${3:iopcode_id}",
      "displayText": "partikkelset kparameterindex, kmaskindex, iopcode_id",
      "opcode": "partikkelset",
      "description": "Set mask index for a specific mask parameter of a running partikkel instance.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/partikkelset.html",
      "type": "function"
    },
    {
      "leftLabel": "aa…",
      "snippet": "partikkelsync ${1:iopcode_id}",
      "displayText": "partikkelsync iopcode_id",
      "opcode": "partikkelsync",
      "description": "Outputs partikkel's grain scheduler clock pulse and phase to synchronize several instances of the partikkel opcode to the same clock source.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/partikkelsync.html",
      "type": "function"
    },
    {
      "leftLabel": "i…",
      "snippet": "passign ${1:istart}",
      "displayText": "passign istart",
      "opcode": "passign",
      "description": "Assigns a range of p-fields to ivariables.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/passign.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "paulstretch ${1:istretch}, ${2:iwindowsize}, ${3:ift}",
      "displayText": "paulstretch istretch, iwindowsize, ift",
      "opcode": "paulstretch",
      "description": "Extreme time-stretching algorithm by Nasca Octavian Paul.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/paulstretch.html",
      "type": "function"
    },
    {
      "leftLabel": "aik",
      "snippet": "pcauchy ${1:kalpha}",
      "displayText": "pcauchy kalpha",
      "opcode": "pcauchy",
      "description": "Cauchy distribution random number generator (positive values only).",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pcauchy.html",
      "type": "function"
    },
    {
      "leftLabel": "ik",
      "snippet": "pchbend ${1:imin/*, imax*/}",
      "displayText": "pchbend imin, imax",
      "opcode": "pchbend",
      "description": "Get the current pitch-bend value for this channel.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pchbend.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "pchmidi",
      "displayText": "pchmidi",
      "opcode": "pchmidi",
      "description": "Get the note number of the current MIDI event, expressed in pitch-class units.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pchmidi.html",
      "type": "function"
    },
    {
      "leftLabel": "ik",
      "snippet": "pchmidib ${1:irange}",
      "displayText": "pchmidib irange",
      "opcode": "pchmidib",
      "description": "Get the note number of the current MIDI event and modify it by the current pitch-bend value, express it in pitch-class units.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pchmidib.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "pchtom ${1:ipch}",
      "displayText": "pchtom ipch",
      "opcode": "pchtom",
      "description": "Convert pch to midi note number",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pchtom.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "pchtom ${1:kpch}",
      "displayText": "pchtom kpch",
      "opcode": "pchtom",
      "description": "Convert pch to midi note number",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pchtom.html",
      "type": "function"
    },
    {
      "leftLabel": "a…",
      "snippet": "pconvolve ${1:ain}, ${2:(S|i)filcod/*, ipartitionsize, ichannel*/}",
      "displayText": "pconvolve ain, (S|i)filcod, ipartitionsize, ichannel",
      "opcode": "pconvolve",
      "description": "Convolution based on a uniformly partitioned overlap-save algorithm",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pconvolve.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "pcount",
      "displayText": "pcount",
      "opcode": "pcount",
      "description": "Returns the number of pfields belonging to a note event.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pcount.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "pdclip ${1:ain}, ${2:kWidth}, ${3:kCenter/*, ibipolar, ifullscale*/}",
      "displayText": "pdclip ain, kWidth, kCenter, ibipolar, ifullscale",
      "opcode": "pdclip",
      "description": "Performs linear clipping on an audio signal or a phasor.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pdclip.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "pdhalf ${1:ain}, ${2:kShapeAmount/*, ibipolar, ifullscale*/}",
      "displayText": "pdhalf ain, kShapeAmount, ibipolar, ifullscale",
      "opcode": "pdhalf",
      "description": "Distorts a phasor for reading the two halves of a table at different rates.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pdhalf.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "pdhalfy ${1:ain}, ${2:kShapeAmount/*, ibipolar, ifullscale*/}",
      "displayText": "pdhalfy ain, kShapeAmount, ibipolar, ifullscale",
      "opcode": "pdhalfy",
      "description": "Distorts a phasor for reading two unequal portions of a table in equal periods.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pdhalfy.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "peak ${1:(a|k)Signal}",
      "displayText": "peak (a|k)Signal",
      "opcode": "peak",
      "description": "Maintains the output equal to the highest absolute value received.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/peak.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "pgmassign ${1:ipgm}, ${2:(S|i)nst/*, ichn*/}",
      "displayText": "pgmassign ipgm, (S|i)nst, ichn",
      "opcode": "pgmassign",
      "description": "Assigns an instrument number to a specified MIDI program.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pgmassign.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "phaser1 ${1:aSignal}, ${2:kFrequency}, ${3:kord}, ${4:kfeedback/*, iskip*/}",
      "displayText": "phaser1 aSignal, kFrequency, kord, kfeedback, iskip",
      "opcode": "phaser1",
      "description": "First-order allpass filters arranged in a series.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/phaser1.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "phaser2 ${1:aSignal}, ${2:kFrequency}, ${3:kq}, ${4:kord}, ${5:kmode}, ${6:ksep}, ${7:kfeedback}",
      "displayText": "phaser2 aSignal, kFrequency, kq, kord, kmode, ksep, kfeedback",
      "opcode": "phaser2",
      "description": "Second-order allpass filters arranged in a series.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/phaser2.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "phasor ${1:(a|k)Frequency/*, iInitialPhase*/}",
      "displayText": "phasor (a|k)Frequency, iInitialPhase",
      "opcode": "phasor",
      "description": "Produce a normalized moving phase value.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/phasor.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "phasor ${1:kFrequency/*, iInitialPhase*/}",
      "displayText": "phasor kFrequency, iInitialPhase",
      "opcode": "phasor",
      "description": "Produce a normalized moving phase value.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/phasor.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "phasorbnk ${1:(a|k)Frequency}, ${2:kndx}, ${3:icnt/*, iInitialPhase*/}",
      "displayText": "phasorbnk (a|k)Frequency, kndx, icnt, iInitialPhase",
      "opcode": "phasorbnk",
      "description": "Produce an arbitrary number of normalized moving phase values.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/phasorbnk.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "phs ${1:kin}",
      "displayText": "phs kin",
      "opcode": "phs",
      "description": "Obtains the phases of a complex-number array",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/phs.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "pindex ${1:ipfieldIndex}",
      "displayText": "pindex ipfieldIndex",
      "opcode": "pindex",
      "description": "Returns the value of a specified pfield.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pindex.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "pinker",
      "displayText": "pinker",
      "opcode": "pinker",
      "description": "Generates pink noise.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pinker.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "pinkish ${1:(a|k)in/*, imethod, inumbands, iseed, iskip*/}",
      "displayText": "pinkish (a|k)in, imethod, inumbands, iseed, iskip",
      "opcode": "pinkish",
      "description": "Generates approximate pink noise.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pinkish.html",
      "type": "function"
    },
    {
      "leftLabel": "kk",
      "snippet": "pitch ${1:aSignal}, ${2:iupdte}, ${3:ilo}, ${4:ihi}, ${5:idbthresh/*, ifrqs, iconf, istrt, iocts, iq, inptls, irolloff, iskip*/}",
      "displayText": "pitch aSignal, iupdte, ilo, ihi, idbthresh, ifrqs, iconf, istrt, iocts, iq, inptls, irolloff, iskip",
      "opcode": "pitch",
      "description": "Tracks the pitch of a signal.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pitch.html",
      "type": "function"
    },
    {
      "leftLabel": "kk",
      "snippet": "pitchamdf ${1:aSignal}, ${2:imincps}, ${3:imaxcps/*, iFrequency, imedi, idowns, iexcps, irmsmedi*/}",
      "displayText": "pitchamdf aSignal, imincps, imaxcps, iFrequency, imedi, idowns, iexcps, irmsmedi",
      "opcode": "pitchamdf",
      "description": "Follows the pitch of a signal based on the AMDF method.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pitchamdf.html",
      "type": "function"
    },
    {
      "leftLabel": "aaa",
      "snippet": "planet ${1:kmass1}, ${2:kmass2}, ${3:ksep}, ${4:ix}, ${5:iy}, ${6:iz}, ${7:ivx}, ${8:ivy}, ${9:ivz}, ${10:idelta/*, ifriction, iskip*/}",
      "displayText": "planet kmass1, kmass2, ksep, ix, iy, iz, ivx, ivy, ivz, idelta, ifriction, iskip",
      "opcode": "planet",
      "description": "Simulates a planet orbiting in a binary star system.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/planet.html",
      "type": "function"
    },
    {
      "leftLabel": "a…",
      "snippet": "platerev ${1:itabexcite. itabouts}, ${2:ibndry}, ${3:kaspect}, ${4:istiff}, ${5:idecay}, ${6:iloss}, ${7:iexcite1}, ${8:aexcite2…}",
      "displayText": "platerev itabexcite. itabouts, ibndry, kaspect, istiff, idecay, iloss, iexcite1, aexcite2",
      "opcode": "platerev",
      "description": "Models the reverberation of a metal plate.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/platerev.html",
      "type": "function"
    },
    {
      "leftLabel": "aa",
      "snippet": "plltrack ${1:aSignal}, ${2:kd/*, kloopf, kloopq, klf, khf, kthresh*/}",
      "displayText": "plltrack aSignal, kd, kloopf, kloopq, klf, khf, kthresh",
      "opcode": "plltrack",
      "description": "Tracks the pitch of a signal.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/plltrack.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "pluck ${1:kAmplitude}, ${2:kFrequency}, ${3:iFrequency}, ${4:iFunctionTable}, ${5:imeth/*, iparm1, iparm2*/}",
      "displayText": "pluck kAmplitude, kFrequency, iFrequency, iFunctionTable, imeth, iparm1, iparm2",
      "opcode": "pluck",
      "description": "Produces a naturally decaying plucked string or drum sound.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pluck.html",
      "type": "function"
    },
    {
      "leftLabel": "aik",
      "snippet": "poisson ${1:klambda}",
      "displayText": "poisson klambda",
      "opcode": "poisson",
      "description": "Poisson distribution random number generator (positive values only).",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/poisson.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "pol2rect ${1:kin}",
      "displayText": "pol2rect kin",
      "opcode": "pol2rect",
      "description": "Polar to rectangular format conversion.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pol2rect.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "pol2rect ${1:kin}, ${2:k}",
      "displayText": "pol2rect kin, k",
      "opcode": "pol2rect",
      "description": "Polar to rectangular format conversion.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pol2rect.html",
      "type": "function"
    },
    {
      "leftLabel": "ik",
      "snippet": "polyaft ${1:inote/*, ilow, ihigh*/}",
      "displayText": "polyaft inote, ilow, ihigh",
      "opcode": "polyaft",
      "description": "Returns the polyphonic after-touch pressure of the selected note number.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/polyaft.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "polynomial ${1:ain}, ${2:k0…}",
      "displayText": "polynomial ain, k0",
      "opcode": "polynomial",
      "description": "Efficiently evaluates a polynomial of arbitrary order.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/polynomial.html",
      "type": "function"
    },
    {
      "leftLabel": "(a|k|i|S)…",
      "snippet": "pop",
      "displayText": "pop",
      "opcode": "pop",
      "description": "Pops values from the global stack. Deprecated.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pop.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "pop_f",
      "displayText": "pop_f",
      "opcode": "pop_f",
      "description": "Pops an f-sig frame from the global stack. Deprecated.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pop_f.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "port ${1:kSignal}, ${2:ihtim/*, iSignal*/}",
      "displayText": "port kSignal, ihtim, iSignal",
      "opcode": "port",
      "description": "Applies portamento to a step-valued control signal.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/port.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "portk ${1:kSignal}, ${2:khtim/*, iSignal*/}",
      "displayText": "portk kSignal, khtim, iSignal",
      "opcode": "portk",
      "description": "Applies portamento to a step-valued control signal.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/portk.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "poscil ${1:(a|k)Amplitude}, ${2:(a|k)Frequency/*, iFunctionTable, iInitialPhase*/}",
      "displayText": "poscil (a|k)Amplitude, (a|k)Frequency, iFunctionTable, iInitialPhase",
      "opcode": "poscil",
      "description": "High precision oscillator.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/poscil.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "poscil ${1:kAmplitude}, ${2:kFrequency/*, iFunctionTable, iInitialPhase*/}",
      "displayText": "poscil kAmplitude, kFrequency, iFunctionTable, iInitialPhase",
      "opcode": "poscil",
      "description": "High precision oscillator.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/poscil.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "poscil3 ${1:(a|k)Amplitude}, ${2:(a|k)Frequency/*, iFunctionTable, iInitialPhase*/}",
      "displayText": "poscil3 (a|k)Amplitude, (a|k)Frequency, iFunctionTable, iInitialPhase",
      "opcode": "poscil3",
      "description": "High precision oscillator with cubic interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/poscil3.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "poscil3 ${1:kAmplitude}, ${2:kFrequency/*, iFunctionTable, iInitialPhase*/}",
      "displayText": "poscil3 kAmplitude, kFrequency, iFunctionTable, iInitialPhase",
      "opcode": "poscil3",
      "description": "High precision oscillator with cubic interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/poscil3.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "pow ${1:aarg}, ${2:kpow/*, inorm*/}",
      "displayText": "pow aarg, kpow, inorm",
      "opcode": "pow",
      "description": "Computes one argument to the power of another argument.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pow.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "pow ${1:iarg}, ${2:ipow/*, inorm*/}",
      "displayText": "pow iarg, ipow, inorm",
      "opcode": "pow",
      "description": "Computes one argument to the power of another argument.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pow.html",
      "type": "function"
    },
    {
      "leftLabel": "i[]",
      "snippet": "pow ${1:iarg}, ${2:ipow}",
      "displayText": "pow iarg, ipow",
      "opcode": "pow",
      "description": "Computes one argument to the power of another argument.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pow.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "pow ${1:karg}, ${2:kpow/*, inorm*/}",
      "displayText": "pow karg, kpow, inorm",
      "opcode": "pow",
      "description": "Computes one argument to the power of another argument.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pow.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "pow ${1:karg}, ${2:kpow}",
      "displayText": "pow karg, kpow",
      "opcode": "pow",
      "description": "Computes one argument to the power of another argument.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pow.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "powershape ${1:ain}, ${2:kShapeAmount/*, ifullscale*/}",
      "displayText": "powershape ain, kShapeAmount, ifullscale",
      "opcode": "powershape",
      "description": "Waveshapes a signal by raising it to a variable exponent.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/powershape.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "prealloc ${1:(S|i)nsnum}, ${2:icount/*, i*/}",
      "displayText": "prealloc (S|i)nsnum, icount, i",
      "opcode": "prealloc",
      "description": "Creates space for instruments but does not run them.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/prealloc.html",
      "type": "function"
    },
    {
      "leftLabel": "a…",
      "snippet": "prepiano ${1:iFrequency}, ${2:iNS}, ${3:iD}, ${4:iK}, ${5:iT30}, ${6:iB}, ${7:kbcl}, ${8:kbcr}, ${9:imass}, ${10:ihvfreq}, ${11:iinit}, ${12:ipos}, ${13:ivel}, ${14:isfreq}, ${15:isspread/*, irattles, irubbers*/}",
      "displayText": "prepiano iFrequency, iNS, iD, iK, iT30, iB, kbcl, kbcr, imass, ihvfreq, iinit, ipos, ivel, isfreq, isspread, irattles, irubbers",
      "opcode": "prepiano",
      "description": "Creates a tone similar to a piano string prepared in a Cageian fashion.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/prepiano.html",
      "type": "function"
    },
    {
      "snippet": "print ${1:iarg…}",
      "displayText": "print iarg",
      "opcode": "print",
      "description": "Displays the values init (i-rate) variables.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/print.html",
      "type": "function"
    },
    {
      "snippet": "printf ${1:Sfmt}, ${2:ktrig}, ${3:(i|k|S)arg1}, ${4:(a|i|k|S)arg2…}",
      "displayText": "printf Sfmt, ktrig, (i|k|S)arg1, (a|i|k|S)arg2",
      "opcode": "printf",
      "description": "printf-style formatted output",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/printf.html",
      "type": "function"
    },
    {
      "snippet": "printk ${1:itime}, ${2:kval/*, ispace*/}",
      "displayText": "printk itime, kval, ispace",
      "opcode": "printk",
      "description": "Prints one k-rate value at specified intervals.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/printk.html",
      "type": "function"
    },
    {
      "snippet": "printk2 ${1:kvar/*, inumspaces*/}",
      "displayText": "printk2 kvar, inumspaces",
      "opcode": "printk2",
      "description": "Prints a new value every time a control variable changes.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/printk2.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "printks ${1:(S|i)String}, ${2:itime}, ${3:(a|i|k)val1…}",
      "displayText": "printks (S|i)String, itime, (a|i|k)val1",
      "opcode": "printks",
      "description": "Prints at k-rate using a printf() style syntax.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/printks.html",
      "type": "function"
    },
    {
      "snippet": "printks2 ${1:SString}, ${2:kval}",
      "displayText": "printks2 SString, kval",
      "opcode": "printks2",
      "description": "Prints a new value every time a control variable changes using a printf() style syntax.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/printks2.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "prints ${1:(S|i)String}, ${2:(a|i|k)val1…}",
      "displayText": "prints (S|i)String, (a|i|k)val1",
      "opcode": "prints",
      "description": "Prints at init-time using a printf() style syntax.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/prints.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "product ${1:asig1…}",
      "displayText": "product asig1",
      "opcode": "product",
      "description": "Multiplies any number of a-rate signals.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/product.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "product ${1:isig1}",
      "displayText": "product isig1",
      "opcode": "product",
      "description": "Multiplies any number of a-rate signals.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/product.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "product ${1:ksig1}",
      "displayText": "product ksig1",
      "opcode": "product",
      "description": "Multiplies any number of a-rate signals.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/product.html",
      "type": "function"
    },
    {
      "snippet": "pset ${1:icon1…}",
      "displayText": "pset icon1",
      "opcode": "pset",
      "description": "Defines and initializes numeric arrays at orchestra load time.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pset.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "ptable ${1:(a|k)ndx}, ${2:iFunctionTable/*, ixmode, ixoff, iwrap*/}",
      "displayText": "ptable (a|k)ndx, iFunctionTable, ixmode, ixoff, iwrap",
      "opcode": "ptable",
      "description": "Accesses table values by direct indexing.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ptable.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "ptable ${1:indx}, ${2:iFunctionTable/*, ixmode, ixoff, iwrap*/}",
      "displayText": "ptable indx, iFunctionTable, ixmode, ixoff, iwrap",
      "opcode": "ptable",
      "description": "Accesses table values by direct indexing.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ptable.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "ptable ${1:(a|k)ndx}, ${2:iFunctionTable/*, ixmode, ixoff, iwrap*/}",
      "displayText": "ptable (a|k)ndx, iFunctionTable, ixmode, ixoff, iwrap",
      "opcode": "ptable",
      "description": "Accesses table values by direct indexing.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ptable.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "ptable3 ${1:(a|k)ndx}, ${2:iFunctionTable/*, ixmode, ixoff, iwrap*/}",
      "displayText": "ptable3 (a|k)ndx, iFunctionTable, ixmode, ixoff, iwrap",
      "opcode": "ptable3",
      "description": "Accesses table values by direct indexing with cubic interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ptable3.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "ptable3 ${1:indx}, ${2:iFunctionTable/*, ixmode, ixoff, iwrap*/}",
      "displayText": "ptable3 indx, iFunctionTable, ixmode, ixoff, iwrap",
      "opcode": "ptable3",
      "description": "Accesses table values by direct indexing with cubic interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ptable3.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "ptable3 ${1:(a|k)ndx}, ${2:iFunctionTable/*, ixmode, ixoff, iwrap*/}",
      "displayText": "ptable3 (a|k)ndx, iFunctionTable, ixmode, ixoff, iwrap",
      "opcode": "ptable3",
      "description": "Accesses table values by direct indexing with cubic interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ptable3.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "ptablei ${1:(a|k)ndx}, ${2:iFunctionTable/*, ixmode, ixoff, iwrap*/}",
      "displayText": "ptablei (a|k)ndx, iFunctionTable, ixmode, ixoff, iwrap",
      "opcode": "ptablei",
      "description": "Accesses table values by direct indexing with linear interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ptablei.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "ptablei ${1:indx}, ${2:iFunctionTable/*, ixmode, ixoff, iwrap*/}",
      "displayText": "ptablei indx, iFunctionTable, ixmode, ixoff, iwrap",
      "opcode": "ptablei",
      "description": "Accesses table values by direct indexing with linear interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ptablei.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "ptablei ${1:(a|k)ndx}, ${2:iFunctionTable/*, ixmode, ixoff, iwrap*/}",
      "displayText": "ptablei (a|k)ndx, iFunctionTable, ixmode, ixoff, iwrap",
      "opcode": "ptablei",
      "description": "Accesses table values by direct indexing with linear interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ptablei.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "ptablew ${1:(a|k)Signal}, ${2:(a|k)ndx}, ${3:iFunctionTable/*, ixmode, ixoff, iwgmode*/}",
      "displayText": "ptablew (a|k)Signal, (a|k)ndx, iFunctionTable, ixmode, ixoff, iwgmode",
      "opcode": "ptablew",
      "description": "Change the contents of existing function tables of any length.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ptablew.html",
      "type": "function"
    },
    {
      "leftLabel": "kk",
      "snippet": "ptrack ${1:aSignal}, ${2:ihopsize/*, ipeaks*/}",
      "displayText": "ptrack aSignal, ihopsize, ipeaks",
      "opcode": "ptrack",
      "description": "Tracks the pitch of a signal.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ptrack.html",
      "type": "function"
    },
    {
      "snippet": "push ${1:(a|i|k|S)val1…}",
      "displayText": "push (a|i|k|S)val1",
      "opcode": "push",
      "description": "Pushes a value into the global stack. Deprecated.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/push.html",
      "type": "function"
    },
    {
      "snippet": "push_f ${1:fSignal}",
      "displayText": "push_f fSignal",
      "opcode": "push_f",
      "description": "Pushes an f-sig frame into the global stack. Deprecated.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/push_f.html",
      "type": "function"
    },
    {
      "snippet": "puts ${1:Sstr}, ${2:ktrig/*, inonl*/}",
      "displayText": "puts Sstr, ktrig, inonl",
      "opcode": "puts",
      "description": "Print a string constant or variable",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/puts.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "pvadd ${1:ktimpnt}, ${2:kfmod}, ${3:(S|i)filcod}, ${4:iFunctionTable}, ${5:ibins/*, ibinoffset, ibinincr, iextractmode, ifreqlim, igatefn*/}",
      "displayText": "pvadd ktimpnt, kfmod, (S|i)filcod, iFunctionTable, ibins, ibinoffset, ibinincr, iextractmode, ifreqlim, igatefn",
      "opcode": "pvadd",
      "description": "Reads from a pvoc file and uses the data to perform additive synthesis.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvadd.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "pvbufread ${1:ktimpnt}, ${2:(S|i)file}",
      "displayText": "pvbufread ktimpnt, (S|i)file",
      "opcode": "pvbufread",
      "description": "Reads from a phase vocoder analysis file and makes the retrieved data available.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvbufread.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "pvcross ${1:ktimpnt}, ${2:kfmod}, ${3:(S|i)file}, ${4:kampscale1}, ${5:kampscale2/*, ispecwp*/}",
      "displayText": "pvcross ktimpnt, kfmod, (S|i)file, kampscale1, kampscale2, ispecwp",
      "opcode": "pvcross",
      "description": "Applies the amplitudes from one phase vocoder analysis file to the data from a second file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvcross.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "pvinterp ${1:ktimpnt}, ${2:kfmod}, ${3:(S|i)file}, ${4:kfreqscale1}, ${5:kfreqscale2}, ${6:kampscale1}, ${7:kampscale2}, ${8:kfreqinterp}, ${9:kampinterp}",
      "displayText": "pvinterp ktimpnt, kfmod, (S|i)file, kfreqscale1, kfreqscale2, kampscale1, kampscale2, kfreqinterp, kampinterp",
      "opcode": "pvinterp",
      "description": "Interpolates between the amplitudes and frequencies of two phase vocoder analysis files.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvinterp.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "pvoc ${1:ktimpnt}, ${2:kfmod}, ${3:(S|i)filcod/*, ispecwp, iextractmode, ifreqlim, igatefn*/}",
      "displayText": "pvoc ktimpnt, kfmod, (S|i)filcod, ispecwp, iextractmode, ifreqlim, igatefn",
      "opcode": "pvoc",
      "description": "Implements signal reconstruction using an fft-based phase vocoder.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvoc.html",
      "type": "function"
    },
    {
      "leftLabel": "kk",
      "snippet": "pvread ${1:ktimpnt}, ${2:(S|i)file}, ${3:ibin}",
      "displayText": "pvread ktimpnt, (S|i)file, ibin",
      "opcode": "pvread",
      "description": "Reads from a phase vocoder analysis file and returns the frequency and amplitude from a single analysis channel or bin.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvread.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "pvs2tab ${1:kvar|kvar}, ${2:fSignal}",
      "displayText": "pvs2tab kvar|kvar, fSignal",
      "opcode": "pvs2tab",
      "description": "Copies spectral data to k-rate arrays (or t-variables). Also known as pvs2array.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvs2tab.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "pvs2tab ${1:kvar|kvar}, ${2:kSignal}, ${3:f}",
      "displayText": "pvs2tab kvar|kvar, kSignal, f",
      "opcode": "pvs2tab",
      "description": "Copies spectral data to k-rate arrays (or t-variables). Also known as pvs2array.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvs2tab.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "pvsadsyn ${1:fsrc}, ${2:inoscs}, ${3:kfmod/*, ibinoffset, ibinincr, iinit*/}",
      "displayText": "pvsadsyn fsrc, inoscs, kfmod, ibinoffset, ibinincr, iinit",
      "opcode": "pvsadsyn",
      "description": "Resynthesize using a fast oscillator-bank.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsadsyn.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "pvsanal ${1:ain}, ${2:ifftsize}, ${3:ioverlap}, ${4:iwinsize}, ${5:iwintype/*, iformat, iinit*/}",
      "displayText": "pvsanal ain, ifftsize, ioverlap, iwinsize, iwintype, iformat, iinit",
      "opcode": "pvsanal",
      "description": "Generate an fsig from a mono audio source ain, using phase vocoder overlap-add analysis.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsanal.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "pvsarp ${1:fsigin}, ${2:kbin}, ${3:kdepth}, ${4:kgain}",
      "displayText": "pvsarp fsigin, kbin, kdepth, kgain",
      "opcode": "pvsarp",
      "description": "Arpeggiate the spectral components of a streaming pv signal.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsarp.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "pvsbandp ${1:fsigin}, ${2:(a|k)lowcut}, ${3:(a|k)lowfull}, ${4:(a|k)highfull}, ${5:(a|k)highcut/*, ktype*/}",
      "displayText": "pvsbandp fsigin, (a|k)lowcut, (a|k)lowfull, (a|k)highfull, (a|k)highcut, ktype",
      "opcode": "pvsbandp",
      "description": "A band pass filter working in the spectral domain.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsbandp.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "pvsbandr ${1:fsigin}, ${2:(a|k)lowcut}, ${3:(a|k)lowfull}, ${4:(a|k)highfull}, ${5:(a|k)highcut/*, ktype*/}",
      "displayText": "pvsbandr fsigin, (a|k)lowcut, (a|k)lowfull, (a|k)highfull, (a|k)highcut, ktype",
      "opcode": "pvsbandr",
      "description": "A band reject filter working in the spectral domain.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsbandr.html",
      "type": "function"
    },
    {
      "leftLabel": "ss",
      "snippet": "pvsbin ${1:fSignal}, ${2:kbin}",
      "displayText": "pvsbin fSignal, kbin",
      "opcode": "pvsbin",
      "description": "Obtain the amp and freq values off a PVS signal bin.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsbin.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "pvsblur ${1:fsigin}, ${2:kblurtime}, ${3:imaxdel}",
      "displayText": "pvsblur fsigin, kblurtime, imaxdel",
      "opcode": "pvsblur",
      "description": "Average the amp/freq time functions of each analysis channel for a specified time.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsblur.html",
      "type": "function"
    },
    {
      "leftLabel": "ik",
      "snippet": "pvsbuffer ${1:fSignal}, ${2:ilen}",
      "displayText": "pvsbuffer fSignal, ilen",
      "opcode": "pvsbuffer",
      "description": "This opcode creates and writes to a circular buffer for f-signals (streaming PV signals).",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsbuffer.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "pvsbufread ${1:ktime}, ${2:khandle/*, klo, khi, iclear*/}",
      "displayText": "pvsbufread ktime, khandle, klo, khi, iclear",
      "opcode": "pvsbufread",
      "description": "This opcode reads a circular buffer of f-signals (streaming PV signals).",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsbufread.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "pvsbufread2 ${1:ktime}, ${2:khandle}, ${3:kft1}, ${4:kft2}",
      "displayText": "pvsbufread2 ktime, khandle, kft1, kft2",
      "opcode": "pvsbufread2",
      "description": "This opcode reads a circular buffer of f-signals (streaming PV signals), with binwise additional delays.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsbufread2.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "pvscale ${1:fsigin}, ${2:(k|a)scal/*, kkeepform, kgain, kcoefs*/}",
      "displayText": "pvscale fsigin, (k|a)scal, kkeepform, kgain, kcoefs",
      "opcode": "pvscale",
      "description": "Scale the frequency components of a pv stream.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvscale.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "pvscent ${1:fSignal}",
      "displayText": "pvscent fSignal",
      "opcode": "pvscent",
      "description": "Calculate the spectral centroid of a signal.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvscent.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "pvsceps ${1:fSignal/*, icoefs*/}",
      "displayText": "pvsceps fSignal, icoefs",
      "opcode": "pvsceps",
      "description": "Calculate the cepstrum of a pvs input, optionally liftering coefficients.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsceps.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "pvscross ${1:fsrc}, ${2:fdest}, ${3:kamp1}, ${4:kamp2}",
      "displayText": "pvscross fsrc, fdest, kamp1, kamp2",
      "opcode": "pvscross",
      "description": "Performs cross-synthesis between two source fsigs.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvscross.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "pvsdemix ${1:fleft}, ${2:fright}, ${3:kpos}, ${4:kwidth}, ${5:ipoints}",
      "displayText": "pvsdemix fleft, fright, kpos, kwidth, ipoints",
      "opcode": "pvsdemix",
      "description": "Spectral azimuth-based de-mixing of stereo sources.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsdemix.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "pvsdiskin ${1:(S|i)Fname}, ${2:ktscal}, ${3:kgain/*, ioffset, ichan, k*/}",
      "displayText": "pvsdiskin (S|i)Fname, ktscal, kgain, ioffset, ichan, k",
      "opcode": "pvsdiskin",
      "description": "Read a selected channel from a PVOC-EX analysis file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsdiskin.html",
      "type": "function"
    },
    {
      "snippet": "pvsdisp ${1:fSignal/*, ibins, iwtflg*/}",
      "displayText": "pvsdisp fSignal, ibins, iwtflg",
      "opcode": "pvsdisp",
      "description": "Displays a PVS signal as an amplitude vs. freq graph.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsdisp.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "pvsfilter ${1:fsigin}, ${2:fsigfil}, ${3:(f|a|k)depth/*, igain*/}",
      "displayText": "pvsfilter fsigin, fsigfil, (f|a|k)depth, igain",
      "opcode": "pvsfilter",
      "description": "Multiply amplitudes of a pvoc stream by those of a second pvoc stream, with dynamic scaling.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsfilter.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "pvsfread ${1:ktimpt}, ${2:(S|i)FunctionTable/*, ichan*/}",
      "displayText": "pvsfread ktimpt, (S|i)FunctionTable, ichan",
      "opcode": "pvsfread",
      "description": "Read a selected channel from a PVOC-EX analysis file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsfread.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "pvsfreeze ${1:fsigin}, ${2:kfreeza}, ${3:kfreezf}",
      "displayText": "pvsfreeze fsigin, kfreeza, kfreezf",
      "opcode": "pvsfreeze",
      "description": "Freeze the amplitude and frequency time functions of a pv stream according to a control-rate trigger.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsfreeze.html",
      "type": "function"
    },
    {
      "snippet": "pvsftr ${1:fsrc}, ${2:ifna/*, ifnf*/}",
      "displayText": "pvsftr fsrc, ifna, ifnf",
      "opcode": "pvsftr",
      "description": "Reads amplitude and/or frequency data from function tables.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsftr.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "pvsftw ${1:fsrc}, ${2:ifna/*, ifnf*/}",
      "displayText": "pvsftw fsrc, ifna, ifnf",
      "opcode": "pvsftw",
      "description": "Writes amplitude and/or frequency data to function tables.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsftw.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "pvsfwrite ${1:fSignal}, ${2:(S|i)file}",
      "displayText": "pvsfwrite fSignal, (S|i)file",
      "opcode": "pvsfwrite",
      "description": "Write a fsig to a PVOCEX file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsfwrite.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "pvsgain ${1:fsigin}, ${2:kgain}",
      "displayText": "pvsgain fsigin, kgain",
      "opcode": "pvsgain",
      "description": "Scale the amplitude of a pv stream.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsgain.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "pvshift ${1:fsigin}, ${2:(k|a)shift}, ${3:klowest/*, kkeepform, kgain, kcoefs*/}",
      "displayText": "pvshift fsigin, (k|a)shift, klowest, kkeepform, kgain, kcoefs",
      "opcode": "pvshift",
      "description": "Shift the frequency components of a pv stream, stretching/compressing its spectrum.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvshift.html",
      "type": "function"
    },
    {
      "leftLabel": "ff",
      "snippet": "pvsifd ${1:ain}, ${2:ifftsize}, ${3:ihopsize}, ${4:iwintype/*, iscal*/}",
      "displayText": "pvsifd ain, ifftsize, ihopsize, iwintype, iscal",
      "opcode": "pvsifd",
      "description": "Instantaneous Frequency Distribution, magnitude and phase analysis.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsifd.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "pvsin ${1:kchan/*, isize, iolap, iwinsize, iwintype, iformat*/}",
      "displayText": "pvsin kchan, isize, iolap, iwinsize, iwintype, iformat",
      "opcode": "pvsin",
      "description": "Retrieve an fsig from the input software bus; a pvs equivalent to chani.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsin.html",
      "type": "function"
    },
    {
      "leftLabel": "iiii",
      "snippet": "pvsinfo ${1:fsrc}",
      "displayText": "pvsinfo fsrc",
      "opcode": "pvsinfo",
      "description": "Get information from a PVOC-EX formatted source.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsinfo.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "pvsinit ${1:isize/*, iolap, iwinsize, iwintype, iformat*/}",
      "displayText": "pvsinit isize, iolap, iwinsize, iwintype, iformat",
      "opcode": "pvsinit",
      "description": "Initialise a spectral (f) variable to zero.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsinit.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "pvslock ${1:fsigin}, ${2:klock}",
      "displayText": "pvslock fsigin, klock",
      "opcode": "pvslock",
      "description": "Frequency lock an input fsig",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvslock.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "pvsmaska ${1:fsrc}, ${2:iFunctionTable}, ${3:kdepth}",
      "displayText": "pvsmaska fsrc, iFunctionTable, kdepth",
      "opcode": "pvsmaska",
      "description": "Modify amplitudes using a function table, with dynamic scaling.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsmaska.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "pvsmix ${1:fsigin1}, ${2:fsigin2}",
      "displayText": "pvsmix fsigin1, fsigin2",
      "opcode": "pvsmix",
      "description": "Mix 'seamlessly' two pv signals.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsmix.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "pvsmooth ${1:fsigin}, ${2:(a|k)acf}, ${3:(a|k)fcf}",
      "displayText": "pvsmooth fsigin, (a|k)acf, (a|k)fcf",
      "opcode": "pvsmooth",
      "description": "Smooth the amplitude and frequency time functions of a pv stream using parallel 1st order lowpass IIR filters with time-varying cutoff frequency.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsmooth.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "pvsmorph ${1:fsig1}, ${2:fsig2}, ${3:kampint}, ${4:kfrqint}",
      "displayText": "pvsmorph fsig1, fsig2, kampint, kfrqint",
      "opcode": "pvsmorph",
      "description": "Performs morphing (or interpolation) between two source fsigs.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsmorph.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "pvsosc ${1:kAmplitude}, ${2:kFrequency}, ${3:ktype}, ${4:isize/*, ioverlap, iwinsize, iwintype, iformat*/}",
      "displayText": "pvsosc kAmplitude, kFrequency, ktype, isize, ioverlap, iwinsize, iwintype, iformat",
      "opcode": "pvsosc",
      "description": "PVS-based oscillator simulator.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsosc.html",
      "type": "function"
    },
    {
      "snippet": "pvsout ${1:fSignal}, ${2:kchan}",
      "displayText": "pvsout fSignal, kchan",
      "opcode": "pvsout",
      "description": "Write a fsig to the pvs output bus.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsout.html",
      "type": "function"
    },
    {
      "leftLabel": "kk",
      "snippet": "pvspitch ${1:fSignal}, ${2:kthresh}",
      "displayText": "pvspitch fSignal, kthresh",
      "opcode": "pvspitch",
      "description": "Track the pitch and amplitude of a PVS signal.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvspitch.html",
      "type": "function"
    },
    {
      "leftLabel": "f…",
      "snippet": "pvstanal ${1:ktimescal}, ${2:kAmplitude}, ${3:kPitch}, ${4:ktab/*, kdetect, kwrap, ioffset, ifftsize, ihop, kdbthresh*/}",
      "displayText": "pvstanal ktimescal, kAmplitude, kPitch, ktab, kdetect, kwrap, ioffset, ifftsize, ihop, kdbthresh",
      "opcode": "pvstanal",
      "description": "Phase vocoder analysis processing with onset detection/processing.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvstanal.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "pvstencil ${1:fsigin}, ${2:kgain}, ${3:klevel}, ${4:iftable}",
      "displayText": "pvstencil fsigin, kgain, klevel, iftable",
      "opcode": "pvstencil",
      "description": "Transforms a pvoc stream according to a masking function table.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvstencil.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "pvstrace ${1:fsigin}, ${2:kn}",
      "displayText": "pvstrace fsigin, kn",
      "opcode": "pvstrace",
      "description": "Retain only the N loudest bins.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvstrace.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "pvsvoc ${1:fAmplitude}, ${2:fexc}, ${3:kdepth}, ${4:kgain/*, kcoefs*/}",
      "displayText": "pvsvoc fAmplitude, fexc, kdepth, kgain, kcoefs",
      "opcode": "pvsvoc",
      "description": "Combine the spectral envelope of one fsig with the excitation (frequencies) of another.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsvoc.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "pvswarp ${1:fsigin}, ${2:kscal}, ${3:kshift/*, klowest, kmeth, kgain, kcoefs*/}",
      "displayText": "pvswarp fsigin, kscal, kshift, klowest, kmeth, kgain, kcoefs",
      "opcode": "pvswarp",
      "description": "Warp the spectral envelope of a PVS signal",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvswarp.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "pvsynth ${1:fsrc/*, iinit*/}",
      "displayText": "pvsynth fsrc, iinit",
      "opcode": "pvsynth",
      "description": "Resynthesise using a FFT overlap-add.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pvsynth.html",
      "type": "function"
    },
    {
      "leftLabel": "S",
      "snippet": "pwd",
      "displayText": "pwd",
      "opcode": "pwd",
      "description": "Asks the underlying operating system for the current directory name as a string.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pwd.html",
      "type": "function"
    },
    {
      "snippet": "pyassign ${1:SVariable}, ${2:kvalue…}",
      "displayText": "pyassign SVariable, kvalue",
      "opcode": "pyassign",
      "description": "Assign the value of the given Csound variable to a Python variable possibly destroying its previous content.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pyassign.html",
      "type": "function"
    },
    {
      "snippet": "pycall ${1:SCallable}, ${2:karg1…}",
      "displayText": "pycall SCallable, karg1",
      "opcode": "pycall",
      "description": "Invoke the specified Python callable at k-time and i-time (i suffix), passing the given arguments. The call is perfomed in the global environment, and the result (the returning value) is copied into the Csound output variables specified.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pycall.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "pyeval ${1:SExpression}",
      "displayText": "pyeval SExpression",
      "opcode": "pyeval",
      "description": "Evaluate a generic Python expression and store the result in a Csound variable at k-time or i-time (i suffix).",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pyeval.html",
      "type": "function"
    },
    {
      "snippet": "pyexec ${1:SFilename}",
      "displayText": "pyexec SFilename",
      "opcode": "pyexec",
      "description": "Execute a script from a file at k-time or i-time (i suffix).",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pyexec.html",
      "type": "function"
    },
    {
      "snippet": "pyinit",
      "displayText": "pyinit",
      "opcode": "pyinit",
      "description": "Initialize the Python interpreter.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pyinit.html",
      "type": "function"
    },
    {
      "snippet": "pyrun ${1:SStatement}",
      "displayText": "pyrun SStatement",
      "opcode": "pyrun",
      "description": "Run a Python statement or block of statements.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/pyrun.html",
      "type": "function"
    },
    {
      "leftLabel": "i[]",
      "snippet": "r2c ${1:iin}",
      "displayText": "r2c iin",
      "opcode": "r2c",
      "description": "Real to complex format conversion.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/r2c.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "r2c ${1:kin}",
      "displayText": "r2c kin",
      "opcode": "r2c",
      "description": "Real to complex format conversion.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/r2c.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "rand ${1:(a|k)Amplitude/*, iseed, isel, ioffset*/}",
      "displayText": "rand (a|k)Amplitude, iseed, isel, ioffset",
      "opcode": "rand",
      "description": "Generates a controlled random number series.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/rand.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "randh ${1:(a|k)Amplitude}, ${2:(a|k)Frequency/*, iseed, isize, ioffset*/}",
      "displayText": "randh (a|k)Amplitude, (a|k)Frequency, iseed, isize, ioffset",
      "opcode": "randh",
      "description": "Generates random numbers and holds them for a period of time.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/randh.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "randi ${1:(a|k)Amplitude}, ${2:(a|k)Frequency/*, iseed, isize, ioffset*/}",
      "displayText": "randi (a|k)Amplitude, (a|k)Frequency, iseed, isize, ioffset",
      "opcode": "randi",
      "description": "Generates a controlled random number series with interpolation between each new number.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/randi.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "random ${1:kmin}, ${2:kmax}",
      "displayText": "random kmin, kmax",
      "opcode": "random",
      "description": "Generates a controlled pseudo-random number series between min and max values.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/random.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "random ${1:imin}, ${2:imax}",
      "displayText": "random imin, imax",
      "opcode": "random",
      "description": "Generates a controlled pseudo-random number series between min and max values.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/random.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "random ${1:kmin}, ${2:kmax}",
      "displayText": "random kmin, kmax",
      "opcode": "random",
      "description": "Generates a controlled pseudo-random number series between min and max values.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/random.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "randomh ${1:kmin}, ${2:kmax}, ${3:(a|k)Frequency/*, imode, ifirstval*/}",
      "displayText": "randomh kmin, kmax, (a|k)Frequency, imode, ifirstval",
      "opcode": "randomh",
      "description": "Generates random numbers with a user-defined limit and holds them for a period of time.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/randomh.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "randomh ${1:kmin}, ${2:kmax}, ${3:kFrequency/*, imode, ifirstval*/}",
      "displayText": "randomh kmin, kmax, kFrequency, imode, ifirstval",
      "opcode": "randomh",
      "description": "Generates random numbers with a user-defined limit and holds them for a period of time.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/randomh.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "randomi ${1:kmin}, ${2:kmax}, ${3:(a|k)Frequency/*, imode, ifirstval*/}",
      "displayText": "randomi kmin, kmax, (a|k)Frequency, imode, ifirstval",
      "opcode": "randomi",
      "description": "Generates a user-controlled random number series with interpolation between each new number.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/randomi.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "randomi ${1:kmin}, ${2:kmax}, ${3:kFrequency/*, imode, ifirstval*/}",
      "displayText": "randomi kmin, kmax, kFrequency, imode, ifirstval",
      "opcode": "randomi",
      "description": "Generates a user-controlled random number series with interpolation between each new number.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/randomi.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "rbjeq ${1:aSignal}, ${2:kfco}, ${3:klvl}, ${4:kQ}, ${5:kS/*, imode*/}",
      "displayText": "rbjeq aSignal, kfco, klvl, kQ, kS, imode",
      "opcode": "rbjeq",
      "description": "Parametric equalizer and filter opcode with 7 filter types, based on algorithm by Robert Bristow-Johnson.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/rbjeq.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "readclock ${1:inum}",
      "displayText": "readclock inum",
      "opcode": "readclock",
      "description": "Reads the value of an internal clock.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/readclock.html",
      "type": "function"
    },
    {
      "leftLabel": "Sk",
      "snippet": "readf ${1:(S|i)Filename}",
      "displayText": "readf (S|i)Filename",
      "opcode": "readf",
      "description": "Read a line of text from an external file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/readf.html",
      "type": "function"
    },
    {
      "leftLabel": "Si",
      "snippet": "readfi ${1:(S|i)Filename}",
      "displayText": "readfi (S|i)Filename",
      "opcode": "readfi",
      "description": "Read a line of text from an external file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/readfi.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "readk ${1:(S|i)Filename}, ${2:iformat}, ${3:iprd}",
      "displayText": "readk (S|i)Filename, iformat, iprd",
      "opcode": "readk",
      "description": "Periodically reads an orchestra control-signal value from an external file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/readk.html",
      "type": "function"
    },
    {
      "leftLabel": "kk",
      "snippet": "readk2 ${1:(S|i)Filename}, ${2:iformat}, ${3:iprd}",
      "displayText": "readk2 (S|i)Filename, iformat, iprd",
      "opcode": "readk2",
      "description": "Periodically reads two orchestra control-signal values from an external file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/readk2.html",
      "type": "function"
    },
    {
      "leftLabel": "kkk",
      "snippet": "readk3 ${1:(S|i)Filename}, ${2:iformat}, ${3:iprd}",
      "displayText": "readk3 (S|i)Filename, iformat, iprd",
      "opcode": "readk3",
      "description": "Periodically reads three orchestra control-signal values from an external file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/readk3.html",
      "type": "function"
    },
    {
      "leftLabel": "kkkk",
      "snippet": "readk4 ${1:(S|i)Filename}, ${2:iformat}, ${3:iprd}",
      "displayText": "readk4 (S|i)Filename, iformat, iprd",
      "opcode": "readk4",
      "description": "Periodically reads four orchestra control-signal values from an external file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/readk4.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "readscore ${1:Sin}",
      "displayText": "readscore Sin",
      "opcode": "readscore",
      "description": "Read, preprocess and schedule a score from an input string.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/readscore.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "readscratch ${1:iIndex}",
      "displayText": "readscratch iIndex",
      "opcode": "readscratch",
      "description": "returns a value stored in the instance of an instrument.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/readscratch.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "rect2pol ${1:kin}",
      "displayText": "rect2pol kin",
      "opcode": "rect2pol",
      "description": "Rectangular to polar format conversion.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/rect2pol.html",
      "type": "function"
    },
    {
      "snippet": "reinit ${1:label}",
      "displayText": "reinit label",
      "opcode": "reinit",
      "description": "Suspends a performance while a special initialization pass is executed.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/reinit.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "release",
      "displayText": "release",
      "opcode": "release",
      "description": "Indicates whether a note is in its release stage.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/release.html",
      "type": "function"
    },
    {
      "snippet": "remoteport ${1:iportnum}",
      "displayText": "remoteport iportnum",
      "opcode": "remoteport",
      "description": "Defines the port for use with the remote system.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/remoteport.html",
      "type": "function"
    },
    {
      "snippet": "remove ${1:(i|S)nsnum}",
      "displayText": "remove (i|S)nsnum",
      "opcode": "remove",
      "description": "Removes the definition of an instrument.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/remove.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "repluck ${1:iplk}, ${2:kAmplitude}, ${3:iFrequency}, ${4:kpick}, ${5:krefl}, ${6:axcite}",
      "displayText": "repluck iplk, kAmplitude, iFrequency, kpick, krefl, axcite",
      "opcode": "repluck",
      "description": "Physical model of the plucked string.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/repluck.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "reson ${1:aSignal}, ${2:(a|k)cf}, ${3:(a|k)bw/*, iscl, iskip*/}",
      "displayText": "reson aSignal, (a|k)cf, (a|k)bw, iscl, iskip",
      "opcode": "reson",
      "description": "A second-order resonant filter.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/reson.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "resonk ${1:kSignal}, ${2:kcf}, ${3:kbw/*, iscl, iskip*/}",
      "displayText": "resonk kSignal, kcf, kbw, iscl, iskip",
      "opcode": "resonk",
      "description": "A second-order resonant filter.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/resonk.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "resonr ${1:aSignal}, ${2:(a|k)cf}, ${3:(a|k)bw/*, iscl, iskip*/}",
      "displayText": "resonr aSignal, (a|k)cf, (a|k)bw, iscl, iskip",
      "opcode": "resonr",
      "description": "A bandpass filter with variable frequency response.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/resonr.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "resonx ${1:aSignal}, ${2:(a|k)cf}, ${3:(a|k)bw/*, inumlayer, iscl, iskip*/}",
      "displayText": "resonx aSignal, (a|k)cf, (a|k)bw, inumlayer, iscl, iskip",
      "opcode": "resonx",
      "description": "Emulates a stack of filters using the reson opcode.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/resonx.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "resonxk ${1:kSignal}, ${2:kcf}, ${3:kbw/*, inumlayer, iscl, istor*/}",
      "displayText": "resonxk kSignal, kcf, kbw, inumlayer, iscl, istor",
      "opcode": "resonxk",
      "description": "Control signal resonant filter stack.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/resonxk.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "resony ${1:aSignal}, ${2:kbf}, ${3:kbw}, ${4:inum}, ${5:ksep/*, isepmode, iscl, iskip*/}",
      "displayText": "resony aSignal, kbf, kbw, inum, ksep, isepmode, iscl, iskip",
      "opcode": "resony",
      "description": "A bank of second-order bandpass filters, connected in parallel.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/resony.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "resonz ${1:aSignal}, ${2:(a|k)cf}, ${3:(a|k)bw/*, iscl, iskip*/}",
      "displayText": "resonz aSignal, (a|k)cf, (a|k)bw, iscl, iskip",
      "opcode": "resonz",
      "description": "A bandpass filter with variable frequency response.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/resonz.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "resyn ${1:fin}, ${2:kscal}, ${3:kPitch}, ${4:kmaxtracks}, ${5:iFunctionTable/*, i*/}",
      "displayText": "resyn fin, kscal, kPitch, kmaxtracks, iFunctionTable, i",
      "opcode": "resyn",
      "description": "Streaming partial track additive synthesis with cubic phase interpolation with pitch control and support for timescale-modified input",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/resyn.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "reverb ${1:aSignal}, ${2:krvt/*, iskip*/}",
      "displayText": "reverb aSignal, krvt, iskip",
      "opcode": "reverb",
      "description": "Reverberates an input signal with a natural room frequency response.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/reverb.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "reverb2 ${1:aSignal}, ${2:ktime}, ${3:khdif/*, iskip, inumCombs, ifnCombs, inumAlpas, ifnAlpas*/}",
      "displayText": "reverb2 aSignal, ktime, khdif, iskip, inumCombs, ifnCombs, inumAlpas, ifnAlpas",
      "opcode": "reverb2",
      "description": "Same as the nreverb opcode.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/reverb2.html",
      "type": "function"
    },
    {
      "leftLabel": "aa",
      "snippet": "reverbsc ${1:ainL}, ${2:ainR}, ${3:kfblvl}, ${4:kfco/*, israte, ipitchm, iskip*/}",
      "displayText": "reverbsc ainL, ainR, kfblvl, kfco, israte, ipitchm, iskip",
      "opcode": "reverbsc",
      "description": "8 delay line stereo FDN reverb, based on work by Sean Costello",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/reverbsc.html",
      "type": "function"
    },
    {
      "snippet": "rewindscore",
      "displayText": "rewindscore",
      "opcode": "rewindscore",
      "description": "Rewinds the playback position of the current score performance.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/rewindscore.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "rezzy ${1:aSignal}, ${2:(a|k)fco}, ${3:(a|k)res/*, imode, iskip*/}",
      "displayText": "rezzy aSignal, (a|k)fco, (a|k)res, imode, iskip",
      "opcode": "rezzy",
      "description": "A resonant low-pass filter.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/rezzy.html",
      "type": "function"
    },
    {
      "leftLabel": "i[]",
      "snippet": "rfft ${1:iin}",
      "displayText": "rfft iin",
      "opcode": "rfft",
      "description": "Fast Fourier Transform of a real-value array.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/rfft.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "rfft ${1:kin}",
      "displayText": "rfft kin",
      "opcode": "rfft",
      "description": "Fast Fourier Transform of a real-value array.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/rfft.html",
      "type": "function"
    },
    {
      "leftLabel": "i[]",
      "snippet": "rifft ${1:iin}",
      "displayText": "rifft iin",
      "opcode": "rifft",
      "description": "Complex-to-real Inverse Fast Fourier Transform.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/rifft.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "rifft ${1:kin}",
      "displayText": "rifft kin",
      "opcode": "rifft",
      "description": "Complex-to-real Inverse Fast Fourier Transform.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/rifft.html",
      "type": "function"
    },
    {
      "snippet": "rireturn",
      "displayText": "rireturn",
      "opcode": "rireturn",
      "description": "Terminates a reinit pass.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/rireturn.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "rms ${1:aSignal/*, ihp, iskip*/}",
      "displayText": "rms aSignal, ihp, iskip",
      "opcode": "rms",
      "description": "Determines the root-mean-square amplitude of an audio signal.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/rms.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "rnd31 ${1:kscl}, ${2:krpow/*, iseed*/}",
      "displayText": "rnd31 kscl, krpow, iseed",
      "opcode": "rnd31",
      "description": "31-bit bipolar random opcodes with controllable distribution.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/rnd31.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "rnd31 ${1:iscl}, ${2:irpow/*, iseed*/}",
      "displayText": "rnd31 iscl, irpow, iseed",
      "opcode": "rnd31",
      "description": "31-bit bipolar random opcodes with controllable distribution.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/rnd31.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "rnd31 ${1:kscl}, ${2:krpow/*, iseed*/}",
      "displayText": "rnd31 kscl, krpow, iseed",
      "opcode": "rnd31",
      "description": "31-bit bipolar random opcodes with controllable distribution.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/rnd31.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "rspline ${1:(a|k)rangeMin}, ${2:(a|k)rangeMax}, ${3:kcpsMin}, ${4:kcpsMax}",
      "displayText": "rspline (a|k)rangeMin, (a|k)rangeMax, kcpsMin, kcpsMax",
      "opcode": "rspline",
      "description": "Generate random spline curves.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/rspline.html",
      "type": "function"
    },
    {
      "leftLabel": "ik",
      "snippet": "rtclock",
      "displayText": "rtclock",
      "opcode": "rtclock",
      "description": "Read the real time clock from the operating system.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/rtclock.html",
      "type": "function"
    },
    {
      "leftLabel": "iiiiiiiiiiiiiiii",
      "snippet": "s16b14 ${1:ichan}, ${2:ictlno_msb1}, ${3:ictlno_lsb1}, ${4:imin1}, ${5:imax1}, ${6:initvalue1}, ${7:ifn1}, ${8:i..}, ${9:ictlno_msb16}, ${10:ictlno_lsb16}, ${11:imin16}, ${12:imax16}, ${13:initvalue16}, ${14:ifn16}, ${15:i}, ${16:i}, ${17:i}, ${18:i}, ${19:i}, ${20:i}, ${21:i}, ${22:i}, ${23:i}, ${24:i}, ${25:i}, ${26:i}, ${27:i}, ${28:i}, ${29:i}, ${30:i}, ${31:i}, ${32:i}, ${33:i}, ${34:i}, ${35:i}, ${36:i}, ${37:i}, ${38:i}, ${39:i}, ${40:i}, ${41:i}, ${42:i}, ${43:i}, ${44:i}, ${45:i}, ${46:i}, ${47:i}, ${48:i}, ${49:i}, ${50:i}, ${51:i}, ${52:i}, ${53:i}, ${54:i}, ${55:i}, ${56:i}, ${57:i}, ${58:i}, ${59:i}, ${60:i}, ${61:i}, ${62:i}, ${63:i}, ${64:i}, ${65:i}, ${66:i}, ${67:i}, ${68:i}, ${69:i}, ${70:i}, ${71:i}, ${72:i}, ${73:i}, ${74:i}, ${75:i}, ${76:i}, ${77:i}, ${78:i}, ${79:i}, ${80:i}, ${81:i}",
      "displayText": "s16b14 ichan, ictlno_msb1, ictlno_lsb1, imin1, imax1, initvalue1, ifn1, i.., ictlno_msb16, ictlno_lsb16, imin16, imax16, initvalue16, ifn16, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i",
      "opcode": "s16b14",
      "description": "Creates a bank of 16 different 14-bit MIDI control message numbers.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/s16b14.html",
      "type": "function"
    },
    {
      "leftLabel": "kkkkkkkkkkkkkkkk",
      "snippet": "s16b14 ${1:ichan}, ${2:ictlno_msb1}, ${3:ictlno_lsb1}, ${4:imin1}, ${5:imax1}, ${6:initvalue1}, ${7:ifn1}, ${8:i..}, ${9:ictlno_msb16}, ${10:ictlno_lsb16}, ${11:imin16}, ${12:imax16}, ${13:initvalue16}, ${14:ifn16}, ${15:i}, ${16:i}, ${17:i}, ${18:i}, ${19:i}, ${20:i}, ${21:i}, ${22:i}, ${23:i}, ${24:i}, ${25:i}, ${26:i}, ${27:i}, ${28:i}, ${29:i}, ${30:i}, ${31:i}, ${32:i}, ${33:i}, ${34:i}, ${35:i}, ${36:i}, ${37:i}, ${38:i}, ${39:i}, ${40:i}, ${41:i}, ${42:i}, ${43:i}, ${44:i}, ${45:i}, ${46:i}, ${47:i}, ${48:i}, ${49:i}, ${50:i}, ${51:i}, ${52:i}, ${53:i}, ${54:i}, ${55:i}, ${56:i}, ${57:i}, ${58:i}, ${59:i}, ${60:i}, ${61:i}, ${62:i}, ${63:i}, ${64:i}, ${65:i}, ${66:i}, ${67:i}, ${68:i}, ${69:i}, ${70:i}, ${71:i}, ${72:i}, ${73:i}, ${74:i}, ${75:i}, ${76:i}, ${77:i}, ${78:i}, ${79:i}, ${80:i}, ${81:i}, ${82:i}, ${83:i}, ${84:i}, ${85:i}, ${86:i}, ${87:i}, ${88:i}, ${89:i}, ${90:i}, ${91:i}, ${92:i}, ${93:i}, ${94:i}, ${95:i}, ${96:i}, ${97:i}",
      "displayText": "s16b14 ichan, ictlno_msb1, ictlno_lsb1, imin1, imax1, initvalue1, ifn1, i.., ictlno_msb16, ictlno_lsb16, imin16, imax16, initvalue16, ifn16, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i",
      "opcode": "s16b14",
      "description": "Creates a bank of 16 different 14-bit MIDI control message numbers.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/s16b14.html",
      "type": "function"
    },
    {
      "leftLabel": "iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii",
      "snippet": "s32b14 ${1:ichan}, ${2:ictlno_msb1}, ${3:ictlno_lsb1}, ${4:imin1}, ${5:imax1}, ${6:initvalue1}, ${7:ifn1}, ${8:i..}, ${9:ictlno_msb32}, ${10:ictlno_lsb32}, ${11:imin32}, ${12:imax32}, ${13:initvalue32}, ${14:ifn32}, ${15:i}, ${16:i}, ${17:i}, ${18:i}, ${19:i}, ${20:i}, ${21:i}, ${22:i}, ${23:i}, ${24:i}, ${25:i}, ${26:i}, ${27:i}, ${28:i}, ${29:i}, ${30:i}, ${31:i}, ${32:i}, ${33:i}, ${34:i}, ${35:i}, ${36:i}, ${37:i}, ${38:i}, ${39:i}, ${40:i}, ${41:i}, ${42:i}, ${43:i}, ${44:i}, ${45:i}, ${46:i}, ${47:i}, ${48:i}, ${49:i}, ${50:i}, ${51:i}, ${52:i}, ${53:i}, ${54:i}, ${55:i}, ${56:i}, ${57:i}, ${58:i}, ${59:i}, ${60:i}, ${61:i}, ${62:i}, ${63:i}, ${64:i}, ${65:i}, ${66:i}, ${67:i}, ${68:i}, ${69:i}, ${70:i}, ${71:i}, ${72:i}, ${73:i}, ${74:i}, ${75:i}, ${76:i}, ${77:i}, ${78:i}, ${79:i}, ${80:i}, ${81:i}, ${82:i}, ${83:i}, ${84:i}, ${85:i}, ${86:i}, ${87:i}, ${88:i}, ${89:i}, ${90:i}, ${91:i}, ${92:i}, ${93:i}, ${94:i}, ${95:i}, ${96:i}, ${97:i}, ${98:i}, ${99:i}, ${100:i}, ${101:i}, ${102:i}, ${103:i}, ${104:i}, ${105:i}, ${106:i}, ${107:i}, ${108:i}, ${109:i}, ${110:i}, ${111:i}, ${112:i}, ${113:i}, ${114:i}, ${115:i}, ${116:i}, ${117:i}, ${118:i}, ${119:i}, ${120:i}, ${121:i}, ${122:i}, ${123:i}, ${124:i}, ${125:i}, ${126:i}, ${127:i}, ${128:i}, ${129:i}, ${130:i}, ${131:i}, ${132:i}, ${133:i}, ${134:i}, ${135:i}, ${136:i}, ${137:i}, ${138:i}, ${139:i}, ${140:i}, ${141:i}, ${142:i}, ${143:i}, ${144:i}, ${145:i}, ${146:i}, ${147:i}, ${148:i}, ${149:i}, ${150:i}, ${151:i}, ${152:i}, ${153:i}, ${154:i}, ${155:i}, ${156:i}, ${157:i}, ${158:i}, ${159:i}, ${160:i}, ${161:i}",
      "displayText": "s32b14 ichan, ictlno_msb1, ictlno_lsb1, imin1, imax1, initvalue1, ifn1, i.., ictlno_msb32, ictlno_lsb32, imin32, imax32, initvalue32, ifn32, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i",
      "opcode": "s32b14",
      "description": "Creates a bank of 32 different 14-bit MIDI control message numbers.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/s32b14.html",
      "type": "function"
    },
    {
      "leftLabel": "kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk",
      "snippet": "s32b14 ${1:ichan}, ${2:ictlno_msb1}, ${3:ictlno_lsb1}, ${4:imin1}, ${5:imax1}, ${6:initvalue1}, ${7:ifn1}, ${8:i..}, ${9:ictlno_msb32}, ${10:ictlno_lsb32}, ${11:imin32}, ${12:imax32}, ${13:initvalue32}, ${14:ifn32}, ${15:i}, ${16:i}, ${17:i}, ${18:i}, ${19:i}, ${20:i}, ${21:i}, ${22:i}, ${23:i}, ${24:i}, ${25:i}, ${26:i}, ${27:i}, ${28:i}, ${29:i}, ${30:i}, ${31:i}, ${32:i}, ${33:i}, ${34:i}, ${35:i}, ${36:i}, ${37:i}, ${38:i}, ${39:i}, ${40:i}, ${41:i}, ${42:i}, ${43:i}, ${44:i}, ${45:i}, ${46:i}, ${47:i}, ${48:i}, ${49:i}, ${50:i}, ${51:i}, ${52:i}, ${53:i}, ${54:i}, ${55:i}, ${56:i}, ${57:i}, ${58:i}, ${59:i}, ${60:i}, ${61:i}, ${62:i}, ${63:i}, ${64:i}, ${65:i}, ${66:i}, ${67:i}, ${68:i}, ${69:i}, ${70:i}, ${71:i}, ${72:i}, ${73:i}, ${74:i}, ${75:i}, ${76:i}, ${77:i}, ${78:i}, ${79:i}, ${80:i}, ${81:i}, ${82:i}, ${83:i}, ${84:i}, ${85:i}, ${86:i}, ${87:i}, ${88:i}, ${89:i}, ${90:i}, ${91:i}, ${92:i}, ${93:i}, ${94:i}, ${95:i}, ${96:i}, ${97:i}, ${98:i}, ${99:i}, ${100:i}, ${101:i}, ${102:i}, ${103:i}, ${104:i}, ${105:i}, ${106:i}, ${107:i}, ${108:i}, ${109:i}, ${110:i}, ${111:i}, ${112:i}, ${113:i}, ${114:i}, ${115:i}, ${116:i}, ${117:i}, ${118:i}, ${119:i}, ${120:i}, ${121:i}, ${122:i}, ${123:i}, ${124:i}, ${125:i}, ${126:i}, ${127:i}, ${128:i}, ${129:i}, ${130:i}, ${131:i}, ${132:i}, ${133:i}, ${134:i}, ${135:i}, ${136:i}, ${137:i}, ${138:i}, ${139:i}, ${140:i}, ${141:i}, ${142:i}, ${143:i}, ${144:i}, ${145:i}, ${146:i}, ${147:i}, ${148:i}, ${149:i}, ${150:i}, ${151:i}, ${152:i}, ${153:i}, ${154:i}, ${155:i}, ${156:i}, ${157:i}, ${158:i}, ${159:i}, ${160:i}, ${161:i}, ${162:i}, ${163:i}, ${164:i}, ${165:i}, ${166:i}, ${167:i}, ${168:i}, ${169:i}, ${170:i}, ${171:i}, ${172:i}, ${173:i}, ${174:i}, ${175:i}, ${176:i}, ${177:i}, ${178:i}, ${179:i}, ${180:i}, ${181:i}, ${182:i}, ${183:i}, ${184:i}, ${185:i}, ${186:i}, ${187:i}, ${188:i}, ${189:i}, ${190:i}, ${191:i}, ${192:i}, ${193:i}",
      "displayText": "s32b14 ichan, ictlno_msb1, ictlno_lsb1, imin1, imax1, initvalue1, ifn1, i.., ictlno_msb32, ictlno_lsb32, imin32, imax32, initvalue32, ifn32, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i",
      "opcode": "s32b14",
      "description": "Creates a bank of 32 different 14-bit MIDI control message numbers.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/s32b14.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "samphold ${1:(a|k)Signal}, ${2:(a|k)gate/*, ival, ivstor*/}",
      "displayText": "samphold (a|k)Signal, (a|k)gate, ival, ivstor",
      "opcode": "samphold",
      "description": "Performs a sample-and-hold operation on its input.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/samphold.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "sandpaper ${1:iAmplitude}, ${2:idettack/*, inum, idamp, imaxshake*/}",
      "displayText": "sandpaper iAmplitude, idettack, inum, idamp, imaxshake",
      "opcode": "sandpaper",
      "description": "Semi-physical model of a sandpaper sound.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sandpaper.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "sc_lag ${1:ain}, ${2:klagtime/*, initialvalue=0*/}",
      "displayText": "sc_lag ain, klagtime, initialvalue=0",
      "opcode": "sc_lag",
      "description": "Exponential Lag",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sc_lag.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "sc_lag ${1:kin}, ${2:klagtime/*, initialvalue=0*/}",
      "displayText": "sc_lag kin, klagtime, initialvalue=0",
      "opcode": "sc_lag",
      "description": "Exponential Lag",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sc_lag.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "sc_lagud ${1:ain}, ${2:klagup}, ${3:klagdown/*, i*/}",
      "displayText": "sc_lagud ain, klagup, klagdown, i",
      "opcode": "sc_lagud",
      "description": "Exponential Lag",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sc_lagud.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "sc_lagud ${1:kin}, ${2:klagup}, ${3:klagdown/*, i*/}",
      "displayText": "sc_lagud kin, klagup, klagdown, i",
      "opcode": "sc_lagud",
      "description": "Exponential Lag",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sc_lagud.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "sc_phasor ${1:atrig}, ${2:(a|k)rate}, ${3:kstart}, ${4:kend/*, kresetPos*/}",
      "displayText": "sc_phasor atrig, (a|k)rate, kstart, kend, kresetPos",
      "opcode": "sc_phasor",
      "description": "A resettable linear ramp between two levels",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sc_phasor.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "sc_phasor ${1:ktrig}, ${2:krate}, ${3:kstart}, ${4:kend/*, kresetPos*/}",
      "displayText": "sc_phasor ktrig, krate, kstart, kend, kresetPos",
      "opcode": "sc_phasor",
      "description": "A resettable linear ramp between two levels",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sc_phasor.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "sc_trig ${1:ain}, ${2:kDuration}",
      "displayText": "sc_trig ain, kDuration",
      "opcode": "sc_trig",
      "description": "Timed trigger",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sc_trig.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "sc_trig ${1:kin}, ${2:kDuration}",
      "displayText": "sc_trig kin, kDuration",
      "opcode": "sc_trig",
      "description": "Timed trigger",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sc_trig.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "scale ${1:kinput}, ${2:kmax}, ${3:kmin}",
      "displayText": "scale kinput, kmax, kmin",
      "opcode": "scale",
      "description": "Arbitrary signal scaling.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/scale.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "scalearray ${1:(i|k)array}, ${2:(i|k)min}, ${3:(i|k)max/*, kleft*/}",
      "displayText": "scalearray (i|k)array, (i|k)min, (i|k)max, kleft",
      "opcode": "scalearray",
      "description": "Scales the values in a range of a vector (one dimensional array).",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/scalearray.html",
      "type": "function"
    },
    {
      "snippet": "scanhammer ${1:isrc}, ${2:idst}, ${3:ipos}, ${4:imult}",
      "displayText": "scanhammer isrc, idst, ipos, imult",
      "opcode": "scanhammer",
      "description": "Copies from one table to another with a gain control.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/scanhammer.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "scans ${1:kAmplitude}, ${2:kFrequency}, ${3:iFunctionTable}, ${4:id/*, iorder*/}",
      "displayText": "scans kAmplitude, kFrequency, iFunctionTable, id, iorder",
      "opcode": "scans",
      "description": "Generate audio output using scanned synthesis.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/scans.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "scantable ${1:kAmplitude}, ${2:kpch}, ${3:ipos}, ${4:imass}, ${5:istiff}, ${6:idamp}, ${7:ivel}",
      "displayText": "scantable kAmplitude, kpch, ipos, imass, istiff, idamp, ivel",
      "opcode": "scantable",
      "description": "A simpler scanned synthesis implementation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/scantable.html",
      "type": "function"
    },
    {
      "snippet": "scanu ${1:init}, ${2:irate}, ${3:ifnvel}, ${4:ifnmass}, ${5:ifnstif}, ${6:ifncentr}, ${7:ifndamp}, ${8:kmass}, ${9:kstif}, ${10:kcentr}, ${11:kdamp}, ${12:ileft}, ${13:iright}, ${14:kpos}, ${15:kstrngth}, ${16:ain}, ${17:idisp}, ${18:id}",
      "displayText": "scanu init, irate, ifnvel, ifnmass, ifnstif, ifncentr, ifndamp, kmass, kstif, kcentr, kdamp, ileft, iright, kpos, kstrngth, ain, idisp, id",
      "opcode": "scanu",
      "description": "Compute the waveform and the wavetable for use in scanned synthesis.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/scanu.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "schedkwhen ${1:ktrigger}, ${2:kmintim}, ${3:kmaxnum}, ${4:(S|k)insnum}, ${5:kwhen}, ${6:kDuration…}",
      "displayText": "schedkwhen ktrigger, kmintim, kmaxnum, (S|k)insnum, kwhen, kDuration",
      "opcode": "schedkwhen",
      "description": "Adds a new score event generated by a k-rate trigger.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/schedkwhen.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "schedkwhennamed ${1:ktrigger}, ${2:kmintim}, ${3:kmaxnum}, ${4:(S|k)Name}, ${5:kwhen}, ${6:kDuration…}",
      "displayText": "schedkwhennamed ktrigger, kmintim, kmaxnum, (S|k)Name, kwhen, kDuration",
      "opcode": "schedkwhennamed",
      "description": "Similar to schedkwhen but uses a named instrument at init-time.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/schedkwhennamed.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "schedule ${1:(S|i)nsnum}, ${2:iwhen}, ${3:iDuration}, ${4:(a|i|k|S)p4…}",
      "displayText": "schedule (S|i)nsnum, iwhen, iDuration, (a|i|k|S)p4",
      "opcode": "schedule",
      "description": "Adds a new score event.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/schedule.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "schedwhen ${1:ktrigger}, ${2:(S|k)insnum}, ${3:kwhen}, ${4:kDuration}, ${5:ip4…}",
      "displayText": "schedwhen ktrigger, (S|k)insnum, kwhen, kDuration, ip4",
      "opcode": "schedwhen",
      "description": "Adds a new score event.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/schedwhen.html",
      "type": "function"
    },
    {
      "snippet": "scoreline ${1:Sin}, ${2:ktrig}",
      "displayText": "scoreline Sin, ktrig",
      "opcode": "scoreline",
      "description": "Issues one or more score line events from an instrument.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/scoreline.html",
      "type": "function"
    },
    {
      "snippet": "scoreline_i ${1:Sin}",
      "displayText": "scoreline_i Sin",
      "opcode": "scoreline_i",
      "description": "Issues one or more score line events from an instrument at i-time.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/scoreline_i.html",
      "type": "function"
    },
    {
      "snippet": "seed ${1:ival}",
      "displayText": "seed ival",
      "opcode": "seed",
      "description": "Sets the global seed value.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/seed.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "sekere ${1:iAmplitude}, ${2:idettack/*, inum, idamp, imaxshake*/}",
      "displayText": "sekere iAmplitude, idettack, inum, idamp, imaxshake",
      "opcode": "sekere",
      "description": "Semi-physical model of a sekere sound.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sekere.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "select ${1:a1}, ${2:a2}, ${3:aless}, ${4:aequal}, ${5:amore}",
      "displayText": "select a1, a2, aless, aequal, amore",
      "opcode": "select",
      "description": "Select sample value based on audio-rate comparisons.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/select.html",
      "type": "function"
    },
    {
      "leftLabel": "kk…",
      "snippet": "sense",
      "displayText": "sense",
      "opcode": "sense",
      "description": "Same as the sensekey opcode.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sense.html",
      "type": "function"
    },
    {
      "leftLabel": "kk…",
      "snippet": "sensekey",
      "displayText": "sensekey",
      "opcode": "sensekey",
      "description": "Returns the ASCII code of a key that has been pressed.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sensekey.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "seqtime ${1:ktime_unit}, ${2:kstart}, ${3:kloop}, ${4:kinitndx}, ${5:kfn_times}",
      "displayText": "seqtime ktime_unit, kstart, kloop, kinitndx, kfn_times",
      "opcode": "seqtime",
      "description": "Generates a trigger signal according to the values stored in a table.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/seqtime.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "seqtime2 ${1:ktrig_in}, ${2:ktime_unit}, ${3:kstart}, ${4:kloop}, ${5:kinitndx}, ${6:kfn_times}",
      "displayText": "seqtime2 ktrig_in, ktime_unit, kstart, kloop, kinitndx, kfn_times",
      "opcode": "seqtime2",
      "description": "Generates a trigger signal according to the values stored in a table.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/seqtime2.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "serialBegin ${1:SPortName/*, ibaudRate*/}",
      "displayText": "serialBegin SPortName, ibaudRate",
      "opcode": "serialBegin",
      "description": "Open a serial port.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/serialBegin.html",
      "type": "function"
    },
    {
      "snippet": "serialEnd ${1:iPort}",
      "displayText": "serialEnd iPort",
      "opcode": "serialEnd",
      "description": "Close a serial port.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/serialEnd.html",
      "type": "function"
    },
    {
      "snippet": "serialFlush ${1:iPort}",
      "displayText": "serialFlush iPort",
      "opcode": "serialFlush",
      "description": "Flush data from a serial port.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/serialFlush.html",
      "type": "function"
    },
    {
      "snippet": "serialPrint ${1:iPort}",
      "displayText": "serialPrint iPort",
      "opcode": "serialPrint",
      "description": "Print data from a serial port.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/serialPrint.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "serialRead ${1:iPort}",
      "displayText": "serialRead iPort",
      "opcode": "serialRead",
      "description": "Read data from a serial port.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/serialRead.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "serialWrite ${1:iPort}, ${2:(S|k)Byte}",
      "displayText": "serialWrite iPort, (S|k)Byte",
      "opcode": "serialWrite",
      "description": "Write data to a serial port.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/serialWrite.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "serialWrite_i ${1:iPort}, ${2:(S|i)Byte}",
      "displayText": "serialWrite_i iPort, (S|i)Byte",
      "opcode": "serialWrite_i",
      "description": "Write data to a serial port.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/serialWrite_i.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "setcol ${1:kin}, ${2:kcol}",
      "displayText": "setcol kin, kcol",
      "opcode": "setcol",
      "description": "Stets a given column of a 2-dimensional array from a vector.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/setcol.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "setctrl ${1:inum}, ${2:(S|i)val}, ${3:itype}",
      "displayText": "setctrl inum, (S|i)val, itype",
      "opcode": "setctrl",
      "description": "Configurable slider controls for realtime user input.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/setctrl.html",
      "type": "function"
    },
    {
      "snippet": "setksmps ${1:iksmps}",
      "displayText": "setksmps iksmps",
      "opcode": "setksmps",
      "description": "Sets the local ksmps value in an instrument or user-defined opcode block",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/setksmps.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "setrow ${1:kin}, ${2:krow}",
      "displayText": "setrow kin, krow",
      "opcode": "setrow",
      "description": "Sets a given row of a 2-dimensional array from a vector.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/setrow.html",
      "type": "function"
    },
    {
      "snippet": "setscorepos ${1:ipos}",
      "displayText": "setscorepos ipos",
      "opcode": "setscorepos",
      "description": "Sets the playback position of the current score performance to a given position.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/setscorepos.html",
      "type": "function"
    },
    {
      "snippet": "sfilist ${1:ifilhandle}",
      "displayText": "sfilist ifilhandle",
      "opcode": "sfilist",
      "description": "Prints a list of all instruments of a previously loaded SoundFont2 (SF2) file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sfilist.html",
      "type": "function"
    },
    {
      "leftLabel": "aa",
      "snippet": "sfinstr ${1:ivel}, ${2:inotenum}, ${3:(a|k)Amplitude}, ${4:(a|k)Frequency}, ${5:instrnum}, ${6:ifilhandle/*, iflag, ioffset, i*/}",
      "displayText": "sfinstr ivel, inotenum, (a|k)Amplitude, (a|k)Frequency, instrnum, ifilhandle, iflag, ioffset, i",
      "opcode": "sfinstr",
      "description": "Plays a SoundFont2 (SF2) sample instrument, generating a stereo sound.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sfinstr.html",
      "type": "function"
    },
    {
      "leftLabel": "aa",
      "snippet": "sfinstr3 ${1:ivel}, ${2:inotenum}, ${3:(a|k)Amplitude}, ${4:(a|k)Frequency}, ${5:instrnum}, ${6:ifilhandle/*, iflag, ioffset, i*/}",
      "displayText": "sfinstr3 ivel, inotenum, (a|k)Amplitude, (a|k)Frequency, instrnum, ifilhandle, iflag, ioffset, i",
      "opcode": "sfinstr3",
      "description": "Plays a SoundFont2 (SF2) sample instrument, generating a stereo sound with cubic interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sfinstr3.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "sfinstr3m ${1:ivel}, ${2:inotenum}, ${3:(a|k)Amplitude}, ${4:(a|k)Frequency}, ${5:instrnum}, ${6:ifilhandle/*, iflag, ioffset, i*/}",
      "displayText": "sfinstr3m ivel, inotenum, (a|k)Amplitude, (a|k)Frequency, instrnum, ifilhandle, iflag, ioffset, i",
      "opcode": "sfinstr3m",
      "description": "Plays a SoundFont2 (SF2) sample instrument, generating a mono sound with cubic interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sfinstr3m.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "sfinstrm ${1:ivel}, ${2:inotenum}, ${3:(a|k)Amplitude}, ${4:(a|k)Frequency}, ${5:instrnum}, ${6:ifilhandle/*, iflag, ioffset, i*/}",
      "displayText": "sfinstrm ivel, inotenum, (a|k)Amplitude, (a|k)Frequency, instrnum, ifilhandle, iflag, ioffset, i",
      "opcode": "sfinstrm",
      "description": "Plays a SoundFont2 (SF2) sample instrument, generating a mono sound.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sfinstrm.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "sfload ${1:(S|i)Filename}",
      "displayText": "sfload (S|i)Filename",
      "opcode": "sfload",
      "description": "Loads an entire SoundFont2 (SF2) sample file into memory.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sfload.html",
      "type": "function"
    },
    {
      "leftLabel": "aa",
      "snippet": "sflooper ${1:ivel}, ${2:inotenum}, ${3:kAmplitude}, ${4:kPitch}, ${5:ipreindex}, ${6:kloopstart}, ${7:kloopend}, ${8:kcrossfade/*, istart, imode, ifenv, iskip*/}",
      "displayText": "sflooper ivel, inotenum, kAmplitude, kPitch, ipreindex, kloopstart, kloopend, kcrossfade, istart, imode, ifenv, iskip",
      "opcode": "sflooper",
      "description": "Plays a SoundFont2 (SF2) sample preset, generating a stereo sound, with user-defined time-varying crossfade looping.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sflooper.html",
      "type": "function"
    },
    {
      "snippet": "sfpassign ${1:istartindex}, ${2:ifilhandle/*, imsgs*/}",
      "displayText": "sfpassign istartindex, ifilhandle, imsgs",
      "opcode": "sfpassign",
      "description": "Assigns all presets of a SoundFont2 (SF2) sample file to a sequence of progressive index numbers.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sfpassign.html",
      "type": "function"
    },
    {
      "leftLabel": "aa",
      "snippet": "sfplay ${1:ivel}, ${2:inotenum}, ${3:(a|k)Amplitude}, ${4:(a|k)Frequency}, ${5:ipreindex/*, iflag, ioffset, ienv*/}",
      "displayText": "sfplay ivel, inotenum, (a|k)Amplitude, (a|k)Frequency, ipreindex, iflag, ioffset, ienv",
      "opcode": "sfplay",
      "description": "Plays a SoundFont2 (SF2) sample preset, generating a stereo sound.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sfplay.html",
      "type": "function"
    },
    {
      "leftLabel": "aa",
      "snippet": "sfplay3 ${1:ivel}, ${2:inotenum}, ${3:(a|k)Amplitude}, ${4:(a|k)Frequency}, ${5:ipreindex/*, iflag, ioffset, ienv*/}",
      "displayText": "sfplay3 ivel, inotenum, (a|k)Amplitude, (a|k)Frequency, ipreindex, iflag, ioffset, ienv",
      "opcode": "sfplay3",
      "description": "Plays a SoundFont2 (SF2) sample preset, generating a stereo sound with cubic interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sfplay3.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "sfplay3m ${1:ivel}, ${2:inotenum}, ${3:(a|k)Amplitude}, ${4:(a|k)Frequency}, ${5:ipreindex/*, iflag, ioffset, ienv*/}",
      "displayText": "sfplay3m ivel, inotenum, (a|k)Amplitude, (a|k)Frequency, ipreindex, iflag, ioffset, ienv",
      "opcode": "sfplay3m",
      "description": "Plays a SoundFont2 (SF2) sample preset, generating a mono sound with cubic interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sfplay3m.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "sfplaym ${1:ivel}, ${2:inotenum}, ${3:(a|k)Amplitude}, ${4:(a|k)Frequency}, ${5:ipreindex/*, iflag, ioffset, ienv*/}",
      "displayText": "sfplaym ivel, inotenum, (a|k)Amplitude, (a|k)Frequency, ipreindex, iflag, ioffset, ienv",
      "opcode": "sfplaym",
      "description": "Plays a SoundFont2 (SF2) sample preset, generating a mono sound.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sfplaym.html",
      "type": "function"
    },
    {
      "snippet": "sfplist ${1:ifilhandle}",
      "displayText": "sfplist ifilhandle",
      "opcode": "sfplist",
      "description": "Prints a list of all presets of a SoundFont2 (SF2) sample file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sfplist.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "sfpreset ${1:iprog}, ${2:ibank}, ${3:ifilhandle}, ${4:ipreindex}",
      "displayText": "sfpreset iprog, ibank, ifilhandle, ipreindex",
      "opcode": "sfpreset",
      "description": "Assigns an existing preset of a SoundFont2 (SF2) sample file to an index number.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sfpreset.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "shaker ${1:kAmplitude}, ${2:kFrequency}, ${3:kbeans}, ${4:kdamp}, ${5:ktimes/*, idecay*/}",
      "displayText": "shaker kAmplitude, kFrequency, kbeans, kdamp, ktimes, idecay",
      "opcode": "shaker",
      "description": "Sounds like the shaking of a maraca or similar gourd instrument.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/shaker.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "shiftin ${1:aSignal}",
      "displayText": "shiftin aSignal",
      "opcode": "shiftin",
      "description": "Shifts the contents of an audio variable into a 1-dimensional array.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/shiftin.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "shiftout ${1:kIn/*, ioff*/}",
      "displayText": "shiftout kIn, ioff",
      "opcode": "shiftout",
      "description": "Shifts the contents of a 1-dimensional array into an audio variable.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/shiftout.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "sinsyn ${1:fin}, ${2:kscal}, ${3:kmaxtracks}, ${4:iFunctionTable/*, i*/}",
      "displayText": "sinsyn fin, kscal, kmaxtracks, iFunctionTable, i",
      "opcode": "sinsyn",
      "description": "Streaming partial track additive synthesis with cubic phase interpolation",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sinsyn.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "sleighbells ${1:kAmplitude}, ${2:idettack/*, inum, idamp, imaxshake, iFrequency, ifreq1, ifreq2*/}",
      "displayText": "sleighbells kAmplitude, idettack, inum, idamp, imaxshake, iFrequency, ifreq1, ifreq2",
      "opcode": "sleighbells",
      "description": "Semi-physical model of a sleighbell sound.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sleighbells.html",
      "type": "function"
    },
    {
      "leftLabel": ".[]",
      "snippet": "slicearray ${1:(a|i|k|S)inarray}, ${2:istart}, ${3:iend/*, istride*/}",
      "displayText": "slicearray (a|i|k|S)inarray, istart, iend, istride",
      "opcode": "slicearray",
      "description": "Take a slice of a vector.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/slicearray.html",
      "type": "function"
    },
    {
      "leftLabel": "i[]",
      "snippet": "slicearray ${1:iinarray}, ${2:istart}, ${3:iend/*, istride*/}",
      "displayText": "slicearray iinarray, istart, iend, istride",
      "opcode": "slicearray",
      "description": "Take a slice of a vector.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/slicearray.html",
      "type": "function"
    },
    {
      "leftLabel": "iiiiiiiiiiiiiiii",
      "snippet": "slider16 ${1:ichan}, ${2:ictlnum1}, ${3:imin1}, ${4:imax1}, ${5:init1}, ${6:ifn1}, ${7:i..}, ${8:ictlnum16}, ${9:imin16}, ${10:imax16}, ${11:init16}, ${12:ifn16}, ${13:i}, ${14:i}, ${15:i}, ${16:i}, ${17:i}, ${18:i}, ${19:i}, ${20:i}, ${21:i}, ${22:i}, ${23:i}, ${24:i}, ${25:i}, ${26:i}, ${27:i}, ${28:i}, ${29:i}, ${30:i}, ${31:i}, ${32:i}, ${33:i}, ${34:i}, ${35:i}, ${36:i}, ${37:i}, ${38:i}, ${39:i}, ${40:i}, ${41:i}, ${42:i}, ${43:i}, ${44:i}, ${45:i}, ${46:i}, ${47:i}, ${48:i}, ${49:i}, ${50:i}, ${51:i}, ${52:i}, ${53:i}, ${54:i}, ${55:i}, ${56:i}, ${57:i}, ${58:i}, ${59:i}, ${60:i}, ${61:i}, ${62:i}, ${63:i}, ${64:i}, ${65:i}",
      "displayText": "slider16 ichan, ictlnum1, imin1, imax1, init1, ifn1, i.., ictlnum16, imin16, imax16, init16, ifn16, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i",
      "opcode": "slider16",
      "description": "Creates a bank of 16 different MIDI control message numbers.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/slider16.html",
      "type": "function"
    },
    {
      "leftLabel": "kkkkkkkkkkkkkkkk",
      "snippet": "slider16 ${1:ichan}, ${2:ictlnum1}, ${3:imin1}, ${4:imax1}, ${5:init1}, ${6:ifn1}, ${7:i..}, ${8:ictlnum16}, ${9:imin16}, ${10:imax16}, ${11:init16}, ${12:ifn16}, ${13:i}, ${14:i}, ${15:i}, ${16:i}, ${17:i}, ${18:i}, ${19:i}, ${20:i}, ${21:i}, ${22:i}, ${23:i}, ${24:i}, ${25:i}, ${26:i}, ${27:i}, ${28:i}, ${29:i}, ${30:i}, ${31:i}, ${32:i}, ${33:i}, ${34:i}, ${35:i}, ${36:i}, ${37:i}, ${38:i}, ${39:i}, ${40:i}, ${41:i}, ${42:i}, ${43:i}, ${44:i}, ${45:i}, ${46:i}, ${47:i}, ${48:i}, ${49:i}, ${50:i}, ${51:i}, ${52:i}, ${53:i}, ${54:i}, ${55:i}, ${56:i}, ${57:i}, ${58:i}, ${59:i}, ${60:i}, ${61:i}, ${62:i}, ${63:i}, ${64:i}, ${65:i}, ${66:i}, ${67:i}, ${68:i}, ${69:i}, ${70:i}, ${71:i}, ${72:i}, ${73:i}, ${74:i}, ${75:i}, ${76:i}, ${77:i}, ${78:i}, ${79:i}, ${80:i}, ${81:i}",
      "displayText": "slider16 ichan, ictlnum1, imin1, imax1, init1, ifn1, i.., ictlnum16, imin16, imax16, init16, ifn16, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i",
      "opcode": "slider16",
      "description": "Creates a bank of 16 different MIDI control message numbers.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/slider16.html",
      "type": "function"
    },
    {
      "leftLabel": "kkkkkkkkkkkkkkkk",
      "snippet": "slider16f ${1:ichan}, ${2:ictlnum1}, ${3:imin1}, ${4:imax1}, ${5:init1}, ${6:ifn1}, ${7:icutoff1}, ${8:i..}, ${9:ictlnum16}, ${10:imin16}, ${11:imax16}, ${12:init16}, ${13:ifn16}, ${14:icutoff16}, ${15:i}, ${16:i}, ${17:i}, ${18:i}, ${19:i}, ${20:i}, ${21:i}, ${22:i}, ${23:i}, ${24:i}, ${25:i}, ${26:i}, ${27:i}, ${28:i}, ${29:i}, ${30:i}, ${31:i}, ${32:i}, ${33:i}, ${34:i}, ${35:i}, ${36:i}, ${37:i}, ${38:i}, ${39:i}, ${40:i}, ${41:i}, ${42:i}, ${43:i}, ${44:i}, ${45:i}, ${46:i}, ${47:i}, ${48:i}, ${49:i}, ${50:i}, ${51:i}, ${52:i}, ${53:i}, ${54:i}, ${55:i}, ${56:i}, ${57:i}, ${58:i}, ${59:i}, ${60:i}, ${61:i}, ${62:i}, ${63:i}, ${64:i}, ${65:i}, ${66:i}, ${67:i}, ${68:i}, ${69:i}, ${70:i}, ${71:i}, ${72:i}, ${73:i}, ${74:i}, ${75:i}, ${76:i}, ${77:i}, ${78:i}, ${79:i}, ${80:i}, ${81:i}, ${82:i}, ${83:i}, ${84:i}, ${85:i}, ${86:i}, ${87:i}, ${88:i}, ${89:i}, ${90:i}, ${91:i}, ${92:i}, ${93:i}, ${94:i}, ${95:i}, ${96:i}, ${97:i}",
      "displayText": "slider16f ichan, ictlnum1, imin1, imax1, init1, ifn1, icutoff1, i.., ictlnum16, imin16, imax16, init16, ifn16, icutoff16, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i",
      "opcode": "slider16f",
      "description": "Creates a bank of 16 different MIDI control message numbers, filtered before output.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/slider16f.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "slider16table ${1:ichan}, ${2:ioutTable}, ${3:ioffset}, ${4:ictlnum1}, ${5:imin1}, ${6:imax1}, ${7:init1}, ${8:ifn1}, ${9:i...}, ${10:ictlnum16}, ${11:imin16}, ${12:imax16}, ${13:init16}, ${14:ifn16}, ${15:i}, ${16:i}, ${17:i}, ${18:i}, ${19:i}, ${20:i}, ${21:i}, ${22:i}, ${23:i}, ${24:i}, ${25:i}, ${26:i}, ${27:i}, ${28:i}, ${29:i}, ${30:i}, ${31:i}, ${32:i}, ${33:i}, ${34:i}, ${35:i}, ${36:i}, ${37:i}, ${38:i}, ${39:i}, ${40:i}, ${41:i}, ${42:i}, ${43:i}, ${44:i}, ${45:i}, ${46:i}, ${47:i}, ${48:i}, ${49:i}, ${50:i}, ${51:i}, ${52:i}, ${53:i}, ${54:i}, ${55:i}, ${56:i}, ${57:i}, ${58:i}, ${59:i}, ${60:i}, ${61:i}, ${62:i}, ${63:i}, ${64:i}, ${65:i}, ${66:i}, ${67:i}, ${68:i}, ${69:i}, ${70:i}, ${71:i}, ${72:i}, ${73:i}, ${74:i}, ${75:i}, ${76:i}, ${77:i}, ${78:i}, ${79:i}, ${80:i}, ${81:i}, ${82:i}, ${83:i}",
      "displayText": "slider16table ichan, ioutTable, ioffset, ictlnum1, imin1, imax1, init1, ifn1, i..., ictlnum16, imin16, imax16, init16, ifn16, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i",
      "opcode": "slider16table",
      "description": "Stores a bank of 16 different MIDI control messages to a table.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/slider16table.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "slider16tablef ${1:ichan}, ${2:ioutTable}, ${3:ioffset}, ${4:ictlnum1}, ${5:imin1}, ${6:imax1}, ${7:init1}, ${8:ifn1}, ${9:icutoff1}, ${10:i...}, ${11:ictlnum16}, ${12:imin16}, ${13:imax16}, ${14:init16}, ${15:ifn16}, ${16:icutoff16}, ${17:i}, ${18:i}, ${19:i}, ${20:i}, ${21:i}, ${22:i}, ${23:i}, ${24:i}, ${25:i}, ${26:i}, ${27:i}, ${28:i}, ${29:i}, ${30:i}, ${31:i}, ${32:i}, ${33:i}, ${34:i}, ${35:i}, ${36:i}, ${37:i}, ${38:i}, ${39:i}, ${40:i}, ${41:i}, ${42:i}, ${43:i}, ${44:i}, ${45:i}, ${46:i}, ${47:i}, ${48:i}, ${49:i}, ${50:i}, ${51:i}, ${52:i}, ${53:i}, ${54:i}, ${55:i}, ${56:i}, ${57:i}, ${58:i}, ${59:i}, ${60:i}, ${61:i}, ${62:i}, ${63:i}, ${64:i}, ${65:i}, ${66:i}, ${67:i}, ${68:i}, ${69:i}, ${70:i}, ${71:i}, ${72:i}, ${73:i}, ${74:i}, ${75:i}, ${76:i}, ${77:i}, ${78:i}, ${79:i}, ${80:i}, ${81:i}, ${82:i}, ${83:i}, ${84:i}, ${85:i}, ${86:i}, ${87:i}, ${88:i}, ${89:i}, ${90:i}, ${91:i}, ${92:i}, ${93:i}, ${94:i}, ${95:i}, ${96:i}, ${97:i}, ${98:i}, ${99:i}",
      "displayText": "slider16tablef ichan, ioutTable, ioffset, ictlnum1, imin1, imax1, init1, ifn1, icutoff1, i..., ictlnum16, imin16, imax16, init16, ifn16, icutoff16, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i",
      "opcode": "slider16tablef",
      "description": "Stores a bank of 16 different MIDI control messages to a table, filtered before output.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/slider16tablef.html",
      "type": "function"
    },
    {
      "leftLabel": "iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii",
      "snippet": "slider32 ${1:ichan}, ${2:ictlnum1}, ${3:imin1}, ${4:imax1}, ${5:init1}, ${6:ifn1}, ${7:i..}, ${8:ictlnum32}, ${9:imin32}, ${10:imax32}, ${11:init32}, ${12:ifn32}, ${13:i}, ${14:i}, ${15:i}, ${16:i}, ${17:i}, ${18:i}, ${19:i}, ${20:i}, ${21:i}, ${22:i}, ${23:i}, ${24:i}, ${25:i}, ${26:i}, ${27:i}, ${28:i}, ${29:i}, ${30:i}, ${31:i}, ${32:i}, ${33:i}, ${34:i}, ${35:i}, ${36:i}, ${37:i}, ${38:i}, ${39:i}, ${40:i}, ${41:i}, ${42:i}, ${43:i}, ${44:i}, ${45:i}, ${46:i}, ${47:i}, ${48:i}, ${49:i}, ${50:i}, ${51:i}, ${52:i}, ${53:i}, ${54:i}, ${55:i}, ${56:i}, ${57:i}, ${58:i}, ${59:i}, ${60:i}, ${61:i}, ${62:i}, ${63:i}, ${64:i}, ${65:i}, ${66:i}, ${67:i}, ${68:i}, ${69:i}, ${70:i}, ${71:i}, ${72:i}, ${73:i}, ${74:i}, ${75:i}, ${76:i}, ${77:i}, ${78:i}, ${79:i}, ${80:i}, ${81:i}, ${82:i}, ${83:i}, ${84:i}, ${85:i}, ${86:i}, ${87:i}, ${88:i}, ${89:i}, ${90:i}, ${91:i}, ${92:i}, ${93:i}, ${94:i}, ${95:i}, ${96:i}, ${97:i}, ${98:i}, ${99:i}, ${100:i}, ${101:i}, ${102:i}, ${103:i}, ${104:i}, ${105:i}, ${106:i}, ${107:i}, ${108:i}, ${109:i}, ${110:i}, ${111:i}, ${112:i}, ${113:i}, ${114:i}, ${115:i}, ${116:i}, ${117:i}, ${118:i}, ${119:i}, ${120:i}, ${121:i}, ${122:i}, ${123:i}, ${124:i}, ${125:i}, ${126:i}, ${127:i}, ${128:i}, ${129:i}",
      "displayText": "slider32 ichan, ictlnum1, imin1, imax1, init1, ifn1, i.., ictlnum32, imin32, imax32, init32, ifn32, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i",
      "opcode": "slider32",
      "description": "Creates a bank of 32 different MIDI control message numbers.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/slider32.html",
      "type": "function"
    },
    {
      "leftLabel": "kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk",
      "snippet": "slider32 ${1:ichan}, ${2:ictlnum1}, ${3:imin1}, ${4:imax1}, ${5:init1}, ${6:ifn1}, ${7:i..}, ${8:ictlnum32}, ${9:imin32}, ${10:imax32}, ${11:init32}, ${12:ifn32}, ${13:i}, ${14:i}, ${15:i}, ${16:i}, ${17:i}, ${18:i}, ${19:i}, ${20:i}, ${21:i}, ${22:i}, ${23:i}, ${24:i}, ${25:i}, ${26:i}, ${27:i}, ${28:i}, ${29:i}, ${30:i}, ${31:i}, ${32:i}, ${33:i}, ${34:i}, ${35:i}, ${36:i}, ${37:i}, ${38:i}, ${39:i}, ${40:i}, ${41:i}, ${42:i}, ${43:i}, ${44:i}, ${45:i}, ${46:i}, ${47:i}, ${48:i}, ${49:i}, ${50:i}, ${51:i}, ${52:i}, ${53:i}, ${54:i}, ${55:i}, ${56:i}, ${57:i}, ${58:i}, ${59:i}, ${60:i}, ${61:i}, ${62:i}, ${63:i}, ${64:i}, ${65:i}, ${66:i}, ${67:i}, ${68:i}, ${69:i}, ${70:i}, ${71:i}, ${72:i}, ${73:i}, ${74:i}, ${75:i}, ${76:i}, ${77:i}, ${78:i}, ${79:i}, ${80:i}, ${81:i}, ${82:i}, ${83:i}, ${84:i}, ${85:i}, ${86:i}, ${87:i}, ${88:i}, ${89:i}, ${90:i}, ${91:i}, ${92:i}, ${93:i}, ${94:i}, ${95:i}, ${96:i}, ${97:i}, ${98:i}, ${99:i}, ${100:i}, ${101:i}, ${102:i}, ${103:i}, ${104:i}, ${105:i}, ${106:i}, ${107:i}, ${108:i}, ${109:i}, ${110:i}, ${111:i}, ${112:i}, ${113:i}, ${114:i}, ${115:i}, ${116:i}, ${117:i}, ${118:i}, ${119:i}, ${120:i}, ${121:i}, ${122:i}, ${123:i}, ${124:i}, ${125:i}, ${126:i}, ${127:i}, ${128:i}, ${129:i}, ${130:i}, ${131:i}, ${132:i}, ${133:i}, ${134:i}, ${135:i}, ${136:i}, ${137:i}, ${138:i}, ${139:i}, ${140:i}, ${141:i}, ${142:i}, ${143:i}, ${144:i}, ${145:i}, ${146:i}, ${147:i}, ${148:i}, ${149:i}, ${150:i}, ${151:i}, ${152:i}, ${153:i}, ${154:i}, ${155:i}, ${156:i}, ${157:i}, ${158:i}, ${159:i}, ${160:i}, ${161:i}",
      "displayText": "slider32 ichan, ictlnum1, imin1, imax1, init1, ifn1, i.., ictlnum32, imin32, imax32, init32, ifn32, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i",
      "opcode": "slider32",
      "description": "Creates a bank of 32 different MIDI control message numbers.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/slider32.html",
      "type": "function"
    },
    {
      "leftLabel": "kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk",
      "snippet": "slider32f ${1:ichan}, ${2:ictlnum1}, ${3:imin1}, ${4:imax1}, ${5:init1}, ${6:ifn1}, ${7:icutoff1}, ${8:i..}, ${9:ictlnum32}, ${10:imin32}, ${11:imax32}, ${12:init32}, ${13:ifn32}, ${14:icutoff32}, ${15:i}, ${16:i}, ${17:i}, ${18:i}, ${19:i}, ${20:i}, ${21:i}, ${22:i}, ${23:i}, ${24:i}, ${25:i}, ${26:i}, ${27:i}, ${28:i}, ${29:i}, ${30:i}, ${31:i}, ${32:i}, ${33:i}, ${34:i}, ${35:i}, ${36:i}, ${37:i}, ${38:i}, ${39:i}, ${40:i}, ${41:i}, ${42:i}, ${43:i}, ${44:i}, ${45:i}, ${46:i}, ${47:i}, ${48:i}, ${49:i}, ${50:i}, ${51:i}, ${52:i}, ${53:i}, ${54:i}, ${55:i}, ${56:i}, ${57:i}, ${58:i}, ${59:i}, ${60:i}, ${61:i}, ${62:i}, ${63:i}, ${64:i}, ${65:i}, ${66:i}, ${67:i}, ${68:i}, ${69:i}, ${70:i}, ${71:i}, ${72:i}, ${73:i}, ${74:i}, ${75:i}, ${76:i}, ${77:i}, ${78:i}, ${79:i}, ${80:i}, ${81:i}, ${82:i}, ${83:i}, ${84:i}, ${85:i}, ${86:i}, ${87:i}, ${88:i}, ${89:i}, ${90:i}, ${91:i}, ${92:i}, ${93:i}, ${94:i}, ${95:i}, ${96:i}, ${97:i}, ${98:i}, ${99:i}, ${100:i}, ${101:i}, ${102:i}, ${103:i}, ${104:i}, ${105:i}, ${106:i}, ${107:i}, ${108:i}, ${109:i}, ${110:i}, ${111:i}, ${112:i}, ${113:i}, ${114:i}, ${115:i}, ${116:i}, ${117:i}, ${118:i}, ${119:i}, ${120:i}, ${121:i}, ${122:i}, ${123:i}, ${124:i}, ${125:i}, ${126:i}, ${127:i}, ${128:i}, ${129:i}, ${130:i}, ${131:i}, ${132:i}, ${133:i}, ${134:i}, ${135:i}, ${136:i}, ${137:i}, ${138:i}, ${139:i}, ${140:i}, ${141:i}, ${142:i}, ${143:i}, ${144:i}, ${145:i}, ${146:i}, ${147:i}, ${148:i}, ${149:i}, ${150:i}, ${151:i}, ${152:i}, ${153:i}, ${154:i}, ${155:i}, ${156:i}, ${157:i}, ${158:i}, ${159:i}, ${160:i}, ${161:i}, ${162:i}, ${163:i}, ${164:i}, ${165:i}, ${166:i}, ${167:i}, ${168:i}, ${169:i}, ${170:i}, ${171:i}, ${172:i}, ${173:i}, ${174:i}, ${175:i}, ${176:i}, ${177:i}, ${178:i}, ${179:i}, ${180:i}, ${181:i}, ${182:i}, ${183:i}, ${184:i}, ${185:i}, ${186:i}, ${187:i}, ${188:i}, ${189:i}, ${190:i}, ${191:i}, ${192:i}, ${193:i}",
      "displayText": "slider32f ichan, ictlnum1, imin1, imax1, init1, ifn1, icutoff1, i.., ictlnum32, imin32, imax32, init32, ifn32, icutoff32, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i",
      "opcode": "slider32f",
      "description": "Creates a bank of 32 different MIDI control message numbers, filtered before output.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/slider32f.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "slider32table ${1:ichan}, ${2:ioutTable}, ${3:ioffset}, ${4:ictlnum1}, ${5:imin1}, ${6:imax1}, ${7:init1}, ${8:ifn1}, ${9:i...}, ${10:ictlnum32}, ${11:imin32}, ${12:imax32}, ${13:init32}, ${14:ifn32}, ${15:i}, ${16:i}, ${17:i}, ${18:i}, ${19:i}, ${20:i}, ${21:i}, ${22:i}, ${23:i}, ${24:i}, ${25:i}, ${26:i}, ${27:i}, ${28:i}, ${29:i}, ${30:i}, ${31:i}, ${32:i}, ${33:i}, ${34:i}, ${35:i}, ${36:i}, ${37:i}, ${38:i}, ${39:i}, ${40:i}, ${41:i}, ${42:i}, ${43:i}, ${44:i}, ${45:i}, ${46:i}, ${47:i}, ${48:i}, ${49:i}, ${50:i}, ${51:i}, ${52:i}, ${53:i}, ${54:i}, ${55:i}, ${56:i}, ${57:i}, ${58:i}, ${59:i}, ${60:i}, ${61:i}, ${62:i}, ${63:i}, ${64:i}, ${65:i}, ${66:i}, ${67:i}, ${68:i}, ${69:i}, ${70:i}, ${71:i}, ${72:i}, ${73:i}, ${74:i}, ${75:i}, ${76:i}, ${77:i}, ${78:i}, ${79:i}, ${80:i}, ${81:i}, ${82:i}, ${83:i}, ${84:i}, ${85:i}, ${86:i}, ${87:i}, ${88:i}, ${89:i}, ${90:i}, ${91:i}, ${92:i}, ${93:i}, ${94:i}, ${95:i}, ${96:i}, ${97:i}, ${98:i}, ${99:i}, ${100:i}, ${101:i}, ${102:i}, ${103:i}, ${104:i}, ${105:i}, ${106:i}, ${107:i}, ${108:i}, ${109:i}, ${110:i}, ${111:i}, ${112:i}, ${113:i}, ${114:i}, ${115:i}, ${116:i}, ${117:i}, ${118:i}, ${119:i}, ${120:i}, ${121:i}, ${122:i}, ${123:i}, ${124:i}, ${125:i}, ${126:i}, ${127:i}, ${128:i}, ${129:i}, ${130:i}, ${131:i}, ${132:i}, ${133:i}, ${134:i}, ${135:i}, ${136:i}, ${137:i}, ${138:i}, ${139:i}, ${140:i}, ${141:i}, ${142:i}, ${143:i}, ${144:i}, ${145:i}, ${146:i}, ${147:i}, ${148:i}, ${149:i}, ${150:i}, ${151:i}, ${152:i}, ${153:i}, ${154:i}, ${155:i}, ${156:i}, ${157:i}, ${158:i}, ${159:i}, ${160:i}, ${161:i}, ${162:i}, ${163:i}",
      "displayText": "slider32table ichan, ioutTable, ioffset, ictlnum1, imin1, imax1, init1, ifn1, i..., ictlnum32, imin32, imax32, init32, ifn32, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i",
      "opcode": "slider32table",
      "description": "Stores a bank of 32 different MIDI control messages to a table.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/slider32table.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "slider32tablef ${1:ichan}, ${2:ioutTable}, ${3:ioffset}, ${4:ictlnum1}, ${5:imin1}, ${6:imax1}, ${7:init1}, ${8:ifn1}, ${9:icutoff1}, ${10:i...}, ${11:ictlnum32}, ${12:imin32}, ${13:imax32}, ${14:init32}, ${15:ifn32}, ${16:icutoff32}, ${17:i}, ${18:i}, ${19:i}, ${20:i}, ${21:i}, ${22:i}, ${23:i}, ${24:i}, ${25:i}, ${26:i}, ${27:i}, ${28:i}, ${29:i}, ${30:i}, ${31:i}, ${32:i}, ${33:i}, ${34:i}, ${35:i}, ${36:i}, ${37:i}, ${38:i}, ${39:i}, ${40:i}, ${41:i}, ${42:i}, ${43:i}, ${44:i}, ${45:i}, ${46:i}, ${47:i}, ${48:i}, ${49:i}, ${50:i}, ${51:i}, ${52:i}, ${53:i}, ${54:i}, ${55:i}, ${56:i}, ${57:i}, ${58:i}, ${59:i}, ${60:i}, ${61:i}, ${62:i}, ${63:i}, ${64:i}, ${65:i}, ${66:i}, ${67:i}, ${68:i}, ${69:i}, ${70:i}, ${71:i}, ${72:i}, ${73:i}, ${74:i}, ${75:i}, ${76:i}, ${77:i}, ${78:i}, ${79:i}, ${80:i}, ${81:i}, ${82:i}, ${83:i}, ${84:i}, ${85:i}, ${86:i}, ${87:i}, ${88:i}, ${89:i}, ${90:i}, ${91:i}, ${92:i}, ${93:i}, ${94:i}, ${95:i}, ${96:i}, ${97:i}, ${98:i}, ${99:i}, ${100:i}, ${101:i}, ${102:i}, ${103:i}, ${104:i}, ${105:i}, ${106:i}, ${107:i}, ${108:i}, ${109:i}, ${110:i}, ${111:i}, ${112:i}, ${113:i}, ${114:i}, ${115:i}, ${116:i}, ${117:i}, ${118:i}, ${119:i}, ${120:i}, ${121:i}, ${122:i}, ${123:i}, ${124:i}, ${125:i}, ${126:i}, ${127:i}, ${128:i}, ${129:i}, ${130:i}, ${131:i}, ${132:i}, ${133:i}, ${134:i}, ${135:i}, ${136:i}, ${137:i}, ${138:i}, ${139:i}, ${140:i}, ${141:i}, ${142:i}, ${143:i}, ${144:i}, ${145:i}, ${146:i}, ${147:i}, ${148:i}, ${149:i}, ${150:i}, ${151:i}, ${152:i}, ${153:i}, ${154:i}, ${155:i}, ${156:i}, ${157:i}, ${158:i}, ${159:i}, ${160:i}, ${161:i}, ${162:i}, ${163:i}, ${164:i}, ${165:i}, ${166:i}, ${167:i}, ${168:i}, ${169:i}, ${170:i}, ${171:i}, ${172:i}, ${173:i}, ${174:i}, ${175:i}, ${176:i}, ${177:i}, ${178:i}, ${179:i}, ${180:i}, ${181:i}, ${182:i}, ${183:i}, ${184:i}, ${185:i}, ${186:i}, ${187:i}, ${188:i}, ${189:i}, ${190:i}, ${191:i}, ${192:i}, ${193:i}, ${194:i}, ${195:i}",
      "displayText": "slider32tablef ichan, ioutTable, ioffset, ictlnum1, imin1, imax1, init1, ifn1, icutoff1, i..., ictlnum32, imin32, imax32, init32, ifn32, icutoff32, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i",
      "opcode": "slider32tablef",
      "description": "Stores a bank of 32 different MIDI control messages to a table, filtered before output.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/slider32tablef.html",
      "type": "function"
    },
    {
      "leftLabel": "iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii",
      "snippet": "slider64 ${1:ichan}, ${2:ictlnum1}, ${3:imin1}, ${4:imax1}, ${5:init1}, ${6:ifn1}, ${7:i..}, ${8:ictlnum64}, ${9:imin64}, ${10:imax64}, ${11:init64}, ${12:ifn64}, ${13:i}, ${14:i}, ${15:i}, ${16:i}, ${17:i}, ${18:i}, ${19:i}, ${20:i}, ${21:i}, ${22:i}, ${23:i}, ${24:i}, ${25:i}, ${26:i}, ${27:i}, ${28:i}, ${29:i}, ${30:i}, ${31:i}, ${32:i}, ${33:i}, ${34:i}, ${35:i}, ${36:i}, ${37:i}, ${38:i}, ${39:i}, ${40:i}, ${41:i}, ${42:i}, ${43:i}, ${44:i}, ${45:i}, ${46:i}, ${47:i}, ${48:i}, ${49:i}, ${50:i}, ${51:i}, ${52:i}, ${53:i}, ${54:i}, ${55:i}, ${56:i}, ${57:i}, ${58:i}, ${59:i}, ${60:i}, ${61:i}, ${62:i}, ${63:i}, ${64:i}, ${65:i}, ${66:i}, ${67:i}, ${68:i}, ${69:i}, ${70:i}, ${71:i}, ${72:i}, ${73:i}, ${74:i}, ${75:i}, ${76:i}, ${77:i}, ${78:i}, ${79:i}, ${80:i}, ${81:i}, ${82:i}, ${83:i}, ${84:i}, ${85:i}, ${86:i}, ${87:i}, ${88:i}, ${89:i}, ${90:i}, ${91:i}, ${92:i}, ${93:i}, ${94:i}, ${95:i}, ${96:i}, ${97:i}, ${98:i}, ${99:i}, ${100:i}, ${101:i}, ${102:i}, ${103:i}, ${104:i}, ${105:i}, ${106:i}, ${107:i}, ${108:i}, ${109:i}, ${110:i}, ${111:i}, ${112:i}, ${113:i}, ${114:i}, ${115:i}, ${116:i}, ${117:i}, ${118:i}, ${119:i}, ${120:i}, ${121:i}, ${122:i}, ${123:i}, ${124:i}, ${125:i}, ${126:i}, ${127:i}, ${128:i}, ${129:i}, ${130:i}, ${131:i}, ${132:i}, ${133:i}, ${134:i}, ${135:i}, ${136:i}, ${137:i}, ${138:i}, ${139:i}, ${140:i}, ${141:i}, ${142:i}, ${143:i}, ${144:i}, ${145:i}, ${146:i}, ${147:i}, ${148:i}, ${149:i}, ${150:i}, ${151:i}, ${152:i}, ${153:i}, ${154:i}, ${155:i}, ${156:i}, ${157:i}, ${158:i}, ${159:i}, ${160:i}, ${161:i}, ${162:i}, ${163:i}, ${164:i}, ${165:i}, ${166:i}, ${167:i}, ${168:i}, ${169:i}, ${170:i}, ${171:i}, ${172:i}, ${173:i}, ${174:i}, ${175:i}, ${176:i}, ${177:i}, ${178:i}, ${179:i}, ${180:i}, ${181:i}, ${182:i}, ${183:i}, ${184:i}, ${185:i}, ${186:i}, ${187:i}, ${188:i}, ${189:i}, ${190:i}, ${191:i}, ${192:i}, ${193:i}, ${194:i}, ${195:i}, ${196:i}, ${197:i}, ${198:i}, ${199:i}, ${200:i}, ${201:i}, ${202:i}, ${203:i}, ${204:i}, ${205:i}, ${206:i}, ${207:i}, ${208:i}, ${209:i}, ${210:i}, ${211:i}, ${212:i}, ${213:i}, ${214:i}, ${215:i}, ${216:i}, ${217:i}, ${218:i}, ${219:i}, ${220:i}, ${221:i}, ${222:i}, ${223:i}, ${224:i}, ${225:i}, ${226:i}, ${227:i}, ${228:i}, ${229:i}, ${230:i}, ${231:i}, ${232:i}, ${233:i}, ${234:i}, ${235:i}, ${236:i}, ${237:i}, ${238:i}, ${239:i}, ${240:i}, ${241:i}, ${242:i}, ${243:i}, ${244:i}, ${245:i}, ${246:i}, ${247:i}, ${248:i}, ${249:i}, ${250:i}, ${251:i}, ${252:i}, ${253:i}, ${254:i}, ${255:i}, ${256:i}, ${257:i}",
      "displayText": "slider64 ichan, ictlnum1, imin1, imax1, init1, ifn1, i.., ictlnum64, imin64, imax64, init64, ifn64, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i",
      "opcode": "slider64",
      "description": "Creates a bank of 64 different MIDI control message numbers.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/slider64.html",
      "type": "function"
    },
    {
      "leftLabel": "kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk",
      "snippet": "slider64 ${1:ichan}, ${2:ictlnum1}, ${3:imin1}, ${4:imax1}, ${5:init1}, ${6:ifn1}, ${7:i..}, ${8:ictlnum64}, ${9:imin64}, ${10:imax64}, ${11:init64}, ${12:ifn64}, ${13:i}, ${14:i}, ${15:i}, ${16:i}, ${17:i}, ${18:i}, ${19:i}, ${20:i}, ${21:i}, ${22:i}, ${23:i}, ${24:i}, ${25:i}, ${26:i}, ${27:i}, ${28:i}, ${29:i}, ${30:i}, ${31:i}, ${32:i}, ${33:i}, ${34:i}, ${35:i}, ${36:i}, ${37:i}, ${38:i}, ${39:i}, ${40:i}, ${41:i}, ${42:i}, ${43:i}, ${44:i}, ${45:i}, ${46:i}, ${47:i}, ${48:i}, ${49:i}, ${50:i}, ${51:i}, ${52:i}, ${53:i}, ${54:i}, ${55:i}, ${56:i}, ${57:i}, ${58:i}, ${59:i}, ${60:i}, ${61:i}, ${62:i}, ${63:i}, ${64:i}, ${65:i}, ${66:i}, ${67:i}, ${68:i}, ${69:i}, ${70:i}, ${71:i}, ${72:i}, ${73:i}, ${74:i}, ${75:i}, ${76:i}, ${77:i}, ${78:i}, ${79:i}, ${80:i}, ${81:i}, ${82:i}, ${83:i}, ${84:i}, ${85:i}, ${86:i}, ${87:i}, ${88:i}, ${89:i}, ${90:i}, ${91:i}, ${92:i}, ${93:i}, ${94:i}, ${95:i}, ${96:i}, ${97:i}, ${98:i}, ${99:i}, ${100:i}, ${101:i}, ${102:i}, ${103:i}, ${104:i}, ${105:i}, ${106:i}, ${107:i}, ${108:i}, ${109:i}, ${110:i}, ${111:i}, ${112:i}, ${113:i}, ${114:i}, ${115:i}, ${116:i}, ${117:i}, ${118:i}, ${119:i}, ${120:i}, ${121:i}, ${122:i}, ${123:i}, ${124:i}, ${125:i}, ${126:i}, ${127:i}, ${128:i}, ${129:i}, ${130:i}, ${131:i}, ${132:i}, ${133:i}, ${134:i}, ${135:i}, ${136:i}, ${137:i}, ${138:i}, ${139:i}, ${140:i}, ${141:i}, ${142:i}, ${143:i}, ${144:i}, ${145:i}, ${146:i}, ${147:i}, ${148:i}, ${149:i}, ${150:i}, ${151:i}, ${152:i}, ${153:i}, ${154:i}, ${155:i}, ${156:i}, ${157:i}, ${158:i}, ${159:i}, ${160:i}, ${161:i}, ${162:i}, ${163:i}, ${164:i}, ${165:i}, ${166:i}, ${167:i}, ${168:i}, ${169:i}, ${170:i}, ${171:i}, ${172:i}, ${173:i}, ${174:i}, ${175:i}, ${176:i}, ${177:i}, ${178:i}, ${179:i}, ${180:i}, ${181:i}, ${182:i}, ${183:i}, ${184:i}, ${185:i}, ${186:i}, ${187:i}, ${188:i}, ${189:i}, ${190:i}, ${191:i}, ${192:i}, ${193:i}, ${194:i}, ${195:i}, ${196:i}, ${197:i}, ${198:i}, ${199:i}, ${200:i}, ${201:i}, ${202:i}, ${203:i}, ${204:i}, ${205:i}, ${206:i}, ${207:i}, ${208:i}, ${209:i}, ${210:i}, ${211:i}, ${212:i}, ${213:i}, ${214:i}, ${215:i}, ${216:i}, ${217:i}, ${218:i}, ${219:i}, ${220:i}, ${221:i}, ${222:i}, ${223:i}, ${224:i}, ${225:i}, ${226:i}, ${227:i}, ${228:i}, ${229:i}, ${230:i}, ${231:i}, ${232:i}, ${233:i}, ${234:i}, ${235:i}, ${236:i}, ${237:i}, ${238:i}, ${239:i}, ${240:i}, ${241:i}, ${242:i}, ${243:i}, ${244:i}, ${245:i}, ${246:i}, ${247:i}, ${248:i}, ${249:i}, ${250:i}, ${251:i}, ${252:i}, ${253:i}, ${254:i}, ${255:i}, ${256:i}, ${257:i}, ${258:i}, ${259:i}, ${260:i}, ${261:i}, ${262:i}, ${263:i}, ${264:i}, ${265:i}, ${266:i}, ${267:i}, ${268:i}, ${269:i}, ${270:i}, ${271:i}, ${272:i}, ${273:i}, ${274:i}, ${275:i}, ${276:i}, ${277:i}, ${278:i}, ${279:i}, ${280:i}, ${281:i}, ${282:i}, ${283:i}, ${284:i}, ${285:i}, ${286:i}, ${287:i}, ${288:i}, ${289:i}, ${290:i}, ${291:i}, ${292:i}, ${293:i}, ${294:i}, ${295:i}, ${296:i}, ${297:i}, ${298:i}, ${299:i}, ${300:i}, ${301:i}, ${302:i}, ${303:i}, ${304:i}, ${305:i}, ${306:i}, ${307:i}, ${308:i}, ${309:i}, ${310:i}, ${311:i}, ${312:i}, ${313:i}, ${314:i}, ${315:i}, ${316:i}, ${317:i}, ${318:i}, ${319:i}, ${320:i}, ${321:i}",
      "displayText": "slider64 ichan, ictlnum1, imin1, imax1, init1, ifn1, i.., ictlnum64, imin64, imax64, init64, ifn64, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i",
      "opcode": "slider64",
      "description": "Creates a bank of 64 different MIDI control message numbers.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/slider64.html",
      "type": "function"
    },
    {
      "leftLabel": "kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk",
      "snippet": "slider64f ${1:ichan}, ${2:ictlnum1}, ${3:imin1}, ${4:imax1}, ${5:init1}, ${6:ifn1}, ${7:icutoff1}, ${8:i..}, ${9:ictlnum64}, ${10:imin64}, ${11:imax64}, ${12:init64}, ${13:ifn64}, ${14:icutoff64}, ${15:i}, ${16:i}, ${17:i}, ${18:i}, ${19:i}, ${20:i}, ${21:i}, ${22:i}, ${23:i}, ${24:i}, ${25:i}, ${26:i}, ${27:i}, ${28:i}, ${29:i}, ${30:i}, ${31:i}, ${32:i}, ${33:i}, ${34:i}, ${35:i}, ${36:i}, ${37:i}, ${38:i}, ${39:i}, ${40:i}, ${41:i}, ${42:i}, ${43:i}, ${44:i}, ${45:i}, ${46:i}, ${47:i}, ${48:i}, ${49:i}, ${50:i}, ${51:i}, ${52:i}, ${53:i}, ${54:i}, ${55:i}, ${56:i}, ${57:i}, ${58:i}, ${59:i}, ${60:i}, ${61:i}, ${62:i}, ${63:i}, ${64:i}, ${65:i}, ${66:i}, ${67:i}, ${68:i}, ${69:i}, ${70:i}, ${71:i}, ${72:i}, ${73:i}, ${74:i}, ${75:i}, ${76:i}, ${77:i}, ${78:i}, ${79:i}, ${80:i}, ${81:i}, ${82:i}, ${83:i}, ${84:i}, ${85:i}, ${86:i}, ${87:i}, ${88:i}, ${89:i}, ${90:i}, ${91:i}, ${92:i}, ${93:i}, ${94:i}, ${95:i}, ${96:i}, ${97:i}, ${98:i}, ${99:i}, ${100:i}, ${101:i}, ${102:i}, ${103:i}, ${104:i}, ${105:i}, ${106:i}, ${107:i}, ${108:i}, ${109:i}, ${110:i}, ${111:i}, ${112:i}, ${113:i}, ${114:i}, ${115:i}, ${116:i}, ${117:i}, ${118:i}, ${119:i}, ${120:i}, ${121:i}, ${122:i}, ${123:i}, ${124:i}, ${125:i}, ${126:i}, ${127:i}, ${128:i}, ${129:i}, ${130:i}, ${131:i}, ${132:i}, ${133:i}, ${134:i}, ${135:i}, ${136:i}, ${137:i}, ${138:i}, ${139:i}, ${140:i}, ${141:i}, ${142:i}, ${143:i}, ${144:i}, ${145:i}, ${146:i}, ${147:i}, ${148:i}, ${149:i}, ${150:i}, ${151:i}, ${152:i}, ${153:i}, ${154:i}, ${155:i}, ${156:i}, ${157:i}, ${158:i}, ${159:i}, ${160:i}, ${161:i}, ${162:i}, ${163:i}, ${164:i}, ${165:i}, ${166:i}, ${167:i}, ${168:i}, ${169:i}, ${170:i}, ${171:i}, ${172:i}, ${173:i}, ${174:i}, ${175:i}, ${176:i}, ${177:i}, ${178:i}, ${179:i}, ${180:i}, ${181:i}, ${182:i}, ${183:i}, ${184:i}, ${185:i}, ${186:i}, ${187:i}, ${188:i}, ${189:i}, ${190:i}, ${191:i}, ${192:i}, ${193:i}, ${194:i}, ${195:i}, ${196:i}, ${197:i}, ${198:i}, ${199:i}, ${200:i}, ${201:i}, ${202:i}, ${203:i}, ${204:i}, ${205:i}, ${206:i}, ${207:i}, ${208:i}, ${209:i}, ${210:i}, ${211:i}, ${212:i}, ${213:i}, ${214:i}, ${215:i}, ${216:i}, ${217:i}, ${218:i}, ${219:i}, ${220:i}, ${221:i}, ${222:i}, ${223:i}, ${224:i}, ${225:i}, ${226:i}, ${227:i}, ${228:i}, ${229:i}, ${230:i}, ${231:i}, ${232:i}, ${233:i}, ${234:i}, ${235:i}, ${236:i}, ${237:i}, ${238:i}, ${239:i}, ${240:i}, ${241:i}, ${242:i}, ${243:i}, ${244:i}, ${245:i}, ${246:i}, ${247:i}, ${248:i}, ${249:i}, ${250:i}, ${251:i}, ${252:i}, ${253:i}, ${254:i}, ${255:i}, ${256:i}, ${257:i}, ${258:i}, ${259:i}, ${260:i}, ${261:i}, ${262:i}, ${263:i}, ${264:i}, ${265:i}, ${266:i}, ${267:i}, ${268:i}, ${269:i}, ${270:i}, ${271:i}, ${272:i}, ${273:i}, ${274:i}, ${275:i}, ${276:i}, ${277:i}, ${278:i}, ${279:i}, ${280:i}, ${281:i}, ${282:i}, ${283:i}, ${284:i}, ${285:i}, ${286:i}, ${287:i}, ${288:i}, ${289:i}, ${290:i}, ${291:i}, ${292:i}, ${293:i}, ${294:i}, ${295:i}, ${296:i}, ${297:i}, ${298:i}, ${299:i}, ${300:i}, ${301:i}, ${302:i}, ${303:i}, ${304:i}, ${305:i}, ${306:i}, ${307:i}, ${308:i}, ${309:i}, ${310:i}, ${311:i}, ${312:i}, ${313:i}, ${314:i}, ${315:i}, ${316:i}, ${317:i}, ${318:i}, ${319:i}, ${320:i}, ${321:i}, ${322:i}, ${323:i}, ${324:i}, ${325:i}, ${326:i}, ${327:i}, ${328:i}, ${329:i}, ${330:i}, ${331:i}, ${332:i}, ${333:i}, ${334:i}, ${335:i}, ${336:i}, ${337:i}, ${338:i}, ${339:i}, ${340:i}, ${341:i}, ${342:i}, ${343:i}, ${344:i}, ${345:i}, ${346:i}, ${347:i}, ${348:i}, ${349:i}, ${350:i}, ${351:i}, ${352:i}, ${353:i}, ${354:i}, ${355:i}, ${356:i}, ${357:i}, ${358:i}, ${359:i}, ${360:i}, ${361:i}, ${362:i}, ${363:i}, ${364:i}, ${365:i}, ${366:i}, ${367:i}, ${368:i}, ${369:i}, ${370:i}, ${371:i}, ${372:i}, ${373:i}, ${374:i}, ${375:i}, ${376:i}, ${377:i}, ${378:i}, ${379:i}, ${380:i}, ${381:i}, ${382:i}, ${383:i}, ${384:i}, ${385:i}",
      "displayText": "slider64f ichan, ictlnum1, imin1, imax1, init1, ifn1, icutoff1, i.., ictlnum64, imin64, imax64, init64, ifn64, icutoff64, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i",
      "opcode": "slider64f",
      "description": "Creates a bank of 64 different MIDI control message numbers, filtered before output.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/slider64f.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "slider64table ${1:ichan}, ${2:ioutTable}, ${3:ioffset}, ${4:ictlnum1}, ${5:imin1}, ${6:imax1}, ${7:init1}, ${8:ifn1}, ${9:i...}, ${10:ictlnum64}, ${11:imin64}, ${12:imax64}, ${13:init64}, ${14:ifn64}, ${15:i}, ${16:i}, ${17:i}, ${18:i}, ${19:i}, ${20:i}, ${21:i}, ${22:i}, ${23:i}, ${24:i}, ${25:i}, ${26:i}, ${27:i}, ${28:i}, ${29:i}, ${30:i}, ${31:i}, ${32:i}, ${33:i}, ${34:i}, ${35:i}, ${36:i}, ${37:i}, ${38:i}, ${39:i}, ${40:i}, ${41:i}, ${42:i}, ${43:i}, ${44:i}, ${45:i}, ${46:i}, ${47:i}, ${48:i}, ${49:i}, ${50:i}, ${51:i}, ${52:i}, ${53:i}, ${54:i}, ${55:i}, ${56:i}, ${57:i}, ${58:i}, ${59:i}, ${60:i}, ${61:i}, ${62:i}, ${63:i}, ${64:i}, ${65:i}, ${66:i}, ${67:i}, ${68:i}, ${69:i}, ${70:i}, ${71:i}, ${72:i}, ${73:i}, ${74:i}, ${75:i}, ${76:i}, ${77:i}, ${78:i}, ${79:i}, ${80:i}, ${81:i}, ${82:i}, ${83:i}, ${84:i}, ${85:i}, ${86:i}, ${87:i}, ${88:i}, ${89:i}, ${90:i}, ${91:i}, ${92:i}, ${93:i}, ${94:i}, ${95:i}, ${96:i}, ${97:i}, ${98:i}, ${99:i}, ${100:i}, ${101:i}, ${102:i}, ${103:i}, ${104:i}, ${105:i}, ${106:i}, ${107:i}, ${108:i}, ${109:i}, ${110:i}, ${111:i}, ${112:i}, ${113:i}, ${114:i}, ${115:i}, ${116:i}, ${117:i}, ${118:i}, ${119:i}, ${120:i}, ${121:i}, ${122:i}, ${123:i}, ${124:i}, ${125:i}, ${126:i}, ${127:i}, ${128:i}, ${129:i}, ${130:i}, ${131:i}, ${132:i}, ${133:i}, ${134:i}, ${135:i}, ${136:i}, ${137:i}, ${138:i}, ${139:i}, ${140:i}, ${141:i}, ${142:i}, ${143:i}, ${144:i}, ${145:i}, ${146:i}, ${147:i}, ${148:i}, ${149:i}, ${150:i}, ${151:i}, ${152:i}, ${153:i}, ${154:i}, ${155:i}, ${156:i}, ${157:i}, ${158:i}, ${159:i}, ${160:i}, ${161:i}, ${162:i}, ${163:i}, ${164:i}, ${165:i}, ${166:i}, ${167:i}, ${168:i}, ${169:i}, ${170:i}, ${171:i}, ${172:i}, ${173:i}, ${174:i}, ${175:i}, ${176:i}, ${177:i}, ${178:i}, ${179:i}, ${180:i}, ${181:i}, ${182:i}, ${183:i}, ${184:i}, ${185:i}, ${186:i}, ${187:i}, ${188:i}, ${189:i}, ${190:i}, ${191:i}, ${192:i}, ${193:i}, ${194:i}, ${195:i}, ${196:i}, ${197:i}, ${198:i}, ${199:i}, ${200:i}, ${201:i}, ${202:i}, ${203:i}, ${204:i}, ${205:i}, ${206:i}, ${207:i}, ${208:i}, ${209:i}, ${210:i}, ${211:i}, ${212:i}, ${213:i}, ${214:i}, ${215:i}, ${216:i}, ${217:i}, ${218:i}, ${219:i}, ${220:i}, ${221:i}, ${222:i}, ${223:i}, ${224:i}, ${225:i}, ${226:i}, ${227:i}, ${228:i}, ${229:i}, ${230:i}, ${231:i}, ${232:i}, ${233:i}, ${234:i}, ${235:i}, ${236:i}, ${237:i}, ${238:i}, ${239:i}, ${240:i}, ${241:i}, ${242:i}, ${243:i}, ${244:i}, ${245:i}, ${246:i}, ${247:i}, ${248:i}, ${249:i}, ${250:i}, ${251:i}, ${252:i}, ${253:i}, ${254:i}, ${255:i}, ${256:i}, ${257:i}, ${258:i}, ${259:i}, ${260:i}, ${261:i}, ${262:i}, ${263:i}, ${264:i}, ${265:i}, ${266:i}, ${267:i}, ${268:i}, ${269:i}, ${270:i}, ${271:i}, ${272:i}, ${273:i}, ${274:i}, ${275:i}, ${276:i}, ${277:i}, ${278:i}, ${279:i}, ${280:i}, ${281:i}, ${282:i}, ${283:i}, ${284:i}, ${285:i}, ${286:i}, ${287:i}, ${288:i}, ${289:i}, ${290:i}, ${291:i}, ${292:i}, ${293:i}, ${294:i}, ${295:i}, ${296:i}, ${297:i}, ${298:i}, ${299:i}, ${300:i}, ${301:i}, ${302:i}, ${303:i}, ${304:i}, ${305:i}, ${306:i}, ${307:i}, ${308:i}, ${309:i}, ${310:i}, ${311:i}, ${312:i}, ${313:i}, ${314:i}, ${315:i}, ${316:i}, ${317:i}, ${318:i}, ${319:i}, ${320:i}, ${321:i}, ${322:i}, ${323:i}",
      "displayText": "slider64table ichan, ioutTable, ioffset, ictlnum1, imin1, imax1, init1, ifn1, i..., ictlnum64, imin64, imax64, init64, ifn64, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i",
      "opcode": "slider64table",
      "description": "Stores a bank of 64 different MIDI control messages to a table.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/slider64table.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "slider64tablef ${1:ichan}, ${2:ioutTable}, ${3:ioffset}, ${4:ictlnum1}, ${5:imin1}, ${6:imax1}, ${7:init1}, ${8:ifn1}, ${9:icutoff1}, ${10:i...}, ${11:ictlnum64}, ${12:imin64}, ${13:imax64}, ${14:init64}, ${15:ifn64}, ${16:icutoff64}, ${17:i}, ${18:i}, ${19:i}, ${20:i}, ${21:i}, ${22:i}, ${23:i}, ${24:i}, ${25:i}, ${26:i}, ${27:i}, ${28:i}, ${29:i}, ${30:i}, ${31:i}, ${32:i}, ${33:i}, ${34:i}, ${35:i}, ${36:i}, ${37:i}, ${38:i}, ${39:i}, ${40:i}, ${41:i}, ${42:i}, ${43:i}, ${44:i}, ${45:i}, ${46:i}, ${47:i}, ${48:i}, ${49:i}, ${50:i}, ${51:i}, ${52:i}, ${53:i}, ${54:i}, ${55:i}, ${56:i}, ${57:i}, ${58:i}, ${59:i}, ${60:i}, ${61:i}, ${62:i}, ${63:i}, ${64:i}, ${65:i}, ${66:i}, ${67:i}, ${68:i}, ${69:i}, ${70:i}, ${71:i}, ${72:i}, ${73:i}, ${74:i}, ${75:i}, ${76:i}, ${77:i}, ${78:i}, ${79:i}, ${80:i}, ${81:i}, ${82:i}, ${83:i}, ${84:i}, ${85:i}, ${86:i}, ${87:i}, ${88:i}, ${89:i}, ${90:i}, ${91:i}, ${92:i}, ${93:i}, ${94:i}, ${95:i}, ${96:i}, ${97:i}, ${98:i}, ${99:i}, ${100:i}, ${101:i}, ${102:i}, ${103:i}, ${104:i}, ${105:i}, ${106:i}, ${107:i}, ${108:i}, ${109:i}, ${110:i}, ${111:i}, ${112:i}, ${113:i}, ${114:i}, ${115:i}, ${116:i}, ${117:i}, ${118:i}, ${119:i}, ${120:i}, ${121:i}, ${122:i}, ${123:i}, ${124:i}, ${125:i}, ${126:i}, ${127:i}, ${128:i}, ${129:i}, ${130:i}, ${131:i}, ${132:i}, ${133:i}, ${134:i}, ${135:i}, ${136:i}, ${137:i}, ${138:i}, ${139:i}, ${140:i}, ${141:i}, ${142:i}, ${143:i}, ${144:i}, ${145:i}, ${146:i}, ${147:i}, ${148:i}, ${149:i}, ${150:i}, ${151:i}, ${152:i}, ${153:i}, ${154:i}, ${155:i}, ${156:i}, ${157:i}, ${158:i}, ${159:i}, ${160:i}, ${161:i}, ${162:i}, ${163:i}, ${164:i}, ${165:i}, ${166:i}, ${167:i}, ${168:i}, ${169:i}, ${170:i}, ${171:i}, ${172:i}, ${173:i}, ${174:i}, ${175:i}, ${176:i}, ${177:i}, ${178:i}, ${179:i}, ${180:i}, ${181:i}, ${182:i}, ${183:i}, ${184:i}, ${185:i}, ${186:i}, ${187:i}, ${188:i}, ${189:i}, ${190:i}, ${191:i}, ${192:i}, ${193:i}, ${194:i}, ${195:i}, ${196:i}, ${197:i}, ${198:i}, ${199:i}, ${200:i}, ${201:i}, ${202:i}, ${203:i}, ${204:i}, ${205:i}, ${206:i}, ${207:i}, ${208:i}, ${209:i}, ${210:i}, ${211:i}, ${212:i}, ${213:i}, ${214:i}, ${215:i}, ${216:i}, ${217:i}, ${218:i}, ${219:i}, ${220:i}, ${221:i}, ${222:i}, ${223:i}, ${224:i}, ${225:i}, ${226:i}, ${227:i}, ${228:i}, ${229:i}, ${230:i}, ${231:i}, ${232:i}, ${233:i}, ${234:i}, ${235:i}, ${236:i}, ${237:i}, ${238:i}, ${239:i}, ${240:i}, ${241:i}, ${242:i}, ${243:i}, ${244:i}, ${245:i}, ${246:i}, ${247:i}, ${248:i}, ${249:i}, ${250:i}, ${251:i}, ${252:i}, ${253:i}, ${254:i}, ${255:i}, ${256:i}, ${257:i}, ${258:i}, ${259:i}, ${260:i}, ${261:i}, ${262:i}, ${263:i}, ${264:i}, ${265:i}, ${266:i}, ${267:i}, ${268:i}, ${269:i}, ${270:i}, ${271:i}, ${272:i}, ${273:i}, ${274:i}, ${275:i}, ${276:i}, ${277:i}, ${278:i}, ${279:i}, ${280:i}, ${281:i}, ${282:i}, ${283:i}, ${284:i}, ${285:i}, ${286:i}, ${287:i}, ${288:i}, ${289:i}, ${290:i}, ${291:i}, ${292:i}, ${293:i}, ${294:i}, ${295:i}, ${296:i}, ${297:i}, ${298:i}, ${299:i}, ${300:i}, ${301:i}, ${302:i}, ${303:i}, ${304:i}, ${305:i}, ${306:i}, ${307:i}, ${308:i}, ${309:i}, ${310:i}, ${311:i}, ${312:i}, ${313:i}, ${314:i}, ${315:i}, ${316:i}, ${317:i}, ${318:i}, ${319:i}, ${320:i}, ${321:i}, ${322:i}, ${323:i}, ${324:i}, ${325:i}, ${326:i}, ${327:i}, ${328:i}, ${329:i}, ${330:i}, ${331:i}, ${332:i}, ${333:i}, ${334:i}, ${335:i}, ${336:i}, ${337:i}, ${338:i}, ${339:i}, ${340:i}, ${341:i}, ${342:i}, ${343:i}, ${344:i}, ${345:i}, ${346:i}, ${347:i}, ${348:i}, ${349:i}, ${350:i}, ${351:i}, ${352:i}, ${353:i}, ${354:i}, ${355:i}, ${356:i}, ${357:i}, ${358:i}, ${359:i}, ${360:i}, ${361:i}, ${362:i}, ${363:i}, ${364:i}, ${365:i}, ${366:i}, ${367:i}, ${368:i}, ${369:i}, ${370:i}, ${371:i}, ${372:i}, ${373:i}, ${374:i}, ${375:i}, ${376:i}, ${377:i}, ${378:i}, ${379:i}, ${380:i}, ${381:i}, ${382:i}, ${383:i}, ${384:i}, ${385:i}, ${386:i}, ${387:i}",
      "displayText": "slider64tablef ichan, ioutTable, ioffset, ictlnum1, imin1, imax1, init1, ifn1, icutoff1, i..., ictlnum64, imin64, imax64, init64, ifn64, icutoff64, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i",
      "opcode": "slider64tablef",
      "description": "Stores a bank of 64 different MIDI control messages to a table, filtered before output.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/slider64tablef.html",
      "type": "function"
    },
    {
      "leftLabel": "iiiiiiii",
      "snippet": "slider8 ${1:ichan}, ${2:ictlnum1}, ${3:imin1}, ${4:imax1}, ${5:init1}, ${6:ifn1}, ${7:i..}, ${8:ictlnum8}, ${9:imin8}, ${10:imax8}, ${11:init8}, ${12:ifn8}, ${13:i}, ${14:i}, ${15:i}, ${16:i}, ${17:i}, ${18:i}, ${19:i}, ${20:i}, ${21:i}, ${22:i}, ${23:i}, ${24:i}, ${25:i}, ${26:i}, ${27:i}, ${28:i}, ${29:i}, ${30:i}, ${31:i}, ${32:i}, ${33:i}",
      "displayText": "slider8 ichan, ictlnum1, imin1, imax1, init1, ifn1, i.., ictlnum8, imin8, imax8, init8, ifn8, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i",
      "opcode": "slider8",
      "description": "Creates a bank of 8 different MIDI control message numbers.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/slider8.html",
      "type": "function"
    },
    {
      "leftLabel": "kkkkkkkk",
      "snippet": "slider8 ${1:ichan}, ${2:ictlnum1}, ${3:imin1}, ${4:imax1}, ${5:init1}, ${6:ifn1}, ${7:i..}, ${8:ictlnum8}, ${9:imin8}, ${10:imax8}, ${11:init8}, ${12:ifn8}, ${13:i}, ${14:i}, ${15:i}, ${16:i}, ${17:i}, ${18:i}, ${19:i}, ${20:i}, ${21:i}, ${22:i}, ${23:i}, ${24:i}, ${25:i}, ${26:i}, ${27:i}, ${28:i}, ${29:i}, ${30:i}, ${31:i}, ${32:i}, ${33:i}, ${34:i}, ${35:i}, ${36:i}, ${37:i}, ${38:i}, ${39:i}, ${40:i}, ${41:i}",
      "displayText": "slider8 ichan, ictlnum1, imin1, imax1, init1, ifn1, i.., ictlnum8, imin8, imax8, init8, ifn8, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i",
      "opcode": "slider8",
      "description": "Creates a bank of 8 different MIDI control message numbers.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/slider8.html",
      "type": "function"
    },
    {
      "leftLabel": "kkkkkkkk",
      "snippet": "slider8f ${1:ichan}, ${2:ictlnum1}, ${3:imin1}, ${4:imax1}, ${5:init1}, ${6:ifn1}, ${7:icutoff1}, ${8:i..}, ${9:ictlnum8}, ${10:imin8}, ${11:imax8}, ${12:init8}, ${13:ifn8}, ${14:icutoff8}, ${15:i}, ${16:i}, ${17:i}, ${18:i}, ${19:i}, ${20:i}, ${21:i}, ${22:i}, ${23:i}, ${24:i}, ${25:i}, ${26:i}, ${27:i}, ${28:i}, ${29:i}, ${30:i}, ${31:i}, ${32:i}, ${33:i}, ${34:i}, ${35:i}, ${36:i}, ${37:i}, ${38:i}, ${39:i}, ${40:i}, ${41:i}, ${42:i}, ${43:i}, ${44:i}, ${45:i}, ${46:i}, ${47:i}, ${48:i}, ${49:i}",
      "displayText": "slider8f ichan, ictlnum1, imin1, imax1, init1, ifn1, icutoff1, i.., ictlnum8, imin8, imax8, init8, ifn8, icutoff8, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i",
      "opcode": "slider8f",
      "description": "Creates a bank of 8 different MIDI control message numbers, filtered before output.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/slider8f.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "slider8table ${1:ichan}, ${2:ioutTable}, ${3:ioffset}, ${4:ictlnum1}, ${5:imin1}, ${6:imax1}, ${7:init1}, ${8:ifn1}, ${9:i..}, ${10:ictlnum8}, ${11:imin8}, ${12:imax8}, ${13:init8}, ${14:ifn8}, ${15:i}, ${16:i}, ${17:i}, ${18:i}, ${19:i}, ${20:i}, ${21:i}, ${22:i}, ${23:i}, ${24:i}, ${25:i}, ${26:i}, ${27:i}, ${28:i}, ${29:i}, ${30:i}, ${31:i}, ${32:i}, ${33:i}, ${34:i}, ${35:i}, ${36:i}, ${37:i}, ${38:i}, ${39:i}, ${40:i}, ${41:i}, ${42:i}, ${43:i}",
      "displayText": "slider8table ichan, ioutTable, ioffset, ictlnum1, imin1, imax1, init1, ifn1, i.., ictlnum8, imin8, imax8, init8, ifn8, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i",
      "opcode": "slider8table",
      "description": "Stores a bank of 8 different MIDI control messages to a table.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/slider8table.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "slider8tablef ${1:ichan}, ${2:ioutTable}, ${3:ioffset}, ${4:ictlnum1}, ${5:imin1}, ${6:imax1}, ${7:init1}, ${8:ifn1}, ${9:icutoff1}, ${10:i...}, ${11:ictlnum8}, ${12:imin8}, ${13:imax8}, ${14:init8}, ${15:ifn8}, ${16:icutoff8}, ${17:i}, ${18:i}, ${19:i}, ${20:i}, ${21:i}, ${22:i}, ${23:i}, ${24:i}, ${25:i}, ${26:i}, ${27:i}, ${28:i}, ${29:i}, ${30:i}, ${31:i}, ${32:i}, ${33:i}, ${34:i}, ${35:i}, ${36:i}, ${37:i}, ${38:i}, ${39:i}, ${40:i}, ${41:i}, ${42:i}, ${43:i}, ${44:i}, ${45:i}, ${46:i}, ${47:i}, ${48:i}, ${49:i}, ${50:i}, ${51:i}",
      "displayText": "slider8tablef ichan, ioutTable, ioffset, ictlnum1, imin1, imax1, init1, ifn1, icutoff1, i..., ictlnum8, imin8, imax8, init8, ifn8, icutoff8, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i",
      "opcode": "slider8tablef",
      "description": "Stores a bank of 8 different MIDI control messages to a table, filtered before output.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/slider8tablef.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "sndload ${1:(S|i)fname/*, ifmt, ichns, isr, ibas, iAmplitude, istrt, ilpmod, ilps, ilpe*/}",
      "displayText": "sndload (S|i)fname, ifmt, ichns, isr, ibas, iAmplitude, istrt, ilpmod, ilps, ilpe",
      "opcode": "sndload",
      "description": "Loads a sound file into memory for use by loscilx",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sndload.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "sndloop ${1:ain}, ${2:kPitch}, ${3:ktrig}, ${4:iDuration}, ${5:ifad}",
      "displayText": "sndloop ain, kPitch, ktrig, iDuration, ifad",
      "opcode": "sndloop",
      "description": "A sound looper with pitch control.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sndloop.html",
      "type": "function"
    },
    {
      "leftLabel": "a…",
      "snippet": "sndwarp ${1:(a|k)Amplitude}, ${2:(a|k)timewarp}, ${3:(a|k)resample}, ${4:ifn1}, ${5:ibeg}, ${6:iwsize}, ${7:irandw}, ${8:ioverlap}, ${9:ifn2}, ${10:itimemode}",
      "displayText": "sndwarp (a|k)Amplitude, (a|k)timewarp, (a|k)resample, ifn1, ibeg, iwsize, irandw, ioverlap, ifn2, itimemode",
      "opcode": "sndwarp",
      "description": "Reads a mono sound sample from a table and applies time-stretching and/or pitch modification.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sndwarp.html",
      "type": "function"
    },
    {
      "leftLabel": "a…",
      "snippet": "sndwarpst ${1:(a|k)Amplitude}, ${2:(a|k)timewarp}, ${3:(a|k)resample}, ${4:ifn1}, ${5:ibeg}, ${6:iwsize}, ${7:irandw}, ${8:ioverlap}, ${9:ifn2}, ${10:itimemode}",
      "displayText": "sndwarpst (a|k)Amplitude, (a|k)timewarp, (a|k)resample, ifn1, ibeg, iwsize, irandw, ioverlap, ifn2, itimemode",
      "opcode": "sndwarpst",
      "description": "Reads a stereo sound sample from a table and applies time-stretching and/or pitch modification.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sndwarpst.html",
      "type": "function"
    },
    {
      "leftLabel": "Sak",
      "snippet": "sockrecv ${1:iport}, ${2:ilength}",
      "displayText": "sockrecv iport, ilength",
      "opcode": "sockrecv",
      "description": "Receives data from other processes using the low-level UDP or TCP protocols",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sockrecv.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "socksend ${1:(S|a|k)Signal}, ${2:Sipaddr}, ${3:iport}, ${4:ilength/*, i*/}",
      "displayText": "socksend (S|a|k)Signal, Sipaddr, iport, ilength, i",
      "opcode": "socksend",
      "description": "Sends data to other processes using the low-level UDP or TCP protocols",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/socksend.html",
      "type": "function"
    },
    {
      "leftLabel": "i[]",
      "snippet": "sorta ${1:i/i (k- or i-arrays )}",
      "displayText": "sorta i/i (k- or i-arrays )",
      "opcode": "sorta",
      "description": "Sorts an array in ascending order.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sorta.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "sorta ${1:k/i (k- or i-arrays )}",
      "displayText": "sorta k/i (k- or i-arrays )",
      "opcode": "sorta",
      "description": "Sorts an array in ascending order.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sorta.html",
      "type": "function"
    },
    {
      "leftLabel": "i[]",
      "snippet": "sortd ${1:i/i (k- or i-arrays )}",
      "displayText": "sortd i/i (k- or i-arrays )",
      "opcode": "sortd",
      "description": "Sorts an array in descending order.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sortd.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "sortd ${1:k/i (k- or i-arrays )}",
      "displayText": "sortd k/i (k- or i-arrays )",
      "opcode": "sortd",
      "description": "Sorts an array in descending order.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sortd.html",
      "type": "function"
    },
    {
      "leftLabel": "a…",
      "snippet": "soundin ${1:(S|i)filcod/*, iskptim, iformat, iskipinit, ibufsize*/}",
      "displayText": "soundin (S|i)filcod, iskptim, iformat, iskipinit, ibufsize",
      "opcode": "soundin",
      "description": "Reads audio data from an external device or stream.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/soundin.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "soundout ${1:asig1}, ${2:(S|i)filcod/*, iformat*/}",
      "displayText": "soundout asig1, (S|i)filcod, iformat",
      "opcode": "soundout",
      "description": "Deprecated. Writes audio output to a disk file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/soundout.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "soundouts ${1:asigl}, ${2:asigr}, ${3:(S|i)filcod/*, iformat*/}",
      "displayText": "soundouts asigl, asigr, (S|i)filcod, iformat",
      "opcode": "soundouts",
      "description": "Deprecated. Writes audio output to a disk file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/soundouts.html",
      "type": "function"
    },
    {
      "leftLabel": "aaaa",
      "snippet": "space ${1:aSignal}, ${2:iFunctionTable}, ${3:ktime}, ${4:kreverbsend}, ${5:kx}, ${6:ky}",
      "displayText": "space aSignal, iFunctionTable, ktime, kreverbsend, kx, ky",
      "opcode": "space",
      "description": "Distributes an input signal among 4 channels using cartesian coordinates.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/space.html",
      "type": "function"
    },
    {
      "leftLabel": "aaaa",
      "snippet": "spat3d ${1:ain}, ${2:kX}, ${3:kY}, ${4:kZ}, ${5:idist}, ${6:ift}, ${7:imode}, ${8:imdel}, ${9:iovr/*, istor*/}",
      "displayText": "spat3d ain, kX, kY, kZ, idist, ift, imode, imdel, iovr, istor",
      "opcode": "spat3d",
      "description": "Positions the input sound in a 3D space and allows moving the sound at k-rate.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/spat3d.html",
      "type": "function"
    },
    {
      "leftLabel": "aaaa",
      "snippet": "spat3di ${1:ain}, ${2:iX}, ${3:iY}, ${4:iZ}, ${5:idist}, ${6:ift}, ${7:imode/*, istor*/}",
      "displayText": "spat3di ain, iX, iY, iZ, idist, ift, imode, istor",
      "opcode": "spat3di",
      "description": "Positions the input sound in a 3D space with the sound source position set at i-time.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/spat3di.html",
      "type": "function"
    },
    {
      "snippet": "spat3dt ${1:ioutft}, ${2:iX}, ${3:iY}, ${4:iZ}, ${5:idist}, ${6:ift}, ${7:imode}, ${8:irlen/*, iftnocl*/}",
      "displayText": "spat3dt ioutft, iX, iY, iZ, idist, ift, imode, irlen, iftnocl",
      "opcode": "spat3dt",
      "description": "Can be used to render an impulse response for a 3D space at i-time.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/spat3dt.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "spdist ${1:iFunctionTable}, ${2:ktime}, ${3:kx}, ${4:ky}",
      "displayText": "spdist iFunctionTable, ktime, kx, ky",
      "opcode": "spdist",
      "description": "Calculates distance values from xy coordinates.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/spdist.html",
      "type": "function"
    },
    {
      "leftLabel": "w",
      "snippet": "specaddm ${1:wsig1}, ${2:wsig2/*, imul2*/}",
      "displayText": "specaddm wsig1, wsig2, imul2",
      "opcode": "specaddm",
      "description": "Perform a weighted add of two input spectra.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/specaddm.html",
      "type": "function"
    },
    {
      "leftLabel": "w",
      "snippet": "specdiff ${1:wsigin}",
      "displayText": "specdiff wsigin",
      "opcode": "specdiff",
      "description": "Finds the positive difference values between consecutive spectral frames.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/specdiff.html",
      "type": "function"
    },
    {
      "snippet": "specdisp ${1:wSignal}, ${2:iprd/*, iwtflg*/}",
      "displayText": "specdisp wSignal, iprd, iwtflg",
      "opcode": "specdisp",
      "description": "Displays the magnitude values of the spectrum.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/specdisp.html",
      "type": "function"
    },
    {
      "leftLabel": "w",
      "snippet": "specfilt ${1:wsigin}, ${2:ifhtim}",
      "displayText": "specfilt wsigin, ifhtim",
      "opcode": "specfilt",
      "description": "Filters each channel of an input spectrum.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/specfilt.html",
      "type": "function"
    },
    {
      "leftLabel": "w",
      "snippet": "spechist ${1:wsigin}",
      "displayText": "spechist wsigin",
      "opcode": "spechist",
      "description": "Accumulates the values of successive spectral frames.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/spechist.html",
      "type": "function"
    },
    {
      "leftLabel": "kk",
      "snippet": "specptrk ${1:wSignal}, ${2:kvar}, ${3:ilo}, ${4:ihi}, ${5:istr}, ${6:idbthresh}, ${7:inptls}, ${8:irolloff/*, iodd, iconfs, interp, ifprd, iwtflg*/}",
      "displayText": "specptrk wSignal, kvar, ilo, ihi, istr, idbthresh, inptls, irolloff, iodd, iconfs, interp, ifprd, iwtflg",
      "opcode": "specptrk",
      "description": "Estimates the pitch of the most prominent complex tone in the spectrum.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/specptrk.html",
      "type": "function"
    },
    {
      "leftLabel": "w",
      "snippet": "specscal ${1:wsigin}, ${2:ifscale}, ${3:ifthresh}",
      "displayText": "specscal wsigin, ifscale, ifthresh",
      "opcode": "specscal",
      "description": "Scales an input spectral datablock with spectral envelopes.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/specscal.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "specsum ${1:wSignal/*, interp*/}",
      "displayText": "specsum wSignal, interp",
      "opcode": "specsum",
      "description": "Sums the magnitudes across all channels of the spectrum.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/specsum.html",
      "type": "function"
    },
    {
      "leftLabel": "w",
      "snippet": "spectrum ${1:(a|k)Signal}, ${2:iprd}, ${3:iocts}, ${4:ifrqa/*, iq, ihann, idbout, idsprd, idsinrs*/}",
      "displayText": "spectrum (a|k)Signal, iprd, iocts, ifrqa, iq, ihann, idbout, idsprd, idsinrs",
      "opcode": "spectrum",
      "description": "Generate a constant-Q, exponentially-spaced DFT.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/spectrum.html",
      "type": "function"
    },
    {
      "snippet": "splitrig ${1:ktrig}, ${2:kndx}, ${3:imaxtics}, ${4:iFunctionTable}, ${5:kout1…}",
      "displayText": "splitrig ktrig, kndx, imaxtics, iFunctionTable, kout1",
      "opcode": "splitrig",
      "description": "Split a trigger signal",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/splitrig.html",
      "type": "function"
    },
    {
      "leftLabel": "S",
      "snippet": "sprintf ${1:Sfmt}, ${2:(i|S)arg1}, ${3:(a|i|k|S)arg2…}",
      "displayText": "sprintf Sfmt, (i|S)arg1, (a|i|k|S)arg2",
      "opcode": "sprintf",
      "description": "printf-style formatted output to a string variable.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sprintf.html",
      "type": "function"
    },
    {
      "leftLabel": "S",
      "snippet": "sprintfk ${1:Sfmt}, ${2:(i|k|S)arg1}, ${3:(a|i|k|S)arg2…}",
      "displayText": "sprintfk Sfmt, (i|k|S)arg1, (a|i|k|S)arg2",
      "opcode": "sprintfk",
      "description": "printf-style formatted output to a string variable at k-rate.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sprintfk.html",
      "type": "function"
    },
    {
      "leftLabel": "aaaa",
      "snippet": "spsend",
      "displayText": "spsend",
      "opcode": "spsend",
      "description": "Generates output signals based on a previously defined space opcode.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/spsend.html",
      "type": "function"
    },
    {
      "leftLabel": "aa…",
      "snippet": "squinewave ${1:aFrequency}, ${2:aClip}, ${3:aSkew}, ${4:(a|k)syncin/*, iMinSweep, iphase*/}",
      "displayText": "squinewave aFrequency, aClip, aSkew, (a|k)syncin, iMinSweep, iphase",
      "opcode": "squinewave",
      "description": "A mostly bandlimited shape-shifting square-pulse-saw-sinewave oscillator with hardsync.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/squinewave.html",
      "type": "function"
    },
    {
      "snippet": "stack ${1:iStackSize}",
      "displayText": "stack iStackSize",
      "opcode": "stack",
      "description": "Initializes the stack. Deprecated.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/stack.html",
      "type": "function"
    },
    {
      "leftLabel": "aaaa",
      "snippet": "statevar ${1:ain}, ${2:(a|k)cf}, ${3:(a|k)q/*, iosamps, istor*/}",
      "displayText": "statevar ain, (a|k)cf, (a|k)q, iosamps, istor",
      "opcode": "statevar",
      "description": "State-variable filter.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/statevar.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "stix ${1:iAmplitude}, ${2:idettack/*, inum, idamp, imaxshake*/}",
      "displayText": "stix iAmplitude, idettack, inum, idamp, imaxshake",
      "opcode": "stix",
      "description": "Semi-physical model of a stick sound.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/stix.html",
      "type": "function"
    },
    {
      "leftLabel": "S",
      "snippet": "strcat ${1:Ssrc1}, ${2:Ssrc2}",
      "displayText": "strcat Ssrc1, Ssrc2",
      "opcode": "strcat",
      "description": "Concatenate strings",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/strcat.html",
      "type": "function"
    },
    {
      "leftLabel": "S",
      "snippet": "strcatk ${1:Ssrc1}, ${2:Ssrc2}",
      "displayText": "strcatk Ssrc1, Ssrc2",
      "opcode": "strcatk",
      "description": "Concatenate strings (k-rate)",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/strcatk.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "strchar ${1:Sstr/*, ipos*/}",
      "displayText": "strchar Sstr, ipos",
      "opcode": "strchar",
      "description": "Return the ASCII code of a character in a string",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/strchar.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "strchark ${1:Sstr/*, kpos*/}",
      "displayText": "strchark Sstr, kpos",
      "opcode": "strchark",
      "description": "Return the ASCII code of a character in a string",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/strchark.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "strcmp ${1:S1}, ${2:S2}",
      "displayText": "strcmp S1, S2",
      "opcode": "strcmp",
      "description": "Compare strings",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/strcmp.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "strcmpk ${1:S1}, ${2:S2}",
      "displayText": "strcmpk S1, S2",
      "opcode": "strcmpk",
      "description": "Compare strings",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/strcmpk.html",
      "type": "function"
    },
    {
      "leftLabel": "S",
      "snippet": "strcpy ${1:(S|i)src}",
      "displayText": "strcpy (S|i)src",
      "opcode": "strcpy",
      "description": "Assign value to a string variable",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/strcpy.html",
      "type": "function"
    },
    {
      "leftLabel": "S",
      "snippet": "strcpyk ${1:(S|k)src}",
      "displayText": "strcpyk (S|k)src",
      "opcode": "strcpyk",
      "description": "Assign value to a string variable (k-rate)",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/strcpyk.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "streson ${1:aSignal}, ${2:kfr}, ${3:kfdbgain}",
      "displayText": "streson aSignal, kfr, kfdbgain",
      "opcode": "streson",
      "description": "A string resonator with variable fundamental frequency.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/streson.html",
      "type": "function"
    },
    {
      "leftLabel": "S",
      "snippet": "strfromurl ${1:StringURL}",
      "displayText": "strfromurl StringURL",
      "opcode": "strfromurl",
      "description": "Set string variable to value read from an URL",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/strfromurl.html",
      "type": "function"
    },
    {
      "leftLabel": "S",
      "snippet": "strget ${1:indx}",
      "displayText": "strget indx",
      "opcode": "strget",
      "description": "Set string variable to value from strset table or string p-field",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/strget.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "strindex ${1:S1}, ${2:S2}",
      "displayText": "strindex S1, S2",
      "opcode": "strindex",
      "description": "Return the position of the first occurence of a string in another string",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/strindex.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "strindexk ${1:S1}, ${2:S2}",
      "displayText": "strindexk S1, S2",
      "opcode": "strindexk",
      "description": "Return the position of the first occurence of a string in another string",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/strindexk.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "strlen ${1:Sstr}",
      "displayText": "strlen Sstr",
      "opcode": "strlen",
      "description": "Return the length of a string",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/strlen.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "strlenk ${1:Sstr}",
      "displayText": "strlenk Sstr",
      "opcode": "strlenk",
      "description": "Return the length of a string",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/strlenk.html",
      "type": "function"
    },
    {
      "leftLabel": "S",
      "snippet": "strlower ${1:Ssrc}",
      "displayText": "strlower Ssrc",
      "opcode": "strlower",
      "description": "Convert a string to lower case",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/strlower.html",
      "type": "function"
    },
    {
      "leftLabel": "S",
      "snippet": "strlowerk ${1:Ssrc}",
      "displayText": "strlowerk Ssrc",
      "opcode": "strlowerk",
      "description": "Convert a string to lower case",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/strlowerk.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "strrindex ${1:S1}, ${2:S2}",
      "displayText": "strrindex S1, S2",
      "opcode": "strrindex",
      "description": "Return the position of the last occurence of a string in another string",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/strrindex.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "strrindexk ${1:S1}, ${2:S2}",
      "displayText": "strrindexk S1, S2",
      "opcode": "strrindexk",
      "description": "Return the position of the last occurence of a string in another string",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/strrindexk.html",
      "type": "function"
    },
    {
      "snippet": "strset ${1:iarg}, ${2:Sstring}",
      "displayText": "strset iarg, Sstring",
      "opcode": "strset",
      "description": "Allows a string to be linked with a numeric value.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/strset.html",
      "type": "function"
    },
    {
      "leftLabel": "S",
      "snippet": "strsub ${1:Ssrc/*, istart, iend*/}",
      "displayText": "strsub Ssrc, istart, iend",
      "opcode": "strsub",
      "description": "Extract a substring",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/strsub.html",
      "type": "function"
    },
    {
      "leftLabel": "S",
      "snippet": "strsubk ${1:Ssrc}, ${2:kstart}, ${3:kend}",
      "displayText": "strsubk Ssrc, kstart, kend",
      "opcode": "strsubk",
      "description": "Extract a substring",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/strsubk.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "strtod ${1:(S|i)str}",
      "displayText": "strtod (S|i)str",
      "opcode": "strtod",
      "description": "Converts a string to a float (i-rate).",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/strtod.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "strtodk ${1:Sstr}",
      "displayText": "strtodk Sstr",
      "opcode": "strtodk",
      "description": "Converts a string to a float (k-rate).",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/strtodk.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "strtol ${1:(S|i)str}",
      "displayText": "strtol (S|i)str",
      "opcode": "strtol",
      "description": "Converts a string to a signed integer (i-rate).",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/strtol.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "strtolk ${1:Sstr}",
      "displayText": "strtolk Sstr",
      "opcode": "strtolk",
      "description": "Converts a string to a signed integer (k-rate).",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/strtolk.html",
      "type": "function"
    },
    {
      "leftLabel": "S",
      "snippet": "strupper ${1:Ssrc}",
      "displayText": "strupper Ssrc",
      "opcode": "strupper",
      "description": "Convert a string to upper case",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/strupper.html",
      "type": "function"
    },
    {
      "leftLabel": "S",
      "snippet": "strupperk ${1:Ssrc}",
      "displayText": "strupperk Ssrc",
      "opcode": "strupperk",
      "description": "Convert a string to upper case",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/strupperk.html",
      "type": "function"
    },
    {
      "leftLabel": "a…",
      "snippet": "subinstr ${1:(S|i)nstrnum}, ${2:(a|i|k|S)4…}",
      "displayText": "subinstr (S|i)nstrnum, (a|i|k|S)4",
      "opcode": "subinstr",
      "description": "Creates and runs a numbered instrument instance.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/subinstr.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "subinstrinit ${1:(S|i)nstrnum}, ${2:(a|i|k|S)4…}",
      "displayText": "subinstrinit (S|i)nstrnum, (a|i|k|S)4",
      "opcode": "subinstrinit",
      "description": "Creates and runs a numbered instrument instance at init-time.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/subinstrinit.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "sum ${1:asig1…}",
      "displayText": "sum asig1",
      "opcode": "sum",
      "description": "Sums any number of a-rate signals, or array elements.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sum.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "sum ${1:isig1}",
      "displayText": "sum isig1",
      "opcode": "sum",
      "description": "Sums any number of a-rate signals, or array elements.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sum.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "sum ${1:ksig1}",
      "displayText": "sum ksig1",
      "opcode": "sum",
      "description": "Sums any number of a-rate signals, or array elements.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sum.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "sumarray ${1:iarray}",
      "displayText": "sumarray iarray",
      "opcode": "sumarray",
      "description": "returns the sum of the elements in an array.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sumarray.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "sumarray ${1:karray}",
      "displayText": "sumarray karray",
      "opcode": "sumarray",
      "description": "returns the sum of the elements in an array.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/sumarray.html",
      "type": "function"
    },
    {
      "leftLabel": "aaa",
      "snippet": "svfilter ${1:aSignal}, ${2:(a|k)cf}, ${3:(a|k)q/*, iscl, iskip*/}",
      "displayText": "svfilter aSignal, (a|k)cf, (a|k)q, iscl, iskip",
      "opcode": "svfilter",
      "description": "A resonant second order filter, with simultaneous lowpass, highpass and bandpass outputs.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/svfilter.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "syncgrain ${1:kAmplitude}, ${2:kFrequency}, ${3:kPitch}, ${4:kgrsize}, ${5:kprate}, ${6:ifun1}, ${7:ifun2}, ${8:iolaps}",
      "displayText": "syncgrain kAmplitude, kFrequency, kPitch, kgrsize, kprate, ifun1, ifun2, iolaps",
      "opcode": "syncgrain",
      "description": "Synchronous granular synthesis.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/syncgrain.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "syncloop ${1:kAmplitude}, ${2:kFrequency}, ${3:kPitch}, ${4:kgrsize}, ${5:kprate}, ${6:klstart}, ${7:klend}, ${8:ifun1}, ${9:ifun2}, ${10:iolaps/*, istart, iskip*/}",
      "displayText": "syncloop kAmplitude, kFrequency, kPitch, kgrsize, kprate, klstart, klend, ifun1, ifun2, iolaps, istart, iskip",
      "opcode": "syncloop",
      "description": "Synchronous granular synthesis.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/syncloop.html",
      "type": "function"
    },
    {
      "leftLabel": "aa",
      "snippet": "syncphasor ${1:(a|k)Frequency}, ${2:asyncin/*, i*/}",
      "displayText": "syncphasor (a|k)Frequency, asyncin, i",
      "opcode": "syncphasor",
      "description": "Produces a normalized moving phase value with sync input and output.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/syncphasor.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "system ${1:ktrig}, ${2:Scmd/*, knowait*/}",
      "displayText": "system ktrig, Scmd, knowait",
      "opcode": "system",
      "description": "Call an external program via the system call",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/system.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "tab ${1:(a|k)ndx}, ${2:iFunctionTable/*, ixmode*/}",
      "displayText": "tab (a|k)ndx, iFunctionTable, ixmode",
      "opcode": "tab",
      "description": "Fast table opcodes.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tab.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "tab ${1:kndx}, ${2:iFunctionTable/*, ixmode*/}",
      "displayText": "tab kndx, iFunctionTable, ixmode",
      "opcode": "tab",
      "description": "Fast table opcodes.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tab.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "tab2pvs ${1:kvar|karr/*, ihopsize, iwinsize, iwintype*/}",
      "displayText": "tab2pvs kvar|karr, ihopsize, iwinsize, iwintype",
      "opcode": "tab2pvs",
      "description": "Copies spectral data from k-rate arrays (or t-variables.). Also known as pvsfromarray.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tab2pvs.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "tab2pvs ${1:kvar|karr}, ${2:khopsize/*, iwinsize, iwintype, i*/}",
      "displayText": "tab2pvs kvar|karr, khopsize, iwinsize, iwintype, i",
      "opcode": "tab2pvs",
      "description": "Copies spectral data from k-rate arrays (or t-variables.). Also known as pvsfromarray.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tab2pvs.html",
      "type": "function"
    },
    {
      "leftLabel": "ff",
      "snippet": "tabifd ${1:ktimpt}, ${2:kAmplitude}, ${3:kPitch}, ${4:ifftsize}, ${5:ihopsize}, ${6:iwintype}, ${7:iFunctionTable}",
      "displayText": "tabifd ktimpt, kAmplitude, kPitch, ifftsize, ihopsize, iwintype, iFunctionTable",
      "opcode": "tabifd",
      "description": "Instantaneous Frequency Distribution, magnitude and phase analysis.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tabifd.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "table ${1:(a|k)ndx}, ${2:iFunctionTable/*, ixmode, ixoff, iwrap*/}",
      "displayText": "table (a|k)ndx, iFunctionTable, ixmode, ixoff, iwrap",
      "opcode": "table",
      "description": "Accesses table values by direct indexing.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/table.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "table ${1:indx}, ${2:iFunctionTable/*, ixmode, ixoff, iwrap*/}",
      "displayText": "table indx, iFunctionTable, ixmode, ixoff, iwrap",
      "opcode": "table",
      "description": "Accesses table values by direct indexing.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/table.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "table ${1:(a|k)ndx}, ${2:iFunctionTable/*, ixmode, ixoff, iwrap*/}",
      "displayText": "table (a|k)ndx, iFunctionTable, ixmode, ixoff, iwrap",
      "opcode": "table",
      "description": "Accesses table values by direct indexing.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/table.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "table3 ${1:(a|k)ndx}, ${2:iFunctionTable/*, ixmode, ixoff, iwrap*/}",
      "displayText": "table3 (a|k)ndx, iFunctionTable, ixmode, ixoff, iwrap",
      "opcode": "table3",
      "description": "Accesses table values by direct indexing with cubic interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/table3.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "table3 ${1:indx}, ${2:iFunctionTable/*, ixmode, ixoff, iwrap*/}",
      "displayText": "table3 indx, iFunctionTable, ixmode, ixoff, iwrap",
      "opcode": "table3",
      "description": "Accesses table values by direct indexing with cubic interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/table3.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "table3 ${1:(a|k)ndx}, ${2:iFunctionTable/*, ixmode, ixoff, iwrap*/}",
      "displayText": "table3 (a|k)ndx, iFunctionTable, ixmode, ixoff, iwrap",
      "opcode": "table3",
      "description": "Accesses table values by direct indexing with cubic interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/table3.html",
      "type": "function"
    },
    {
      "snippet": "tablecopy ${1:kdft}, ${2:ksft}",
      "displayText": "tablecopy kdft, ksft",
      "opcode": "tablecopy",
      "description": "Simple, fast table copy opcode.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tablecopy.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "tablefilter ${1:kouttable}, ${2:kintatble}, ${3:kmode}, ${4:kparam}",
      "displayText": "tablefilter kouttable, kintatble, kmode, kparam",
      "opcode": "tablefilter",
      "description": "Filters a source table and writes result into a destination table.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tablefilter.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "tablefilteri ${1:iouttable}, ${2:iintatble}, ${3:imode}, ${4:iparam}",
      "displayText": "tablefilteri iouttable, iintatble, imode, iparam",
      "opcode": "tablefilteri",
      "description": "Filters a source table and writes result into a destination table.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tablefilteri.html",
      "type": "function"
    },
    {
      "snippet": "tablegpw ${1:kFunctionTable}",
      "displayText": "tablegpw kFunctionTable",
      "opcode": "tablegpw",
      "description": "Writes a table's guard point.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tablegpw.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "tablei ${1:(a|k)ndx}, ${2:iFunctionTable/*, ixmode, ixoff, iwrap*/}",
      "displayText": "tablei (a|k)ndx, iFunctionTable, ixmode, ixoff, iwrap",
      "opcode": "tablei",
      "description": "Accesses table values by direct indexing with linear interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tablei.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "tablei ${1:indx}, ${2:iFunctionTable/*, ixmode, ixoff, iwrap*/}",
      "displayText": "tablei indx, iFunctionTable, ixmode, ixoff, iwrap",
      "opcode": "tablei",
      "description": "Accesses table values by direct indexing with linear interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tablei.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "tablei ${1:(a|k)ndx}, ${2:iFunctionTable/*, ixmode, ixoff, iwrap*/}",
      "displayText": "tablei (a|k)ndx, iFunctionTable, ixmode, ixoff, iwrap",
      "opcode": "tablei",
      "description": "Accesses table values by direct indexing with linear interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tablei.html",
      "type": "function"
    },
    {
      "snippet": "tableicopy ${1:idft}, ${2:isft}",
      "displayText": "tableicopy idft, isft",
      "opcode": "tableicopy",
      "description": "Simple, fast table copy opcode.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tableicopy.html",
      "type": "function"
    },
    {
      "snippet": "tableigpw ${1:iFunctionTable}",
      "displayText": "tableigpw iFunctionTable",
      "opcode": "tableigpw",
      "description": "Writes a table's guard point.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tableigpw.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "tableikt ${1:(a|k)ndx}, ${2:kFunctionTable/*, ixmode, ixoff, iwrap*/}",
      "displayText": "tableikt (a|k)ndx, kFunctionTable, ixmode, ixoff, iwrap",
      "opcode": "tableikt",
      "description": "Provides k-rate control over table numbers.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tableikt.html",
      "type": "function"
    },
    {
      "snippet": "tableimix ${1:idft}, ${2:idoff}, ${3:ilen}, ${4:is1ft}, ${5:is1off}, ${6:is1g}, ${7:is2ft}, ${8:is2off}, ${9:is2g}",
      "displayText": "tableimix idft, idoff, ilen, is1ft, is1off, is1g, is2ft, is2off, is2g",
      "opcode": "tableimix",
      "description": "Mixes two tables.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tableimix.html",
      "type": "function"
    },
    {
      "snippet": "tableiw ${1:iSignal}, ${2:indx}, ${3:iFunctionTable/*, ixmode, ixoff, iwgmode*/}",
      "displayText": "tableiw iSignal, indx, iFunctionTable, ixmode, ixoff, iwgmode",
      "opcode": "tableiw",
      "description": "Change the contents of existing function tables.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tableiw.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "tablekt ${1:(a|k)ndx}, ${2:kFunctionTable/*, ixmode, ixoff, iwrap*/}",
      "displayText": "tablekt (a|k)ndx, kFunctionTable, ixmode, ixoff, iwrap",
      "opcode": "tablekt",
      "description": "Provides k-rate control over table numbers.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tablekt.html",
      "type": "function"
    },
    {
      "snippet": "tablemix ${1:kdft}, ${2:kdoff}, ${3:klen}, ${4:ks1ft}, ${5:ks1off}, ${6:ks1g}, ${7:ks2ft}, ${8:ks2off}, ${9:ks2g}",
      "displayText": "tablemix kdft, kdoff, klen, ks1ft, ks1off, ks1g, ks2ft, ks2off, ks2g",
      "opcode": "tablemix",
      "description": "Mixes two tables.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tablemix.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "tableng ${1:iFunctionTable}",
      "displayText": "tableng iFunctionTable",
      "opcode": "tableng",
      "description": "Interrogates a function table for length.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tableng.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "tableng ${1:kFunctionTable}",
      "displayText": "tableng kFunctionTable",
      "opcode": "tableng",
      "description": "Interrogates a function table for length.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tableng.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "tablera ${1:kFunctionTable}, ${2:kstart}, ${3:koff}",
      "displayText": "tablera kFunctionTable, kstart, koff",
      "opcode": "tablera",
      "description": "Reads tables in sequential locations.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tablera.html",
      "type": "function"
    },
    {
      "snippet": "tableseg ${1:ifn1}, ${2:idur1}, ${3:ifn2…}",
      "displayText": "tableseg ifn1, idur1, ifn2",
      "opcode": "tableseg",
      "description": "Creates a new function table by making linear segments between values in stored function tables.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tableseg.html",
      "type": "function"
    },
    {
      "snippet": "tableshuffle ${1:ktablenum}",
      "displayText": "tableshuffle ktablenum",
      "opcode": "tableshuffle",
      "description": "shuffles the content of a function table so that each element of the source table is put into a different random position.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tableshuffle.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "tablew ${1:(a|i|k)Signal}, ${2:(a|i|k)ndx}, ${3:iFunctionTable/*, ixmode, ixoff, iwgmode*/}",
      "displayText": "tablew (a|i|k)Signal, (a|i|k)ndx, iFunctionTable, ixmode, ixoff, iwgmode",
      "opcode": "tablew",
      "description": "Change the contents of existing function tables.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tablew.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "tablewa ${1:kFunctionTable}, ${2:aSignal}, ${3:koff/*, i*/}",
      "displayText": "tablewa kFunctionTable, aSignal, koff, i",
      "opcode": "tablewa",
      "description": "Writes tables in sequential locations.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tablewa.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "tablewkt ${1:(a|k)Signal}, ${2:(a|k)ndx}, ${3:kFunctionTable/*, ixmode, ixoff, iwgmode*/}",
      "displayText": "tablewkt (a|k)Signal, (a|k)ndx, kFunctionTable, ixmode, ixoff, iwgmode",
      "opcode": "tablewkt",
      "description": "Change the contents of existing function tables.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tablewkt.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "tablexkt ${1:(a|k)ndx}, ${2:kFunctionTable}, ${3:kwarp}, ${4:iwsize/*, ixmode, ixoff, iwrap*/}",
      "displayText": "tablexkt (a|k)ndx, kFunctionTable, kwarp, iwsize, ixmode, ixoff, iwrap",
      "opcode": "tablexkt",
      "description": "Reads function tables with linear, cubic, or sinc interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tablexkt.html",
      "type": "function"
    },
    {
      "snippet": "tablexseg ${1:ifn1}, ${2:idur1}, ${3:ifn2…}",
      "displayText": "tablexseg ifn1, idur1, ifn2",
      "opcode": "tablexseg",
      "description": "Creates a new function table by making exponential segments between values in stored function tables.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tablexseg.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "tabmorph ${1:kindex}, ${2:kweightpoint}, ${3:ktabnum1}, ${4:ktabnum2}, ${5:ifn1…}",
      "displayText": "tabmorph kindex, kweightpoint, ktabnum1, ktabnum2, ifn1",
      "opcode": "tabmorph",
      "description": "Allow morphing between a set of tables.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tabmorph.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "tabmorpha ${1:aindex}, ${2:aweightpoint}, ${3:atabnum1}, ${4:atabnum2}, ${5:ifn1…}",
      "displayText": "tabmorpha aindex, aweightpoint, atabnum1, atabnum2, ifn1",
      "opcode": "tabmorpha",
      "description": "Allow morphing between a set of tables at audio rate with interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tabmorpha.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "tabmorphak ${1:aindex}, ${2:kweightpoint}, ${3:ktabnum1}, ${4:ktabnum2}, ${5:ifn1…}",
      "displayText": "tabmorphak aindex, kweightpoint, ktabnum1, ktabnum2, ifn1",
      "opcode": "tabmorphak",
      "description": "Allow morphing between a set of tables at audio rate with interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tabmorphak.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "tabmorphi ${1:kindex}, ${2:kweightpoint}, ${3:ktabnum1}, ${4:ktabnum2}, ${5:ifn1…}",
      "displayText": "tabmorphi kindex, kweightpoint, ktabnum1, ktabnum2, ifn1",
      "opcode": "tabmorphi",
      "description": "Allow morphing between a set of tables with interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tabmorphi.html",
      "type": "function"
    },
    {
      "snippet": "tabplay ${1:ktrig}, ${2:knumtics}, ${3:kFunctionTable}, ${4:kout1…}",
      "displayText": "tabplay ktrig, knumtics, kFunctionTable, kout1",
      "opcode": "tabplay",
      "description": "Playing-back control signals.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tabplay.html",
      "type": "function"
    },
    {
      "snippet": "tabrec ${1:ktrig_start}, ${2:ktrig_stop}, ${3:knumtics}, ${4:kFunctionTable}, ${5:kin1…}",
      "displayText": "tabrec ktrig_start, ktrig_stop, knumtics, kFunctionTable, kin1",
      "opcode": "tabrec",
      "description": "Recording of control signals.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tabrec.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "tabsum ${1:iFunctionTable/*, kmin, kmax*/}",
      "displayText": "tabsum iFunctionTable, kmin, kmax",
      "opcode": "tabsum",
      "description": "Adding values in a range of a table.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tabsum.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "tambourine ${1:kAmplitude}, ${2:idettack/*, inum, idamp, imaxshake, iFrequency, ifreq1, ifreq2*/}",
      "displayText": "tambourine kAmplitude, idettack, inum, idamp, imaxshake, iFrequency, ifreq1, ifreq2",
      "opcode": "tambourine",
      "description": "Semi-physical model of a tambourine sound.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tambourine.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "taninv2 ${1:ay}, ${2:ax}",
      "displayText": "taninv2 ay, ax",
      "opcode": "taninv2",
      "description": "Returns an arctangent.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/taninv2.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "taninv2 ${1:iy}, ${2:ix}",
      "displayText": "taninv2 iy, ix",
      "opcode": "taninv2",
      "description": "Returns an arctangent.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/taninv2.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "taninv2 ${1:ky}, ${2:kx}",
      "displayText": "taninv2 ky, kx",
      "opcode": "taninv2",
      "description": "Returns an arctangent.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/taninv2.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "tbvcf ${1:aSignal}, ${2:(a|k)fco}, ${3:(a|k)res}, ${4:kdist}, ${5:kasym/*, iskip*/}",
      "displayText": "tbvcf aSignal, (a|k)fco, (a|k)res, kdist, kasym, iskip",
      "opcode": "tbvcf",
      "description": "Models some of the filter characteristics of a Roland TB303 voltage-controlled filter.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tbvcf.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "tempest ${1:kin}, ${2:iprd}, ${3:imindur}, ${4:imemdur}, ${5:ihp}, ${6:ithresh}, ${7:ihtim}, ${8:ixfdbak}, ${9:istartempo}, ${10:iFunctionTable/*, idisprd, itweek*/}",
      "displayText": "tempest kin, iprd, imindur, imemdur, ihp, ithresh, ihtim, ixfdbak, istartempo, iFunctionTable, idisprd, itweek",
      "opcode": "tempest",
      "description": "Estimate the tempo of beat patterns in a control signal.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tempest.html",
      "type": "function"
    },
    {
      "snippet": "tempo ${1:ktempo}, ${2:istartempo}",
      "displayText": "tempo ktempo, istartempo",
      "opcode": "tempo",
      "description": "Apply tempo control to an uninterpreted score.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tempo.html",
      "type": "function"
    },
    {
      "leftLabel": "a…",
      "snippet": "temposcal ${1:ktimescal}, ${2:kAmplitude}, ${3:kPitch}, ${4:ktab}, ${5:klock/*, ifftsize, idecim, kthresh, k, k*/}",
      "displayText": "temposcal ktimescal, kAmplitude, kPitch, ktab, klock, ifftsize, idecim, kthresh, k, k",
      "opcode": "temposcal",
      "description": "Phase-locked vocoder processing with onset detection/processing, 'tempo-scaling'.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/temposcal.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "tempoval",
      "displayText": "tempoval",
      "opcode": "tempoval",
      "description": "Reads the current value of the tempo.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tempoval.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "timedseq ${1:ktimpnt}, ${2:iFunctionTable}, ${3:kp1…}",
      "displayText": "timedseq ktimpnt, iFunctionTable, kp1",
      "opcode": "timedseq",
      "description": "Time Variant Sequencer",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/timedseq.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "timeinstk",
      "displayText": "timeinstk",
      "opcode": "timeinstk",
      "description": "Read absolute time in k-rate cycles.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/timeinstk.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "timeinsts",
      "displayText": "timeinsts",
      "opcode": "timeinsts",
      "description": "Read absolute time in seconds.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/timeinsts.html",
      "type": "function"
    },
    {
      "leftLabel": "ik",
      "snippet": "timek",
      "displayText": "timek",
      "opcode": "timek",
      "description": "Read absolute time in k-rate cycles.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/timek.html",
      "type": "function"
    },
    {
      "leftLabel": "ik",
      "snippet": "times",
      "displayText": "times",
      "opcode": "times",
      "description": "Read absolute time in seconds.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/times.html",
      "type": "function"
    },
    {
      "snippet": "timout ${1:istrt}, ${2:iDuration}, ${3:label}",
      "displayText": "timout istrt, iDuration, label",
      "opcode": "timout",
      "description": "Conditional branch during p-time depending on elapsed note time.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/timout.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "tival",
      "displayText": "tival",
      "opcode": "tival",
      "description": "Puts the value of the instrument's internal tie-in flag into the named i-rate variable.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tival.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "tlineto ${1:kSignal}, ${2:ktime}, ${3:ktrig}",
      "displayText": "tlineto kSignal, ktime, ktrig",
      "opcode": "tlineto",
      "description": "Generate glissandos starting from a control signal.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tlineto.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "tone ${1:aSignal}, ${2:(a|k)hp/*, iskip*/}",
      "displayText": "tone aSignal, (a|k)hp, iskip",
      "opcode": "tone",
      "description": "A first-order recursive low-pass filter with variable frequency response.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tone.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "tonek ${1:kSignal}, ${2:khp/*, iskip*/}",
      "displayText": "tonek kSignal, khp, iskip",
      "opcode": "tonek",
      "description": "A first-order recursive low-pass filter with variable frequency response.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tonek.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "tonex ${1:aSignal}, ${2:(a|k)hp/*, inumlayer, iskip*/}",
      "displayText": "tonex aSignal, (a|k)hp, inumlayer, iskip",
      "opcode": "tonex",
      "description": "Emulates a stack of filters using the tone opcode.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tonex.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "tradsyn ${1:fin}, ${2:kscal}, ${3:kPitch}, ${4:kmaxtracks}, ${5:iFunctionTable/*, i*/}",
      "displayText": "tradsyn fin, kscal, kPitch, kmaxtracks, iFunctionTable, i",
      "opcode": "tradsyn",
      "description": "Streaming partial track additive synthesis",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tradsyn.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "trandom ${1:ktrig}, ${2:kmin}, ${3:kmax}",
      "displayText": "trandom ktrig, kmin, kmax",
      "opcode": "trandom",
      "description": "Generates a controlled pseudo-random number series between min and max values according to a trigger.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/trandom.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "transeg ${1:ia}, ${2:iDuration}, ${3:itype}, ${4:ib…}",
      "displayText": "transeg ia, iDuration, itype, ib",
      "opcode": "transeg",
      "description": "Constructs a user-definable envelope.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/transeg.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "transegb ${1:ia}, ${2:itim}, ${3:itype}, ${4:ib…}",
      "displayText": "transegb ia, itim, itype, ib",
      "opcode": "transegb",
      "description": "Constructs a user-definable envelope in absolute time.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/transegb.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "transegr ${1:ia}, ${2:iDuration}, ${3:itype}, ${4:ib…}",
      "displayText": "transegr ia, iDuration, itype, ib",
      "opcode": "transegr",
      "description": "Constructs a user-definable envelope with extended release segment.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/transegr.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "trcross ${1:fin1}, ${2:fin2}, ${3:ksearch}, ${4:kdepth…}",
      "displayText": "trcross fin1, fin2, ksearch, kdepth",
      "opcode": "trcross",
      "description": "Streaming partial track cross-synthesis.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/trcross.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "trfilter ${1:fin}, ${2:kamnt}, ${3:iFunctionTable}",
      "displayText": "trfilter fin, kamnt, iFunctionTable",
      "opcode": "trfilter",
      "description": "Streaming partial track filtering.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/trfilter.html",
      "type": "function"
    },
    {
      "leftLabel": "fkk",
      "snippet": "trhighest ${1:fin1}, ${2:kscal}",
      "displayText": "trhighest fin1, kscal",
      "opcode": "trhighest",
      "description": "Extracts the highest-frequency track from a streaming track input signal.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/trhighest.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "trigger ${1:kSignal}, ${2:kthreshold}, ${3:kmode}",
      "displayText": "trigger kSignal, kthreshold, kmode",
      "opcode": "trigger",
      "description": "Informs when a krate signal crosses a threshold.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/trigger.html",
      "type": "function"
    },
    {
      "snippet": "trigseq ${1:ktrig_in}, ${2:kstart}, ${3:kloop}, ${4:kinitndx}, ${5:kfn_values}, ${6:kout1…}",
      "displayText": "trigseq ktrig_in, kstart, kloop, kinitndx, kfn_values, kout1",
      "opcode": "trigseq",
      "description": "Accepts a trigger signal as input and outputs a group of values.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/trigseq.html",
      "type": "function"
    },
    {
      "leftLabel": "aik",
      "snippet": "trirand ${1:krange}",
      "displayText": "trirand krange",
      "opcode": "trirand",
      "description": "Triangular distribution random number generator",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/trirand.html",
      "type": "function"
    },
    {
      "leftLabel": "fkk",
      "snippet": "trlowest ${1:fin1}, ${2:kscal}",
      "displayText": "trlowest fin1, kscal",
      "opcode": "trlowest",
      "description": "Extracts the lowest-frequency track from a streaming track input signal.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/trlowest.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "trmix ${1:fin1}, ${2:fin2}",
      "displayText": "trmix fin1, fin2",
      "opcode": "trmix",
      "description": "Streaming partial track mixing.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/trmix.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "trscale ${1:fin}, ${2:kPitch…}",
      "displayText": "trscale fin, kPitch",
      "opcode": "trscale",
      "description": "Streaming partial track frequency scaling.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/trscale.html",
      "type": "function"
    },
    {
      "leftLabel": "f",
      "snippet": "trshift ${1:fin}, ${2:kpshift…}",
      "displayText": "trshift fin, kpshift",
      "opcode": "trshift",
      "description": "Streaming partial track frequency scaling.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/trshift.html",
      "type": "function"
    },
    {
      "leftLabel": "ff",
      "snippet": "trsplit ${1:fin}, ${2:ksplit…}",
      "displayText": "trsplit fin, ksplit",
      "opcode": "trsplit",
      "description": "Streaming partial track frequency splitting.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/trsplit.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "turnoff",
      "displayText": "turnoff",
      "opcode": "turnoff",
      "description": "Enables an instrument to turn itself off or to turn an instance of another instrument off.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/turnoff.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "turnoff ${1:(i|k)}",
      "displayText": "turnoff (i|k)",
      "opcode": "turnoff",
      "description": "Enables an instrument to turn itself off or to turn an instance of another instrument off.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/turnoff.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "turnoff2 ${1:(S|i|k)insno}, ${2:kmode}, ${3:krelease}",
      "displayText": "turnoff2 (S|i|k)insno, kmode, krelease",
      "opcode": "turnoff2",
      "description": "Turn off instance(s) of other instruments at performance time.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/turnoff2.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "turnon ${1:(S|i)nsnum/*, itime*/}",
      "displayText": "turnon (S|i)nsnum, itime",
      "opcode": "turnon",
      "description": "Activate an instrument for an indefinite time.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/turnon.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "tvconv ${1:asig1}, ${2:asig2}, ${3:(a|k)freez1}, ${4:(a|k)freez2}, ${5:iparts}, ${6:ifils}",
      "displayText": "tvconv asig1, asig2, (a|k)freez1, (a|k)freez2, iparts, ifils",
      "opcode": "tvconv",
      "description": "A time-varying convolution (FIR filter) opcode.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/tvconv.html",
      "type": "function"
    },
    {
      "leftLabel": "aik",
      "snippet": "unirand ${1:krange}",
      "displayText": "unirand krange",
      "opcode": "unirand",
      "description": "Uniform distribution random number generator (positive values only).",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/unirand.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "unwrap ${1:kin}",
      "displayText": "unwrap kin",
      "opcode": "unwrap",
      "description": "Applies a unwrapping operation to an array of phase values.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/unwrap.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "upsamp ${1:kSignal}",
      "displayText": "upsamp kSignal",
      "opcode": "upsamp",
      "description": "Modify a signal by up-sampling.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/upsamp.html",
      "type": "function"
    },
    {
      "leftLabel": "aik",
      "snippet": "urandom ${1:imin/*, imax*/}",
      "displayText": "urandom imin, imax",
      "opcode": "urandom",
      "description": "truly random opcodes with controllable range.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/urandom.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "vactrol ${1:asig iup/*, idown, i*/}",
      "displayText": "vactrol asig iup, idown, i",
      "opcode": "vactrol",
      "description": "Envelope follower unit generator.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vactrol.html",
      "type": "function"
    },
    {
      "snippet": "vadd ${1:iFunctionTable}, ${2:kval}, ${3:kelements/*, kdstoffset, kverbose*/}",
      "displayText": "vadd iFunctionTable, kval, kelements, kdstoffset, kverbose",
      "opcode": "vadd",
      "description": "Adds a scalar value to a vector in a table.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vadd.html",
      "type": "function"
    },
    {
      "snippet": "vadd_i ${1:iFunctionTable}, ${2:ival}, ${3:ielements/*, idstoffset*/}",
      "displayText": "vadd_i iFunctionTable, ival, ielements, idstoffset",
      "opcode": "vadd_i",
      "description": "Adds a scalar value to a vector in a table.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vadd_i.html",
      "type": "function"
    },
    {
      "snippet": "vaddv ${1:ifn1}, ${2:ifn2}, ${3:kelements/*, kdstoffset, ksrcoffset, kverbose*/}",
      "displayText": "vaddv ifn1, ifn2, kelements, kdstoffset, ksrcoffset, kverbose",
      "opcode": "vaddv",
      "description": "Performs addition between two vectorial control signals.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vaddv.html",
      "type": "function"
    },
    {
      "snippet": "vaddv_i ${1:ifn1}, ${2:ifn2}, ${3:ielements/*, idstoffset, isrcoffset*/}",
      "displayText": "vaddv_i ifn1, ifn2, ielements, idstoffset, isrcoffset",
      "opcode": "vaddv_i",
      "description": "Performs addition between two vectorial control signals at init time.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vaddv_i.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "vaget ${1:kndx}, ${2:avar}",
      "displayText": "vaget kndx, avar",
      "opcode": "vaget",
      "description": "Access values of the current buffer of an a-rate variable by indexing.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vaget.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "valpass ${1:aSignal}, ${2:krvt}, ${3:(a|k)lpt}, ${4:imaxlpt/*, iskip, insmps*/}",
      "displayText": "valpass aSignal, krvt, (a|k)lpt, imaxlpt, iskip, insmps",
      "opcode": "valpass",
      "description": "Variably reverberates an input signal with a flat frequency response.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/valpass.html",
      "type": "function"
    },
    {
      "snippet": "vaset ${1:kval}, ${2:kndx}, ${3:avar}",
      "displayText": "vaset kval, kndx, avar",
      "opcode": "vaset",
      "description": "Write value of into the current buffer of an a-rate variable by index.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vaset.html",
      "type": "function"
    },
    {
      "leftLabel": "a[]a…",
      "snippet": "vbap ${1:aSignal}, ${2:kazim/*, kelev, kspread, ilayout*/}",
      "displayText": "vbap aSignal, kazim, kelev, kspread, ilayout",
      "opcode": "vbap",
      "description": "Distributes an audio signal among many channels.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vbap.html",
      "type": "function"
    },
    {
      "leftLabel": "aaaaaaaaaaaaaaaaa…",
      "snippet": "vbap16 ${1:aSignal}, ${2:kazim/*, kelev, kspread, i*/}",
      "displayText": "vbap16 aSignal, kazim, kelev, kspread, i",
      "opcode": "vbap16",
      "description": "Distributes an audio signal among 16 channels.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vbap16.html",
      "type": "function"
    },
    {
      "leftLabel": "aaaaa…",
      "snippet": "vbap4 ${1:aSignal}, ${2:kazim/*, kelev, kspread, i*/}",
      "displayText": "vbap4 aSignal, kazim, kelev, kspread, i",
      "opcode": "vbap4",
      "description": "Distributes an audio signal among 4 channels.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vbap4.html",
      "type": "function"
    },
    {
      "leftLabel": "aaaa",
      "snippet": "vbap4move ${1:aSignal}, ${2:iDuration}, ${3:ispread}, ${4:ifldnum}, ${5:ifld1…}",
      "displayText": "vbap4move aSignal, iDuration, ispread, ifldnum, ifld1",
      "opcode": "vbap4move",
      "description": "Distributes an audio signal among 4 channels with moving virtual sources.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vbap4move.html",
      "type": "function"
    },
    {
      "leftLabel": "aaaaaaaaa…",
      "snippet": "vbap8 ${1:aSignal}, ${2:kazim/*, kelev, kspread, i*/}",
      "displayText": "vbap8 aSignal, kazim, kelev, kspread, i",
      "opcode": "vbap8",
      "description": "Distributes an audio signal among 8 channels.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vbap8.html",
      "type": "function"
    },
    {
      "leftLabel": "aaaaaaaa",
      "snippet": "vbap8move ${1:aSignal}, ${2:iDuration}, ${3:ispread}, ${4:ifldnum}, ${5:ifld1…}",
      "displayText": "vbap8move aSignal, iDuration, ispread, ifldnum, ifld1",
      "opcode": "vbap8move",
      "description": "Distributes an audio signal among 8 channels with moving virtual sources.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vbap8move.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]k…",
      "snippet": "vbapg ${1:kazim/*, kelev, kspread, ilayout*/}",
      "displayText": "vbapg kazim, kelev, kspread, ilayout",
      "opcode": "vbapg",
      "description": "Calculates the gains for a sound location between multiple channels.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vbapg.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]k…",
      "snippet": "vbapgmove ${1:iDuration}, ${2:ispread}, ${3:ifldnum}, ${4:ifld1…}",
      "displayText": "vbapgmove iDuration, ispread, ifldnum, ifld1",
      "opcode": "vbapgmove",
      "description": "Calculates the gains for a sound location between multiple channels with moving virtual sources.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vbapgmove.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "vbaplsinit ${1:idim}, ${2:ilsnum}, ${3:idir1}",
      "displayText": "vbaplsinit idim, ilsnum, idir1",
      "opcode": "vbaplsinit",
      "description": "Configures VBAP output according to loudspeaker parameters.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vbaplsinit.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "vbaplsinit ${1:idim}, ${2:ilsnum/*, idir1, idir2 ..., idir32, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i*/}",
      "displayText": "vbaplsinit idim, ilsnum, idir1, idir2 ..., idir32, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i",
      "opcode": "vbaplsinit",
      "description": "Configures VBAP output according to loudspeaker parameters.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vbaplsinit.html",
      "type": "function"
    },
    {
      "leftLabel": "a[]a…",
      "snippet": "vbapmove ${1:aSignal}, ${2:iDuration}, ${3:ispread}, ${4:ifldnum}, ${5:ifld1…}",
      "displayText": "vbapmove aSignal, iDuration, ispread, ifldnum, ifld1",
      "opcode": "vbapmove",
      "description": "Distributes an audio signal among many channels with moving virtual sources.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vbapmove.html",
      "type": "function"
    },
    {
      "snippet": "vbapz ${1:inumchnls}, ${2:istartndx}, ${3:aSignal}, ${4:kazim/*, kelev, kspread, i*/}",
      "displayText": "vbapz inumchnls, istartndx, aSignal, kazim, kelev, kspread, i",
      "opcode": "vbapz",
      "description": "Writes a multi-channel audio signal to a ZAK array.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vbapz.html",
      "type": "function"
    },
    {
      "snippet": "vbapzmove ${1:inumchnls}, ${2:istartndx}, ${3:aSignal}, ${4:iDuration}, ${5:ispread}, ${6:ifldnum}, ${7:ifld1…}",
      "displayText": "vbapzmove inumchnls, istartndx, aSignal, iDuration, ispread, ifldnum, ifld1",
      "opcode": "vbapzmove",
      "description": "Writes a multi-channel audio signal to a ZAK array with moving virtual sources.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vbapzmove.html",
      "type": "function"
    },
    {
      "snippet": "vcella ${1:ktrig}, ${2:kreinit}, ${3:ioutFunc}, ${4:initStateFunc}, ${5:iRuleFunc}, ${6:ielements}, ${7:irulelen/*, iradius*/}",
      "displayText": "vcella ktrig, kreinit, ioutFunc, initStateFunc, iRuleFunc, ielements, irulelen, iradius",
      "opcode": "vcella",
      "description": "Cellular Automata",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vcella.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "vco ${1:(a|k)Amplitude}, ${2:(a|k)Frequency}, ${3:iwave/*, kpw, iFunctionTable, imaxd, ileak, inyx, iInitialPhase, iskip*/}",
      "displayText": "vco (a|k)Amplitude, (a|k)Frequency, iwave, kpw, iFunctionTable, imaxd, ileak, inyx, iInitialPhase, iskip",
      "opcode": "vco",
      "description": "Implementation of a band limited, analog modeled oscillator.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vco.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "vco2 ${1:kAmplitude}, ${2:kFrequency/*, imode, kpw, kInitialPhase, inyx*/}",
      "displayText": "vco2 kAmplitude, kFrequency, imode, kpw, kInitialPhase, inyx",
      "opcode": "vco2",
      "description": "Implementation of a band-limited oscillator using pre-calculated tables.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vco2.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "vco2ft ${1:kFrequency/*, iwave, inyx*/}",
      "displayText": "vco2ft kFrequency, iwave, inyx",
      "opcode": "vco2ft",
      "description": "Returns a table number at k-time for a given oscillator frequency and wavform.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vco2ft.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "vco2ift ${1:iFrequency/*, iwave, inyx*/}",
      "displayText": "vco2ift iFrequency, iwave, inyx",
      "opcode": "vco2ift",
      "description": "Returns a table number at i-time for a given oscillator frequency and wavform.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vco2ift.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "vco2init ${1:iwave/*, ibasfn, ipmul, iminsiz, imaxsiz, isrcft*/}",
      "displayText": "vco2init iwave, ibasfn, ipmul, iminsiz, imaxsiz, isrcft",
      "opcode": "vco2init",
      "description": "Calculates tables for use by vco2 opcode.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vco2init.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "vcomb ${1:aSignal}, ${2:krvt}, ${3:(a|k)lpt}, ${4:imaxlpt/*, iskip, insmps*/}",
      "displayText": "vcomb aSignal, krvt, (a|k)lpt, imaxlpt, iskip, insmps",
      "opcode": "vcomb",
      "description": "Variably reverberates an input signal with a colored frequency response.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vcomb.html",
      "type": "function"
    },
    {
      "snippet": "vcopy ${1:ifn1}, ${2:ifn2}, ${3:kelements/*, kdstoffset, ksrcoffset, kverbose*/}",
      "displayText": "vcopy ifn1, ifn2, kelements, kdstoffset, ksrcoffset, kverbose",
      "opcode": "vcopy",
      "description": "Copies between two vectorial control signals",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vcopy.html",
      "type": "function"
    },
    {
      "snippet": "vcopy_i ${1:ifn1}, ${2:ifn2}, ${3:ielements/*, idstoffset, isrcoffset*/}",
      "displayText": "vcopy_i ifn1, ifn2, ielements, idstoffset, isrcoffset",
      "opcode": "vcopy_i",
      "description": "Copies a vector from one table to another.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vcopy_i.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "vdelay ${1:aSignal}, ${2:(a|k)DelayTime}, ${3:imaxdel/*, iskip*/}",
      "displayText": "vdelay aSignal, (a|k)DelayTime, imaxdel, iskip",
      "opcode": "vdelay",
      "description": "An interpolating variable time delay.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vdelay.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "vdelay3 ${1:aSignal}, ${2:(a|k)DelayTime}, ${3:imaxdel/*, iskip*/}",
      "displayText": "vdelay3 aSignal, (a|k)DelayTime, imaxdel, iskip",
      "opcode": "vdelay3",
      "description": "A variable time delay with cubic interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vdelay3.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "vdelayk ${1:kSignal}, ${2:kDelayTime}, ${3:imaxdel/*, iskip, imode*/}",
      "displayText": "vdelayk kSignal, kDelayTime, imaxdel, iskip, imode",
      "opcode": "vdelayk",
      "description": "k-rate variable time delay.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vdelayk.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "vdelayx ${1:ain}, ${2:adl}, ${3:imd}, ${4:iws/*, ist*/}",
      "displayText": "vdelayx ain, adl, imd, iws, ist",
      "opcode": "vdelayx",
      "description": "A variable delay opcode with high quality interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vdelayx.html",
      "type": "function"
    },
    {
      "leftLabel": "aaaa",
      "snippet": "vdelayxq ${1:ain1}, ${2:ain2}, ${3:ain3}, ${4:ain4}, ${5:adl}, ${6:imd}, ${7:iws/*, ist*/}",
      "displayText": "vdelayxq ain1, ain2, ain3, ain4, adl, imd, iws, ist",
      "opcode": "vdelayxq",
      "description": "A 4-channel variable delay opcode with high quality interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vdelayxq.html",
      "type": "function"
    },
    {
      "leftLabel": "aa",
      "snippet": "vdelayxs ${1:ain1}, ${2:ain2}, ${3:adl}, ${4:imd}, ${5:iws/*, ist*/}",
      "displayText": "vdelayxs ain1, ain2, adl, imd, iws, ist",
      "opcode": "vdelayxs",
      "description": "A stereo variable delay opcode with high quality interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vdelayxs.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "vdelayxw ${1:ain}, ${2:adl}, ${3:imd}, ${4:iws/*, ist*/}",
      "displayText": "vdelayxw ain, adl, imd, iws, ist",
      "opcode": "vdelayxw",
      "description": "Variable delay opcodes with high quality interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vdelayxw.html",
      "type": "function"
    },
    {
      "leftLabel": "aaaa",
      "snippet": "vdelayxwq ${1:ain1}, ${2:ain2}, ${3:ain3}, ${4:ain4}, ${5:adl}, ${6:imd}, ${7:iws/*, ist*/}",
      "displayText": "vdelayxwq ain1, ain2, ain3, ain4, adl, imd, iws, ist",
      "opcode": "vdelayxwq",
      "description": "Variable delay opcodes with high quality interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vdelayxwq.html",
      "type": "function"
    },
    {
      "leftLabel": "aa",
      "snippet": "vdelayxws ${1:ain1}, ${2:ain2}, ${3:adl}, ${4:imd}, ${5:iws/*, ist*/}",
      "displayText": "vdelayxws ain1, ain2, adl, imd, iws, ist",
      "opcode": "vdelayxws",
      "description": "Variable delay opcodes with high quality interpolation.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vdelayxws.html",
      "type": "function"
    },
    {
      "snippet": "vdivv ${1:ifn1}, ${2:ifn2}, ${3:kelements/*, kdstoffset, ksrcoffset, kverbose*/}",
      "displayText": "vdivv ifn1, ifn2, kelements, kdstoffset, ksrcoffset, kverbose",
      "opcode": "vdivv",
      "description": "Performs division between two vectorial control signals",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vdivv.html",
      "type": "function"
    },
    {
      "snippet": "vdivv_i ${1:ifn1}, ${2:ifn2}, ${3:ielements/*, idstoffset, isrcoffset*/}",
      "displayText": "vdivv_i ifn1, ifn2, ielements, idstoffset, isrcoffset",
      "opcode": "vdivv_i",
      "description": "Performs division between two vectorial control signals at init time.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vdivv_i.html",
      "type": "function"
    },
    {
      "snippet": "vecdelay ${1:iFunctionTable}, ${2:ifnIn}, ${3:ifnDel}, ${4:ielements}, ${5:imaxdel/*, iskip*/}",
      "displayText": "vecdelay iFunctionTable, ifnIn, ifnDel, ielements, imaxdel, iskip",
      "opcode": "vecdelay",
      "description": "Vectorial Control-rate Delay Paths",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vecdelay.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "veloc ${1:ilow/*, ihigh*/}",
      "displayText": "veloc ilow, ihigh",
      "opcode": "veloc",
      "description": "Get the velocity from a MIDI event.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/veloc.html",
      "type": "function"
    },
    {
      "snippet": "vexp ${1:iFunctionTable}, ${2:kval}, ${3:kelements/*, kdstoffset, kverbose*/}",
      "displayText": "vexp iFunctionTable, kval, kelements, kdstoffset, kverbose",
      "opcode": "vexp",
      "description": "Performs power-of operations between a vector and a scalar",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vexp.html",
      "type": "function"
    },
    {
      "snippet": "vexp_i ${1:iFunctionTable}, ${2:ival}, ${3:ielements/*, idstoffset*/}",
      "displayText": "vexp_i iFunctionTable, ival, ielements, idstoffset",
      "opcode": "vexp_i",
      "description": "Performs power-of operations between a vector and a scalar",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vexp_i.html",
      "type": "function"
    },
    {
      "snippet": "vexpseg ${1:ifnout}, ${2:ielements}, ${3:ifn1…}",
      "displayText": "vexpseg ifnout, ielements, ifn1",
      "opcode": "vexpseg",
      "description": "Vectorial envelope generator",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vexpseg.html",
      "type": "function"
    },
    {
      "snippet": "vexpv ${1:ifn1}, ${2:ifn2}, ${3:kelements/*, kdstoffset, ksrcoffset, kverbose*/}",
      "displayText": "vexpv ifn1, ifn2, kelements, kdstoffset, ksrcoffset, kverbose",
      "opcode": "vexpv",
      "description": "Performs exponential operations between two vectorial control signals",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vexpv.html",
      "type": "function"
    },
    {
      "snippet": "vexpv_i ${1:ifn1}, ${2:ifn2}, ${3:ielements/*, idstoffset, isrcoffset*/}",
      "displayText": "vexpv_i ifn1, ifn2, ielements, idstoffset, isrcoffset",
      "opcode": "vexpv_i",
      "description": "Performs exponential operations between two vectorial control signals at init time.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vexpv_i.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "vibes ${1:kAmplitude}, ${2:kFrequency}, ${3:ihrd}, ${4:ipos}, ${5:imp}, ${6:kvibf}, ${7:kvamp}, ${8:ivibfn}, ${9:iDecayTime}",
      "displayText": "vibes kAmplitude, kFrequency, ihrd, ipos, imp, kvibf, kvamp, ivibfn, iDecayTime",
      "opcode": "vibes",
      "description": "Physical model related to the striking of a metal block.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vibes.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "vibr ${1:kAverageAmp}, ${2:kAverageFreq}, ${3:iFunctionTable}",
      "displayText": "vibr kAverageAmp, kAverageFreq, iFunctionTable",
      "opcode": "vibr",
      "description": "Easier-to-use user-controllable vibrato.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vibr.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "vibrato ${1:kAverageAmp}, ${2:kAverageFreq}, ${3:kRandAmountAmp}, ${4:kRandAmountFreq}, ${5:kAmpMinRate}, ${6:kAmpMaxRate}, ${7:kcpsMinRate}, ${8:kcpsMaxRate}, ${9:iFunctionTable/*, iInitialPhase*/}",
      "displayText": "vibrato kAverageAmp, kAverageFreq, kRandAmountAmp, kRandAmountFreq, kAmpMinRate, kAmpMaxRate, kcpsMinRate, kcpsMaxRate, iFunctionTable, iInitialPhase",
      "opcode": "vibrato",
      "description": "Generates a natural-sounding user-controllable vibrato.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vibrato.html",
      "type": "function"
    },
    {
      "snippet": "vincr ${1:accum}, ${2:aincr}",
      "displayText": "vincr accum, aincr",
      "opcode": "vincr",
      "description": "Accumulates audio signals.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vincr.html",
      "type": "function"
    },
    {
      "snippet": "vlimit ${1:iFunctionTable}, ${2:kmin}, ${3:kmax}, ${4:ielements}",
      "displayText": "vlimit iFunctionTable, kmin, kmax, ielements",
      "opcode": "vlimit",
      "description": "Limiting and Wrapping Vectorial Signals",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vlimit.html",
      "type": "function"
    },
    {
      "snippet": "vlinseg ${1:ifnout}, ${2:ielements}, ${3:ifn1…}",
      "displayText": "vlinseg ifnout, ielements, ifn1",
      "opcode": "vlinseg",
      "description": "Vectorial envelope generator",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vlinseg.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "vlowres ${1:aSignal}, ${2:kfco}, ${3:kres}, ${4:iord}, ${5:ksep}",
      "displayText": "vlowres aSignal, kfco, kres, iord, ksep",
      "opcode": "vlowres",
      "description": "A bank of filters in which the cutoff frequency can be separated under user control.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vlowres.html",
      "type": "function"
    },
    {
      "snippet": "vmap ${1:ifn1}, ${2:ifn2}, ${3:ielements/*, idstoffset, isrcoffset*/}",
      "displayText": "vmap ifn1, ifn2, ielements, idstoffset, isrcoffset",
      "opcode": "vmap",
      "description": "Maps elements from a vector according to indexes contained in another vector.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vmap.html",
      "type": "function"
    },
    {
      "snippet": "vmirror ${1:iFunctionTable}, ${2:kmin}, ${3:kmax}, ${4:ielements}",
      "displayText": "vmirror iFunctionTable, kmin, kmax, ielements",
      "opcode": "vmirror",
      "description": "Limiting and Wrapping Vectorial Signals",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vmirror.html",
      "type": "function"
    },
    {
      "snippet": "vmult ${1:iFunctionTable}, ${2:kval}, ${3:kelements/*, kdstoffset, kverbose*/}",
      "displayText": "vmult iFunctionTable, kval, kelements, kdstoffset, kverbose",
      "opcode": "vmult",
      "description": "Multiplies a vector in a table by a scalar value.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vmult.html",
      "type": "function"
    },
    {
      "snippet": "vmult_i ${1:iFunctionTable}, ${2:ival}, ${3:ielements/*, idstoffset*/}",
      "displayText": "vmult_i iFunctionTable, ival, ielements, idstoffset",
      "opcode": "vmult_i",
      "description": "Multiplies a vector in a table by a scalar value.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vmult_i.html",
      "type": "function"
    },
    {
      "snippet": "vmultv ${1:ifn1}, ${2:ifn2}, ${3:kelements/*, kdstoffset, ksrcoffset, kverbose*/}",
      "displayText": "vmultv ifn1, ifn2, kelements, kdstoffset, ksrcoffset, kverbose",
      "opcode": "vmultv",
      "description": "Performs mutiplication between two vectorial control signals",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vmultv.html",
      "type": "function"
    },
    {
      "snippet": "vmultv_i ${1:ifn1}, ${2:ifn2}, ${3:ielements/*, idstoffset, isrcoffset*/}",
      "displayText": "vmultv_i ifn1, ifn2, ielements, idstoffset, isrcoffset",
      "opcode": "vmultv_i",
      "description": "Performs mutiplication between two vectorial control signals at init time.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vmultv_i.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "voice ${1:kAmplitude}, ${2:kFrequency}, ${3:kphoneme}, ${4:kform}, ${5:kvibf}, ${6:kvamp}, ${7:iFunctionTable}, ${8:ivfn}",
      "displayText": "voice kAmplitude, kFrequency, kphoneme, kform, kvibf, kvamp, iFunctionTable, ivfn",
      "opcode": "voice",
      "description": "An emulation of a human voice.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/voice.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "vosim ${1:kAmplitude}, ${2:kFund}, ${3:kForm}, ${4:kDecay}, ${5:kPulseCount}, ${6:kPulseFactor}, ${7:iFunctionTable/*, iskip*/}",
      "displayText": "vosim kAmplitude, kFund, kForm, kDecay, kPulseCount, kPulseFactor, iFunctionTable, iskip",
      "opcode": "vosim",
      "description": "Simple vocal simulation based on glottal pulses with formant characteristics.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vosim.html",
      "type": "function"
    },
    {
      "snippet": "vphaseseg ${1:kphase}, ${2:ioutab}, ${3:ielems}, ${4:itab1…}",
      "displayText": "vphaseseg kphase, ioutab, ielems, itab1",
      "opcode": "vphaseseg",
      "description": "Allows one-dimensional HVS (Hyper-Vectorial Synthesis).",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vphaseseg.html",
      "type": "function"
    },
    {
      "snippet": "vport ${1:iFunctionTable}, ${2:khtime}, ${3:ielements/*, ifnInit*/}",
      "displayText": "vport iFunctionTable, khtime, ielements, ifnInit",
      "opcode": "vport",
      "description": "Vectorial Control-rate Delay Paths",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vport.html",
      "type": "function"
    },
    {
      "snippet": "vpow ${1:iFunctionTable}, ${2:kval}, ${3:kelements/*, kdstoffset, kverbose*/}",
      "displayText": "vpow iFunctionTable, kval, kelements, kdstoffset, kverbose",
      "opcode": "vpow",
      "description": "Raises each element of a vector to a scalar power.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vpow.html",
      "type": "function"
    },
    {
      "snippet": "vpow_i ${1:iFunctionTable}, ${2:ival}, ${3:ielements/*, idstoffset*/}",
      "displayText": "vpow_i iFunctionTable, ival, ielements, idstoffset",
      "opcode": "vpow_i",
      "description": "Raises each element of a vector to a scalar power",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vpow_i.html",
      "type": "function"
    },
    {
      "snippet": "vpowv ${1:ifn1}, ${2:ifn2}, ${3:kelements/*, kdstoffset, ksrcoffset, kverbose*/}",
      "displayText": "vpowv ifn1, ifn2, kelements, kdstoffset, ksrcoffset, kverbose",
      "opcode": "vpowv",
      "description": "Performs power-of operations between two vectorial control signals",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vpowv.html",
      "type": "function"
    },
    {
      "snippet": "vpowv_i ${1:ifn1}, ${2:ifn2}, ${3:ielements/*, idstoffset, isrcoffset*/}",
      "displayText": "vpowv_i ifn1, ifn2, ielements, idstoffset, isrcoffset",
      "opcode": "vpowv_i",
      "description": "Performs power-of operations between two vectorial control signals at init time.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vpowv_i.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "vpvoc ${1:ktimpnt}, ${2:kfmod}, ${3:(S|i)file/*, ispecwp, iFunctionTable*/}",
      "displayText": "vpvoc ktimpnt, kfmod, (S|i)file, ispecwp, iFunctionTable",
      "opcode": "vpvoc",
      "description": "Implements signal reconstruction using an fft-based phase vocoder and an extra envelope.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vpvoc.html",
      "type": "function"
    },
    {
      "snippet": "vrandh ${1:iFunctionTable}, ${2:krange}, ${3:kFrequency}, ${4:ielements/*, idstoffset, iseed, isize, ioffset*/}",
      "displayText": "vrandh iFunctionTable, krange, kFrequency, ielements, idstoffset, iseed, isize, ioffset",
      "opcode": "vrandh",
      "description": "Generates a vector of random numbers stored into a table, holding the values for a period of time.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vrandh.html",
      "type": "function"
    },
    {
      "snippet": "vrandi ${1:iFunctionTable}, ${2:krange}, ${3:kFrequency}, ${4:ielements/*, idstoffset, iseed, isize, ioffset*/}",
      "displayText": "vrandi iFunctionTable, krange, kFrequency, ielements, idstoffset, iseed, isize, ioffset",
      "opcode": "vrandi",
      "description": "Generate a sort of 'vectorial band-limited noise'",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vrandi.html",
      "type": "function"
    },
    {
      "snippet": "vsubv ${1:ifn1}, ${2:ifn2}, ${3:kelements/*, kdstoffset, ksrcoffset, kverbose*/}",
      "displayText": "vsubv ifn1, ifn2, kelements, kdstoffset, ksrcoffset, kverbose",
      "opcode": "vsubv",
      "description": "Performs subtraction between two vectorial control signals",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vsubv.html",
      "type": "function"
    },
    {
      "snippet": "vsubv_i ${1:ifn1}, ${2:ifn2}, ${3:ielements/*, idstoffset, isrcoffset*/}",
      "displayText": "vsubv_i ifn1, ifn2, ielements, idstoffset, isrcoffset",
      "opcode": "vsubv_i",
      "description": "Performs subtraction between two vectorial control signals at init time.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vsubv_i.html",
      "type": "function"
    },
    {
      "snippet": "vtaba ${1:andx}, ${2:iFunctionTable}, ${3:aout1…}",
      "displayText": "vtaba andx, iFunctionTable, aout1",
      "opcode": "vtaba",
      "description": "Read vectors (from tables -or arrays of vectors).",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vtaba.html",
      "type": "function"
    },
    {
      "snippet": "vtabi ${1:indx}, ${2:iFunctionTable}, ${3:iout1…}",
      "displayText": "vtabi indx, iFunctionTable, iout1",
      "opcode": "vtabi",
      "description": "Read vectors (from tables -or arrays of vectors).",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vtabi.html",
      "type": "function"
    },
    {
      "snippet": "vtabk ${1:kndx}, ${2:iFunctionTable}, ${3:kout1…}",
      "displayText": "vtabk kndx, iFunctionTable, kout1",
      "opcode": "vtabk",
      "description": "Read vectors (from tables -or arrays of vectors).",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vtabk.html",
      "type": "function"
    },
    {
      "snippet": "vtable1k ${1:kFunctionTable}, ${2:kout1…}",
      "displayText": "vtable1k kFunctionTable, kout1",
      "opcode": "vtable1k",
      "description": "Read a vector (several scalars simultaneously) from a table.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vtable1k.html",
      "type": "function"
    },
    {
      "snippet": "vtablea ${1:andx}, ${2:kFunctionTable}, ${3:kinterp}, ${4:ixmode}, ${5:aout1…}",
      "displayText": "vtablea andx, kFunctionTable, kinterp, ixmode, aout1",
      "opcode": "vtablea",
      "description": "Read vectors (from tables -or arrays of vectors).",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vtablea.html",
      "type": "function"
    },
    {
      "snippet": "vtablei ${1:indx}, ${2:iFunctionTable}, ${3:interp}, ${4:ixmode}, ${5:iout1…}",
      "displayText": "vtablei indx, iFunctionTable, interp, ixmode, iout1",
      "opcode": "vtablei",
      "description": "Read vectors (from tables -or arrays of vectors).",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vtablei.html",
      "type": "function"
    },
    {
      "snippet": "vtablek ${1:kndx}, ${2:kFunctionTable}, ${3:kinterp}, ${4:ixmode}, ${5:kout1…}",
      "displayText": "vtablek kndx, kFunctionTable, kinterp, ixmode, kout1",
      "opcode": "vtablek",
      "description": "Read vectors (from tables -or arrays of vectors).",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vtablek.html",
      "type": "function"
    },
    {
      "snippet": "vtablewa ${1:andx}, ${2:kFunctionTable}, ${3:ixmode}, ${4:ainarg1…}",
      "displayText": "vtablewa andx, kFunctionTable, ixmode, ainarg1",
      "opcode": "vtablewa",
      "description": "Write vectors (to tables -or arrays of vectors).",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vtablewa.html",
      "type": "function"
    },
    {
      "snippet": "vtablewi ${1:indx}, ${2:iFunctionTable}, ${3:ixmode}, ${4:inarg1…}",
      "displayText": "vtablewi indx, iFunctionTable, ixmode, inarg1",
      "opcode": "vtablewi",
      "description": "Write vectors (to tables -or arrays of vectors).",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vtablewi.html",
      "type": "function"
    },
    {
      "snippet": "vtablewk ${1:kndx}, ${2:kFunctionTable}, ${3:ixmode}, ${4:kinarg1…}",
      "displayText": "vtablewk kndx, kFunctionTable, ixmode, kinarg1",
      "opcode": "vtablewk",
      "description": "Write vectors (to tables -or arrays of vectors).",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vtablewk.html",
      "type": "function"
    },
    {
      "snippet": "vtabwa ${1:andx}, ${2:iFunctionTable}, ${3:ainarg1…}",
      "displayText": "vtabwa andx, iFunctionTable, ainarg1",
      "opcode": "vtabwa",
      "description": "Write vectors (to tables -or arrays of vectors).",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vtabwa.html",
      "type": "function"
    },
    {
      "snippet": "vtabwi ${1:indx}, ${2:iFunctionTable}, ${3:inarg1…}",
      "displayText": "vtabwi indx, iFunctionTable, inarg1",
      "opcode": "vtabwi",
      "description": "Write vectors (to tables -or arrays of vectors).",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vtabwi.html",
      "type": "function"
    },
    {
      "snippet": "vtabwk ${1:kndx}, ${2:iFunctionTable}, ${3:kinarg1…}",
      "displayText": "vtabwk kndx, iFunctionTable, kinarg1",
      "opcode": "vtabwk",
      "description": "Write vectors (to tables -or arrays of vectors).",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vtabwk.html",
      "type": "function"
    },
    {
      "snippet": "vwrap ${1:iFunctionTable}, ${2:kmin}, ${3:kmax}, ${4:ielements}",
      "displayText": "vwrap iFunctionTable, kmin, kmax, ielements",
      "opcode": "vwrap",
      "description": "Limiting and Wrapping Vectorial Signals",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/vwrap.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "waveset ${1:ain}, ${2:krep/*, ilen*/}",
      "displayText": "waveset ain, krep, ilen",
      "opcode": "waveset",
      "description": "A simple time stretch by repeating cycles.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/waveset.html",
      "type": "function"
    },
    {
      "leftLabel": "*",
      "snippet": "websocket ${1:iport}, ${2:(a|i|k|S)in}",
      "displayText": "websocket iport, (a|i|k|S)in",
      "opcode": "websocket",
      "description": "Read and write signals and arrays using a websocket connection.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/websocket.html",
      "type": "function"
    },
    {
      "leftLabel": "aik",
      "snippet": "weibull ${1:ksigma}, ${2:ktau}",
      "displayText": "weibull ksigma, ktau",
      "opcode": "weibull",
      "description": "Weibull distribution random number generator (positive values only).",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/weibull.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "wgbow ${1:kAmplitude}, ${2:kFrequency}, ${3:kpres}, ${4:krat}, ${5:kvibf}, ${6:kvamp/*, iFunctionTable, iminfreq*/}",
      "displayText": "wgbow kAmplitude, kFrequency, kpres, krat, kvibf, kvamp, iFunctionTable, iminfreq",
      "opcode": "wgbow",
      "description": "Creates a tone similar to a bowed string.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/wgbow.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "wgbowedbar ${1:kAmplitude}, ${2:kFrequency}, ${3:kpos}, ${4:kbowpres}, ${5:kgain/*, iconst, itvel, ibowpos, ilow*/}",
      "displayText": "wgbowedbar kAmplitude, kFrequency, kpos, kbowpres, kgain, iconst, itvel, ibowpos, ilow",
      "opcode": "wgbowedbar",
      "description": "A physical model of a bowed bar.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/wgbowedbar.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "wgbrass ${1:kAmplitude}, ${2:kFrequency}, ${3:ktens}, ${4:iatt}, ${5:kvibf}, ${6:kvamp/*, iFunctionTable, iminfreq*/}",
      "displayText": "wgbrass kAmplitude, kFrequency, ktens, iatt, kvibf, kvamp, iFunctionTable, iminfreq",
      "opcode": "wgbrass",
      "description": "Creates a tone related to a brass instrument.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/wgbrass.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "wgclar ${1:kAmplitude}, ${2:kFrequency}, ${3:kstiff}, ${4:iatt}, ${5:idetk}, ${6:kngain}, ${7:kvibf}, ${8:kvamp/*, iFunctionTable, iminfreq*/}",
      "displayText": "wgclar kAmplitude, kFrequency, kstiff, iatt, idetk, kngain, kvibf, kvamp, iFunctionTable, iminfreq",
      "opcode": "wgclar",
      "description": "Creates a tone similar to a clarinet.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/wgclar.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "wgflute ${1:kAmplitude}, ${2:kFrequency}, ${3:kjet}, ${4:iatt}, ${5:idetk}, ${6:kngain}, ${7:kvibf}, ${8:kvamp/*, iFunctionTable, iminfreq, ijetrf, iendrf*/}",
      "displayText": "wgflute kAmplitude, kFrequency, kjet, iatt, idetk, kngain, kvibf, kvamp, iFunctionTable, iminfreq, ijetrf, iendrf",
      "opcode": "wgflute",
      "description": "Creates a tone similar to a flute.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/wgflute.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "wgpluck ${1:iFrequency}, ${2:iAmplitude}, ${3:kpick}, ${4:iplk}, ${5:idamp}, ${6:ifilt}, ${7:axcite}",
      "displayText": "wgpluck iFrequency, iAmplitude, kpick, iplk, idamp, ifilt, axcite",
      "opcode": "wgpluck",
      "description": "A high fidelity simulation of a plucked string.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/wgpluck.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "wgpluck2 ${1:iplk}, ${2:kAmplitude}, ${3:iFrequency}, ${4:kpick}, ${5:krefl}",
      "displayText": "wgpluck2 iplk, kAmplitude, iFrequency, kpick, krefl",
      "opcode": "wgpluck2",
      "description": "Physical model of the plucked string.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/wgpluck2.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "wguide1 ${1:aSignal}, ${2:(a|k)Frequency}, ${3:kcutoff}, ${4:kfeedback}",
      "displayText": "wguide1 aSignal, (a|k)Frequency, kcutoff, kfeedback",
      "opcode": "wguide1",
      "description": "A simple waveguide model consisting of one delay-line and one first-order lowpass filter.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/wguide1.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "wguide2 ${1:aSignal}, ${2:(a|k)freq1}, ${3:(a|k)freq2}, ${4:kcutoff1}, ${5:kcutoff2}, ${6:kfeedback1}, ${7:kfeedback2}",
      "displayText": "wguide2 aSignal, (a|k)freq1, (a|k)freq2, kcutoff1, kcutoff2, kfeedback1, kfeedback2",
      "opcode": "wguide2",
      "description": "A model of beaten plate consisting of two parallel delay-lines and two first-order lowpass filters.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/wguide2.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "wiiconnect ${1:itimeout/*, imaxnum*/}",
      "displayText": "wiiconnect itimeout, imaxnum",
      "opcode": "wiiconnect",
      "description": "Reads data from a number of external Nintendo Wiimote controllers.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/wiiconnect.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "wiidata ${1:kcontrol/*, inum*/}",
      "displayText": "wiidata kcontrol, inum",
      "opcode": "wiidata",
      "description": "Reads data fields from a number of external Nintendo Wiimote controllers.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/wiidata.html",
      "type": "function"
    },
    {
      "snippet": "wiirange ${1:icontrol}, ${2:iminimum}, ${3:imaximum/*, inum*/}",
      "displayText": "wiirange icontrol, iminimum, imaximum, inum",
      "opcode": "wiirange",
      "description": "Sets scaling and range limits for certain Wiimote fields.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/wiirange.html",
      "type": "function"
    },
    {
      "snippet": "wiisend ${1:kcontrol}, ${2:kvalue/*, inum*/}",
      "displayText": "wiisend kcontrol, kvalue, inum",
      "opcode": "wiisend",
      "description": "Sends data to one of a number of external Nintendo Wiimote controllers.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/wiisend.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "window ${1:kin/*, koff, itype*/}",
      "displayText": "window kin, koff, itype",
      "opcode": "window",
      "description": "Applies a window to an array.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/window.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "wrap ${1:aSignal}, ${2:klow}, ${3:khigh}",
      "displayText": "wrap aSignal, klow, khigh",
      "opcode": "wrap",
      "description": "Wraps-around the signal that exceeds the low and high thresholds.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/wrap.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "wrap ${1:iSignal}, ${2:ilow}, ${3:ihigh}",
      "displayText": "wrap iSignal, ilow, ihigh",
      "opcode": "wrap",
      "description": "Wraps-around the signal that exceeds the low and high thresholds.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/wrap.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "wrap ${1:kSignal}, ${2:klow}, ${3:khigh}",
      "displayText": "wrap kSignal, klow, khigh",
      "opcode": "wrap",
      "description": "Wraps-around the signal that exceeds the low and high thresholds.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/wrap.html",
      "type": "function"
    },
    {
      "snippet": "writescratch ${1:ival/*, iIndex*/}",
      "displayText": "writescratch ival, iIndex",
      "opcode": "writescratch",
      "description": "writes a value into the scratchpad of the instance of an instrument.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/writescratch.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "wterrain ${1:kAmplitude}, ${2:kpch}, ${3:k_xcenter}, ${4:k_ycenter}, ${5:k_xradius}, ${6:k_yradius}, ${7:itabx}, ${8:itaby}",
      "displayText": "wterrain kAmplitude, kpch, k_xcenter, k_ycenter, k_xradius, k_yradius, itabx, itaby",
      "opcode": "wterrain",
      "description": "A simple wave-terrain synthesis opcode.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/wterrain.html",
      "type": "function"
    },
    {
      "leftLabel": "ak",
      "snippet": "xadsr ${1:iatt}, ${2:iDecayTime}, ${3:islev}, ${4:irel/*, iDelayTime*/}",
      "displayText": "xadsr iatt, iDecayTime, islev, irel, iDelayTime",
      "opcode": "xadsr",
      "description": "Calculates the classical ADSR envelope.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/xadsr.html",
      "type": "function"
    },
    {
      "leftLabel": "kk",
      "snippet": "xscanmap ${1:iscan}, ${2:kAmplitude}, ${3:kvamp/*, iwhich*/}",
      "displayText": "xscanmap iscan, kAmplitude, kvamp, iwhich",
      "opcode": "xscanmap",
      "description": "Allows the position and velocity of a node in a scanned process to be read.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/xscanmap.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "xscans ${1:kAmplitude}, ${2:kFrequency}, ${3:ifntraj}, ${4:id/*, iorder*/}",
      "displayText": "xscans kAmplitude, kFrequency, ifntraj, id, iorder",
      "opcode": "xscans",
      "description": "Fast scanned synthesis waveform and the wavetable generator.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/xscans.html",
      "type": "function"
    },
    {
      "snippet": "xscansmap ${1:kpos}, ${2:kvel}, ${3:iscan}, ${4:kAmplitude}, ${5:kvamp/*, iwhich*/}",
      "displayText": "xscansmap kpos, kvel, iscan, kAmplitude, kvamp, iwhich",
      "opcode": "xscansmap",
      "description": "Allows the position and velocity of a node in a scanned process to be read.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/xscansmap.html",
      "type": "function"
    },
    {
      "leftLabel": "",
      "snippet": "xscanu ${1:init}, ${2:irate}, ${3:ifnvel}, ${4:ifnmass}, ${5:(S|i)fnstif}, ${6:ifncentr}, ${7:ifndamp}, ${8:kmass}, ${9:kstif}, ${10:kcentr}, ${11:kdamp}, ${12:ileft}, ${13:iright}, ${14:kpos}, ${15:kstrngth}, ${16:ain}, ${17:idisp}, ${18:id}",
      "displayText": "xscanu init, irate, ifnvel, ifnmass, (S|i)fnstif, ifncentr, ifndamp, kmass, kstif, kcentr, kdamp, ileft, iright, kpos, kstrngth, ain, idisp, id",
      "opcode": "xscanu",
      "description": "Compute the waveform and the wavetable for use in scanned synthesis.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/xscanu.html",
      "type": "function"
    },
    {
      "snippet": "xtratim ${1:iextradur}",
      "displayText": "xtratim iextradur",
      "opcode": "xtratim",
      "description": "Extend the duration of real-time generated events.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/xtratim.html",
      "type": "function"
    },
    {
      "leftLabel": "kk",
      "snippet": "xyin ${1:iprd}, ${2:ixmin}, ${3:ixmax}, ${4:iymin}, ${5:iymax/*, ixinit, iyinit*/}",
      "displayText": "xyin iprd, ixmin, ixmax, iymin, iymax, ixinit, iyinit",
      "opcode": "xyin",
      "description": "Sense the cursor position in an output window",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/xyin.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "xyscale ${1:kx}, ${2:ky}, ${3:(i|k)00}, ${4:(i|k)10}, ${5:(i|k)01}, ${6:(i|k)11}",
      "displayText": "xyscale kx, ky, (i|k)00, (i|k)10, (i|k)01, (i|k)11",
      "opcode": "xyscale",
      "description": "2D linear interpolation",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/xyscale.html",
      "type": "function"
    },
    {
      "snippet": "zacl ${1:kfirst}, ${2:klast}",
      "displayText": "zacl kfirst, klast",
      "opcode": "zacl",
      "description": "Clears one or more variables in the za space.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/zacl.html",
      "type": "function"
    },
    {
      "snippet": "zakinit ${1:isizea}, ${2:isizek}",
      "displayText": "zakinit isizea, isizek",
      "opcode": "zakinit",
      "description": "Establishes zak space.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/zakinit.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "zamod ${1:aSignal}, ${2:kzamod}",
      "displayText": "zamod aSignal, kzamod",
      "opcode": "zamod",
      "description": "Modulates one a-rate signal by a second one.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/zamod.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "zar ${1:kndx}",
      "displayText": "zar kndx",
      "opcode": "zar",
      "description": "Reads from a location in za space at a-rate.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/zar.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "zarg ${1:kndx}, ${2:kgain}",
      "displayText": "zarg kndx, kgain",
      "opcode": "zarg",
      "description": "Reads from a location in za space at a-rate, adds some gain.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/zarg.html",
      "type": "function"
    },
    {
      "snippet": "zaw ${1:aSignal}, ${2:kndx}",
      "displayText": "zaw aSignal, kndx",
      "opcode": "zaw",
      "description": "Writes to a za variable at a-rate without mixing.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/zaw.html",
      "type": "function"
    },
    {
      "snippet": "zawm ${1:aSignal}, ${2:kndx/*, imix*/}",
      "displayText": "zawm aSignal, kndx, imix",
      "opcode": "zawm",
      "description": "Writes to a za variable at a-rate with mixing.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/zawm.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "zdf_1pole ${1:ain}, ${2:(a|k)cf/*, kmode, istor*/}",
      "displayText": "zdf_1pole ain, (a|k)cf, kmode, istor",
      "opcode": "zdf_1pole",
      "description": "Zero-delay feedback implementation of 1 pole filter.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/zdf_1pole.html",
      "type": "function"
    },
    {
      "leftLabel": "aa",
      "snippet": "zdf_1pole_mode ${1:ain}, ${2:(a|k)cf/*, istor*/}",
      "displayText": "zdf_1pole_mode ain, (a|k)cf, istor",
      "opcode": "zdf_1pole_mode",
      "description": "Zero-delay feedback implementation of 1 pole filter with multimode output.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/zdf_1pole_mode.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "zdf_2pole ${1:ain}, ${2:(a|k)cf}, ${3:(a|k)Q/*, kmode, istor*/}",
      "displayText": "zdf_2pole ain, (a|k)cf, (a|k)Q, kmode, istor",
      "opcode": "zdf_2pole",
      "description": "Zero-delay feedback implementation of 2 pole filter.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/zdf_2pole.html",
      "type": "function"
    },
    {
      "leftLabel": "aaa",
      "snippet": "zdf_2pole_mode ${1:ain}, ${2:(a|k)cf}, ${3:(a|k)/*, istor*/}",
      "displayText": "zdf_2pole_mode ain, (a|k)cf, (a|k), istor",
      "opcode": "zdf_2pole_mode",
      "description": "Zero-delay feedback implementation of 2 pole filter with multimode output.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/zdf_2pole_mode.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "zdf_ladder ${1:ain}, ${2:(a|k)cf}, ${3:(a|k)Q/*, istor*/}",
      "displayText": "zdf_ladder ain, (a|k)cf, (a|k)Q, istor",
      "opcode": "zdf_ladder",
      "description": "Zero-delay feedback implementation of 4 pole ladder filter.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/zdf_ladder.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "zfilter2 ${1:aSignal}, ${2:kdamp}, ${3:kFrequency}, ${4:iM}, ${5:iN}, ${6:ib0…}",
      "displayText": "zfilter2 aSignal, kdamp, kFrequency, iM, iN, ib0",
      "opcode": "zfilter2",
      "description": "Performs filtering using a transposed form-II digital filter lattice with radial pole-shearing and angular pole-warping.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/zfilter2.html",
      "type": "function"
    },
    {
      "leftLabel": "i",
      "snippet": "zir ${1:indx}",
      "displayText": "zir indx",
      "opcode": "zir",
      "description": "Reads from a location in zk space at i-rate.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/zir.html",
      "type": "function"
    },
    {
      "snippet": "ziw ${1:iSignal}, ${2:indx}",
      "displayText": "ziw iSignal, indx",
      "opcode": "ziw",
      "description": "Writes to a zk variable at i-rate without mixing.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ziw.html",
      "type": "function"
    },
    {
      "snippet": "ziwm ${1:iSignal}, ${2:indx/*, imix*/}",
      "displayText": "ziwm iSignal, indx, imix",
      "opcode": "ziwm",
      "description": "Writes to a zk variable to an i-rate variable with mixing.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/ziwm.html",
      "type": "function"
    },
    {
      "snippet": "zkcl ${1:kfirst}, ${2:klast}",
      "displayText": "zkcl kfirst, klast",
      "opcode": "zkcl",
      "description": "Clears one or more variables in the zk space.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/zkcl.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "zkmod ${1:kSignal}, ${2:kzkmod}",
      "displayText": "zkmod kSignal, kzkmod",
      "opcode": "zkmod",
      "description": "Facilitates the modulation of one signal by another.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/zkmod.html",
      "type": "function"
    },
    {
      "leftLabel": "k",
      "snippet": "zkr ${1:kndx}",
      "displayText": "zkr kndx",
      "opcode": "zkr",
      "description": "Reads from a location in zk space at k-rate.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/zkr.html",
      "type": "function"
    },
    {
      "snippet": "zkw ${1:kSignal}, ${2:kndx}",
      "displayText": "zkw kSignal, kndx",
      "opcode": "zkw",
      "description": "Writes to a zk variable at k-rate without mixing.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/zkw.html",
      "type": "function"
    },
    {
      "snippet": "zkwm ${1:kSignal}, ${2:kndx/*, imix*/}",
      "displayText": "zkwm kSignal, kndx, imix",
      "opcode": "zkwm",
      "description": "Writes to a zk variable at k-rate with mixing.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/zkwm.html",
      "type": "function"
    },
    {
      "snippet": "alwayson ${1:(i|S)Instrument/*, p4, p5, …*/}",
      "displayText": "alwayson (i|S)Instrument, p4, p5, …",
      "opcode": "alwayson",
      "description": "Activates the indicated instrument in the orchestra header.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/alwayson.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "changed2 ${1:kVariableName1/*, kVariableName2, …*/}",
      "displayText": "changed2 kVariableName1, kVariableName2, …",
      "opcode": "changed2",
      "description": "k-rate signal change detector.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/changed2.html",
      "type": "function"
    },
    {
      "leftLabel": "k[]",
      "snippet": "framebuffer ${1:aInput}, ${2:iSize}",
      "displayText": "framebuffer aInput, iSize",
      "opcode": "framebuffer",
      "description": "Read audio signals into 1 dimensional k-rate arrays and vice-versa with a specified buffer size.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/framebuffer.html",
      "type": "function"
    },
    {
      "leftLabel": "a",
      "snippet": "framebuffer ${1:kInput}, ${2:iSize}",
      "displayText": "framebuffer kInput, iSize",
      "opcode": "framebuffer",
      "description": "Read audio signals into 1 dimensional k-rate arrays and vice-versa with a specified buffer size.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/framebuffer.html",
      "type": "function"
    },
    {
      "leftLabel": "(a|k|i|S)…",
      "snippet": "hdf5read ${1:Sfilename}, ${2:SVariableName1/*, SVariableName2, …*/}",
      "displayText": "hdf5read Sfilename, SVariableName1, SVariableName2, …",
      "opcode": "hdf5read",
      "description": "Read signals and arrays from an hdf5 file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/hdf5read.html",
      "type": "function"
    },
    {
      "snippet": "hdf5write ${1:Sfilename}, ${2:(a|i|k|S)Output1/*, (a|i|k|S)Output2, …*/}",
      "displayText": "hdf5write Sfilename, (a|i|k|S)Output1, (a|i|k|S)Output2, …",
      "opcode": "hdf5write",
      "description": "Write signals and arrays to an hdf5 file.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/hdf5write.html",
      "type": "function"
    },
    {
      "leftLabel": "(a|k|i|S)…",
      "snippet": "xin",
      "displayText": "xin",
      "opcode": "xin",
      "description": "Passes variables to a user-defined opcode block.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/xin.html",
      "type": "function"
    },
    {
      "snippet": "xout ${1:(a|i|k|S)Output1/*, (a|i|k|S)Output2, …*/}",
      "displayText": "xout (a|i|k|S)Output1, (a|i|k|S)Output2, …",
      "opcode": "xout",
      "description": "Retrieves variables from a user-defined opcode block.",
      "descriptionMoreURL": "https://csound.github.io/docs/manual/xout.html",
      "type": "function"
    }
  ]
}